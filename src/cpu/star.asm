; Generated by STARSCREAM version 0.26d
; For assembly by NASM only
;
; Options:
; *  CPU type: 68000 (24-bit addresses)
; *  Identifiers begin with "s68000"
; *  Stack calling conventions
; *  Hog mode: Off
;
bits 32
section .data align=16
bits 32
global _s68000context
times ($$-$)&7 db 0
_s68000context:
contextbegin:
__fetch                dd 0
__readbyte             dd 0
__readword             dd 0
__writebyte            dd 0
__writeword            dd 0
__s_fetch              dd 0
__s_readbyte           dd 0
__s_readword           dd 0
__s_writebyte          dd 0
__s_writeword          dd 0
__u_fetch              dd 0
__u_readbyte           dd 0
__u_readword           dd 0
__u_writebyte          dd 0
__u_writeword          dd 0
__resethandler         dd 0
__reg:
__dreg                 dd 0,0,0,0,0,0,0,0
__areg                 dd 0,0,0,0,0,0,0
__a7                   dd 0
__asp                  dd 0
__pc                   dd 0
__odometer             dd 0
__interrupts           db 0,0,0,0,0,0,0,0
__sr                   dw 0
__contextfiller00      dw 0
contextend:
__cycles_needed        dd 0
__cycles_leftover      dd 0
__fetch_region_start   dd 0
__fetch_region_end     dd 0
__xflag                db 0
__execinfo             db 0
__trace_trickybit      db 0
__filler               db 0
GLOBAL _s68000iocycle
_s68000iocycle:
__io_cycle_counter     dd -1
__io_fetchbase         dd 0
__io_fetchbased_pc     dd 0
__access_address       dd 0
save_01                dd 0
__FETCH_REGION_OFFSET  DD 0
__BACKUP_ESP           DD 0
__BUSERR_ADDR          DD 0
__BUSERR_STAT          DD 0
section .text align=16
bits 32
top:
EXTERN _s68000intack
EXTERN _s68000buserrlog
EXTERN _s68000addrerrlog
GLOBAL _s68000wait
_s68000wait:
MOV EAX,-1
CMP EAX,[__io_cycle_counter]
JZ .ret
MOV EAX,[ESP+4]
SUB [__io_cycle_counter],EAX
.ret:
INC EAX
RET
GLOBAL _s68000getcounter
_s68000getcounter:
MOV EAX,[__io_cycle_counter]
RET
GLOBAL _s68000buserr
_s68000buserr:
PUSH EBP
MOV EBP,ESP
MOV EAX,[ESP+12]
; upper - instruction, lower - function & bits (not 0)
MOV [__BUSERR_STAT],EAX
MOV EAX,[ESP+8]
MOV [__BUSERR_ADDR],EAX
XOR EAX,EAX
MOV [__access_address],EAX
POP EBP
RET
addr_error:
PUSHAD
MOV EAX,[__BUSERR_STAT]
AND EAX,00007FFFh
MOV [__BUSERR_STAT],EAX
PUSH EAX
MOV EAX,[__BUSERR_ADDR]
PUSH EAX
CALL _s68000addrerrlog
ADD ESP,8
POPAD
MOV EDX,0CH
JMP short bus_error0
bus_error:
TEST dword[__BUSERR_STAT],00008000h
JNZ addr_error
PUSHAD
MOV EAX,[__BUSERR_STAT]
PUSH EAX
MOV EAX,[__BUSERR_ADDR]
PUSH EAX
CALL _s68000buserrlog
ADD ESP,8
POPAD
MOV EDX,08H
bus_error0:
MOV ESP,[__BACKUP_ESP]
CALL group_1_exception
PUSH ESI
MOV EDX,[__a7]
SUB EDX,BYTE 2
MOV ECX,[__BUSERR_STAT]
ROR ECX,16
CALL writememoryword
SUB EDX,BYTE 4
MOV ECX,[__BUSERR_ADDR]
CALL writememorydword
SUB EDX, BYTE 2
MOV ECX,[__BUSERR_STAT]
CALL writememoryword
MOV [__a7],EDX
XOR ESI,ESI
MOV [__BUSERR_STAT],ESI
POP ESI
SUB EDI,BYTE 50
JMP execend
global _s68000init
global s68000init_
_s68000init:
s68000init_:
pushad
mov edi,__jmptbl
mov esi,__jmptblcomp
.decomp:
lodsd
mov ecx,eax
and eax,0FFFFFFh
shr ecx,24
add eax,top
inc ecx
.jloop:
mov [edi],eax
add edi,byte 4
dec ecx
jnz short .jloop
cmp edi,__jmptbl+262144
jne short .decomp
popad
xor eax,eax
MOV [__BUSERR_STAT],EAX
ret
global _s68000exec
global s68000exec_
_s68000exec:
s68000exec_:
mov eax,[esp+4]
test byte[__interrupts],1
jz .notstopped
test byte[__pc],1
jz .notfaulted
or eax,byte -1
ret
.notfaulted:
add [__odometer],eax
mov eax,80000000h
ret
.notstopped:
push ebp
push ebx
push ecx
push edx
push esi
push edi
MOV [__BACKUP_ESP],esp
mov [__cycles_needed],eax
mov edi,eax
dec edi
xor ebx,ebx
mov esi,[__pc]
mov al,[__sr]
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,[__sr]
and al,3
shr al,1
adc ah,ah
xor ebp,ebp
mov byte[__execinfo],1
call basefunction
add esi,ebp
test byte[__execinfo],2
jnz near exec_bounderror
mov dword[__cycles_leftover],0
exec_checkpoint:
js short execquit
mov cl,[__sr+1]
and ecx,byte 7
inc ecx
mov ch,[__interrupts]
or ch,ch
js short .yesint
shr ch,cl
jz short .noint
.yesint:
call flush_interrupts
test byte[__execinfo],2
jnz near exec_bounderror
.noint:
mov ch,[__sr+1]
and ch,80h
mov [__trace_trickybit],ch
jz short execloop
inc edi
add [__cycles_leftover],edi
or edi,byte -1
execloop:
MOV [__pc],ESI
mov bx,[esi]
add esi,byte 2
jmp dword[__jmptbl+ebx*4]
execend:
jns short execloop
execquit:
cmp byte[__trace_trickybit],0
je short execquit_notrace
mov edx,24h
call group_1_exception
sub edi,byte 34
execquit_notrace:
mov cl,[__sr+1]
and ecx,byte 7
inc ecx
mov ch,[__interrupts]
or ch,ch
js short execquit_yesinterrupt
shr ch,cl
jz short execquit_nointerrupt
execquit_yesinterrupt:
call flush_interrupts
test byte[__execinfo],2
jnz short exec_bounderror
execquit_nointerrupt:
add edi,[__cycles_leftover]
mov dword[__cycles_leftover],0
jns short execloop
mov ecx,80000000h
execexit:
sub esi,ebp
shr ah,1
adc ax,ax
and ax,0C003h
or ah,[__xflag]
ror ah,4
or al,ah
mov [__sr],al
mov [__pc],esi
inc edi
mov edx,[__cycles_needed]
sub edx,edi
add [__odometer],edx
mov byte[__execinfo],0
mov dword[__cycles_needed],0
mov dword[__io_cycle_counter],-1
mov eax,ecx
pop edi
pop esi
pop edx
pop ecx
pop ebx
pop ebp
ret
exec_bounderror:
mov ecx,80000001h
jmp short execexit
invalidins:
sub esi,byte 2
mov ecx,esi
sub ecx,ebp
and ecx,16777215
jmp short execexit
global _s68000reset
global s68000reset_
_s68000reset:
s68000reset_:
mov eax,1
test [__execinfo],al
jnz near .return
cmp dword[__s_fetch],0
je near .return
dec eax
mov [__execinfo],al
sub eax,byte 16
.gp:
mov dword[__reg+64+eax*4],0
inc eax
jnz short .gp
mov [__asp],eax
mov word[__sr],2700h
mov eax,[__s_fetch]
mov [__fetch],eax
mov eax,[__s_readbyte]
mov [__readbyte],eax
mov eax,[__s_readword]
mov [__readword],eax
mov eax,[__s_writebyte]
mov [__writebyte],eax
mov eax,[__s_writeword]
mov [__writeword],eax
mov eax,1
mov [__pc],eax
mov [__interrupts],al
push esi
push ebp
xor esi,esi
call basefunction
test byte[__execinfo],2
jnz short .exit
add esi,ebp
mov eax,[esi]
rol eax,16
mov [__a7],eax
mov eax,[esi+4]
rol eax,16
mov [__pc],eax
and eax,byte 1
mov [__interrupts],al
neg eax
.exit:
pop ebp
pop esi
.return:
ret
global _s68000interrupt
global s68000interrupt_
_s68000interrupt:
s68000interrupt_:
push edx
mov eax,[esp+8]
mov edx,[esp+12]
cmp eax,byte 7
ja short .badinput
or eax,eax
jz short .badinput
cmp edx,255
jg short .badinput
cmp edx,byte -2
jl short .badinput
jne short .notspurious
mov edx,18h
.notspurious:
or edx,edx
jns short .notauto
lea edx,[eax+18h]
.notauto:
push ecx
mov cl,al
mov ah,1
shl ah,cl
pop ecx
test [__interrupts],ah
jnz .failure
or [__interrupts],ah
mov ah,0
mov [__interrupts+eax],dl
and byte[__interrupts],0FEh
mov edx,[__io_cycle_counter]
inc edx
add [__cycles_leftover],edx
mov dword[__io_cycle_counter],-1
pop edx
xor eax,eax
ret
.failure:
pop edx
mov eax,1
ret
.badinput:
pop edx
mov eax,2
ret
global _s68000flushInterrupts
global s68000flushInterrupts_
_s68000flushInterrupts:
s68000flushInterrupts_:
test byte[__execinfo],1
jnz .noflush
pushad
mov esi,[__pc]
xor ebp,ebp
mov al,[__sr]
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,[__sr]
and al,3
shr al,1
adc ah,ah
xor edi,edi
call flush_interrupts
SUB ESI,EBP
sub [__odometer],edi
mov [__pc],esi
shr ah,1
adc ax,ax
and ax,0C003h
or ah,[__xflag]
ror ah,4
or al,ah
mov [__sr],al
popad
.noflush:
ret
global _s68000GetContextSize
global s68000GetContextSize_
_s68000GetContextSize:
s68000GetContextSize_:
mov eax,contextend-contextbegin
ret
global _s68000GetContext
global s68000GetContext_
_s68000GetContext:
s68000GetContext_:
push edx
push edi
mov edi,[esp+12]
%assign i 0
%rep ((contextend-contextbegin) / 8)
  mov eax,[contextbegin+i+0]
  mov edx,[contextbegin+i+4]
  mov [edi+i+0],eax
  mov [edi+i+4],edx
%assign i i+8
%endrep
%if ((contextend-contextbegin) % 8)!=0
  mov eax,[contextbegin+i+0]
  mov [edi+i+0],eax
%endif
pop edi
pop edx
xor eax,eax
ret
global _s68000SetContext
global s68000SetContext_
_s68000SetContext:
s68000SetContext_:
push edx
push esi
mov esi,[esp+12]
%assign i 0
%rep ((contextend-contextbegin) / 8)
  mov eax,[esi+i+0]
  mov edx,[esi+i+4]
  mov [contextbegin+i+0],eax
  mov [contextbegin+i+4],edx
%assign i i+8
%endrep
%if ((contextend-contextbegin) % 8)!=0
  mov eax,[esi+i+0]
  mov [contextbegin+i+0],eax
%endif
pop esi
pop edx
xor eax,eax
ret
global _s68000fetch
global s68000fetch_
_s68000fetch:
s68000fetch_:
mov eax,[esp+4]
push ebx
push esi
push edi
push ebp
push dword[__fetch]
mov ebx,[__s_fetch]
mov [__fetch],ebx
push dword[__fetch_region_start]
push dword[__fetch_region_end]
mov bl,[__execinfo]
push ebx
xor ebp,ebp
mov esi,eax
and byte[__execinfo],0FDh
call basefunction
test byte[__execinfo],2
mov eax,-1
jnz short .badfetch
add esi,ebp
inc eax
mov ax,[esi]
.badfetch:
pop ebx
mov [__execinfo],bl
pop dword[__fetch_region_end]
pop dword[__fetch_region_start]
pop dword[__fetch]
pop ebp
pop edi
pop esi
pop ebx
ret
global _s68000readOdometer
global s68000readOdometer_
_s68000readOdometer:
s68000readOdometer_:
mov eax,[__cycles_needed]
sub eax,[__io_cycle_counter]
dec eax
sub eax,[__cycles_leftover]
add eax,[__odometer]
ret
global _s68000tripOdometer
global s68000tripOdometer_
_s68000tripOdometer:
s68000tripOdometer_:
mov eax,[__cycles_needed]
sub eax,[__io_cycle_counter]
dec eax
sub eax,[__cycles_leftover]
add [__odometer],eax
mov eax,[__io_cycle_counter]
inc eax
mov [__cycles_needed],eax
mov eax,[__odometer]
mov dword[__odometer],0
ret
global _s68000controlOdometer
global s68000controlOdometer_
_s68000controlOdometer:
s68000controlOdometer_:
mov eax,[esp+4]
or eax,eax
jnz short _s68000tripOdometer
jmp short _s68000readOdometer
global _s68000releaseTimeslice
global s68000releaseTimeslice_
_s68000releaseTimeslice:
s68000releaseTimeslice_:
mov eax,[__cycles_needed]
sub [__io_cycle_counter],eax
xor eax,eax
mov [__cycles_needed],eax
ret
global _s68000readPC
global s68000readPC_
_s68000readPC:
s68000readPC_:
MOV EAX,[__pc]
TEST BYTE[__execinfo],1
JNZ SHORT .live
and EAX,16777215
RET
.live:
SUB EAX,[__FETCH_REGION_OFFSET]
and EAX,16777215
RET
times ($$-$)&15 db 0
basefunction:
push esi
and esi,16777215
mov ebp,[__fetch]
.check:
db 3Eh
cmp esi,[ebp]
jb short .next
db 3Eh
cmp esi,[ebp+4]
jbe short .base
.next:
db 3Eh
cmp dword [ebp],byte -1
je short .outofrange
add ebp,byte 12
jmp short .check
.outofrange:
pop esi
xor ebp,ebp
mov dword[__fetch_region_start],-1
mov dword[__fetch_region_end],ebp
sub edi,[__cycles_needed]
mov dword[__cycles_needed],0
MOV [__BUSERR_ADDR],esi
MOV [__BUSERR_STAT],dword 001eh
JMP bus_error
.base:
mov esi,[esp]
and esi,-16777216
push edx
mov edx,ebp
mov ebp,[edx]
or ebp,esi
mov [__fetch_region_start],ebp
mov ebp,[edx+4]
or ebp,esi
mov [__fetch_region_end],ebp
mov ebp,[edx+8]
MOV [__FETCH_REGION_OFFSET],EBP
pop edx
sub ebp,esi
pop esi
ret
times ($$-$)&15 db 0
decode_ext:
push ecx
movzx edx,word[esi]
movsx ecx,dl
add esi,byte 2
shr edx,12
mov edx,[__reg+edx*4]
jc short .long
movsx edx,dx
.long:
add edx,ecx
pop ecx
ret
times ($$-$)&15 db 0
readmemorybyte:
mov [__access_address],edx
and edx,16777215
mov ecx,[__readbyte]
readb_check:
cmp edx,[ecx]
jb short readb_next
cmp edx,[ecx+4]
jbe short readb_call
readb_next:
cmp dword[ecx],byte -1
je short readb_outofrange
add ecx,byte 16
jmp short readb_check
readb_outofrange:
or ecx,byte -1
mov edx,[__access_address]
ret
readb_call:
cmp dword[ecx+8],byte 0
jne short readb_callio
sub edx,[ecx]
add edx,[ecx+12]
xor edx,byte 1
mov cl,[edx]
mov edx,[__access_address]
ret
readb_callio:
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
CALL dword[ECX+8]
mov ecx,eax
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
mov edx,[__access_address]
OR EDX,EDX
JZ .error
RET
.error:
JMP bus_error
times ($$-$)&15 db 0
readmemoryword:
mov [__access_address],edx
and edx,16777215
SHR EDX,1
JC readw_addrerr
ADD EDX,EDX
mov ecx,[__readword]
readw_check:
cmp edx,[ecx]
jb short readw_next
cmp edx,[ecx+4]
jbe short readw_call
readw_next:
cmp dword[ecx],byte -1
je short readw_outofrange
add ecx,byte 16
jmp short readw_check
readw_addrerr:
ADD EDX,EDX
INC EDX
MOV [__BUSERR_ADDR],EDX
MOV [__BUSERR_STAT],word 001dh
JMP addr_error
readw_outofrange:
or ecx,byte -1
mov edx,[__access_address]
ret
readw_call:
cmp dword[ecx+8],byte 0
jne short readw_callio
sub edx,[ecx]
add edx,[ecx+12]
mov cx,[edx]
mov edx,[__access_address]
ret
readw_callio:
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
CALL dword[ECX+8]
mov ecx,eax
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
mov edx,[__access_address]
OR EDX,EDX
JZ .error
RET
.error:
JMP bus_error
times ($$-$)&15 db 0
readmemorydword:
mov [__access_address],edx
and edx,16777215
SHR EDX,1
JC readl_addrerr
ADD EDX,EDX
mov ecx,[__readword]
readl_check:
cmp edx,[ecx]
jb short readl_next
cmp edx,[ecx+4]
jbe short readl_call
readl_next:
cmp dword[ecx],byte -1
je short readl_outofrange
add ecx,byte 16
jmp short readl_check
readl_addrerr:
ADD EDX,EDX
INC EDX
MOV [__BUSERR_ADDR],EDX
MOV [__BUSERR_STAT],word 001dh
JMP addr_error
readl_outofrange:
add edx,byte 2
cmp edx,[ecx+4]
mov ecx,-1
ja near readl_lower
mov edx,[__access_address]
ret
readl_call:
cmp dword[ecx+8],byte 0
jne short readl_callio
add edx,byte 2
cmp edx,[ecx+4]
ja short readl_split
sub edx,[ecx]
add edx,[ecx+12]
mov ecx,[edx-2]
rol ecx,16
mov edx,[__access_address]
ret
readl_callio:
add edx,byte 2
cmp edx,[ecx+4]
ja near readl_iosplit
sub edx,byte 2
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
PUSH ECX
PUSH EDX
CALL dword[ECX+8]
POP EDX
POP ECX
ADD EDX,2
PUSH EAX
CALL dword[ECX+8]
pop ecx
shl ecx,16
mov cx,ax
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
mov edx,[__access_address]
OR EDX,EDX
JZ  .err
RET
.err:
JMP bus_error
readl_split:
sub edx,[ecx]
add edx,[ecx+12]
mov cx,[edx-2]
readl_lower:
mov edx,[esp]
add edx,byte 2
shl ecx,16
push ecx
call readmemoryword
and ecx,0FFFFh
or ecx,[esp]
add esp,byte 4
mov edx,[__access_address]
ret
readl_iosplit:
sub edx,byte 2
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
CALL dword[ECX+8]
mov ecx,eax
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
jmp short readl_lower
times ($$-$)&15 db 0
writememorybyte:
mov [__access_address],edx
push ecx
writeb_top:
and edx,16777215
mov ecx,[__writebyte]
writeb_check:
cmp edx,[ecx]
jb short writeb_next
cmp edx,[ecx+4]
jbe short writeb_call
writeb_next:
cmp dword[ecx],byte -1
je short writeb_end
add ecx,byte 16
jmp short writeb_check
writeb_call:
cmp dword[ecx+8],byte 0
jne short writeb_callio
sub edx,[ecx]
add edx,[ecx+12]
xor edx,byte 1
pop ecx
mov [edx],cl
mov edx,[__access_address]
ret
writeb_callio:
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
XOR EBX,EBX
MOV bl,[ESP+8]
CALL dword[ECX+8]
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
writeb_end:
pop ecx
mov edx,[__access_address]
OR EDX,EDX
JZ .error
ret
.error:
JMP bus_error
times ($$-$)&15 db 0
writememoryword:
mov [__access_address],edx
SHR EDX,1
JC writew_addrerr
ADD EDX,EDX
push ecx
writew_top:
and edx,16777215
mov ecx,[__writeword]
writew_check:
cmp edx,[ecx]
jb short writew_next
cmp edx,[ecx+4]
jbe short writew_call
writew_next:
cmp dword[ecx],byte -1
je short writew_end
add ecx,byte 16
jmp short writew_check
writew_addrerr:
ADD EDX,EDX
INC EDX
and edx,16777215
MOV [__BUSERR_ADDR],EDX
MOV [__BUSERR_STAT],word 001dh
JMP addr_error
writew_call:
cmp dword[ecx+8],byte 0
jne short writew_callio
sub edx,[ecx]
add edx,[ecx+12]
pop ecx
mov [edx],cx
mov edx,[__access_address]
ret
writew_callio:
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
XOR EBX,EBX
MOV bx,[ESP+8]
CALL dword[ECX+8]
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
writew_end:
pop ecx
mov edx,[__access_address]
OR EDX,EDX
JZ .error
ret
.error:
JMP bus_error
times ($$-$)&15 db 0
writememorydword:
mov [__access_address],edx
SHR EDX,1
JC writel_addrerr
ADD EDX,EDX
push ecx
and edx,16777215
mov ecx,[__writeword]
writel_check:
cmp edx,[ecx]
jb short writel_next
cmp edx,[ecx+4]
jbe short writel_call
writel_next:
cmp dword[ecx],byte -1
je short writel_outofrange
add ecx,byte 16
jmp short writel_check
writel_addrerr:
and edx,16777215
ADD EDX,EDX
INC EDX
MOV [__BUSERR_ADDR],EDX
MOV [__BUSERR_STAT],word 001dh
JMP addr_error
writel_outofrange:
add edx,byte 2
jmp writew_top
writel_call:
cmp dword[ecx+8],byte 0
jne short writel_callio
add edx,byte 2
cmp edx,[ecx+4]
ja short writel_split
sub edx,[ecx]
add edx,[ecx+12]
pop ecx
rol ecx,16
mov [edx-2],ecx
mov edx,[__access_address]
rol ecx,16
ret
writel_callio:
add edx,byte 2
cmp edx,[ecx+4]
ja short writel_iosplit
sub edx,byte 2
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
XOR EBX,EBX
MOV BX,[ESP+10]
PUSH ECX
PUSH EDX
CALL dword[ECX+8]
POP EDX
POP ECX
ADD EDX,byte 2
XOR EBX,EBX
MOV BX,[ESP+8]
CALL dword[ECX+8]
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
writel_end:
pop ecx
mov edx,[__access_address]
OR EDX,EDX
JZ .error
ret
.error:
JMP bus_error
writel_split:
sub edx,[ecx]
add edx,[ecx+12]
mov cx,[esp+2]
mov [edx-2],cx
mov edx,[esp+4]
add edx,byte 2
jmp writew_top
writel_iosplit:
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
XOR EBX,EBX
MOV BX,[ESP+10]
CALL dword[ECX+8]
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
mov edx,[esp+4]
add edx,byte 2
jmp writew_top
times ($$-$)&15 db 0
group_1_exception:
group_2_exception:
and byte[__interrupts],0FEh
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
PUSH ECX
PUSH ECX
test byte[__sr+1],20h
jnz short ln0
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
or byte[__sr+1],20h
ln0:
CALL readmemorydword
MOV [ESP+4],ECX
and byte[__sr+1],27h
mov byte[__trace_trickybit],0
mov ecx,esi
sub ecx,ebp
mov edx,[__a7]
sub edx,byte 4
call writememorydword
pop ecx
sub edx,byte 2
call writememoryword
mov [__a7],edx
pop esi
CALL basefunction
ADD ESI,EBP
ret
times ($$-$)&15 db 0
privilege_violation:
sub esi,byte 2
mov edx,20h
call group_1_exception
sub edi,byte 34
jmp execend
times ($$-$)&15 db 0
flush_interrupts:
sub esi,ebp
xor ebp,ebp
mov edx,7
mov cl,80h
mov ch,[__sr+1]
and ch,7
.loop:
test [__interrupts],cl
jz short .noint
mov [save_01], dl
mov dl,[__interrupts+edx]
not cl
and [__interrupts],cl
shl edx,2
call group_1_exception
and [__sr + 1], byte 0xF8
mov dl, [save_01]
sub edi,byte 44
or [__sr + 1], dl
jmp short .intdone
.noint:
dec edx
jz short .intdone
shr cl,1
cmp dl,ch
jg short .loop
RET
.intdone:
PUSHAD
CALL _s68000intack
POPAD
ret
; Opcodes 0000 - 0007
K000:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
or [__dreg+ebx*4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 0010 - 0017
K010:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0018 - 001F
K018:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0020 - 0027
K020:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0028 - 002F
K028:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0030 - 0037
K030:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 0038
K038:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 0039
K039:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 24
jmp execend
; Opcode 003C
K03C:
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
or cl,[esi]
add esi,byte 2
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp execend
; Opcodes 0040 - 0047
K040:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
or [__dreg+ebx*4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 0050 - 0057
K050:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 0058 - 005F
K058:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0060 - 0067
K060:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0068 - 006F
K068:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 0070 - 0077
K070:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 22
jmp execend
; Opcode 0078
K078:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcode 0079
K079:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 24
jmp execend
; Opcode 007C
K07C:
test byte[__sr+1],20h
jz near privilege_violation
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
or cx,[esi]
add esi,byte 2
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln1
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln2
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln1
ln2:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln1:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp exec_checkpoint
; Opcodes 0080 - 0087
K080:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
or [__dreg+ebx*4],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 0090 - 0097
K090:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 0098 - 009F
K098:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 28
jmp execend
; Opcodes 00A0 - 00A7
K0A0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 30
jmp execend
; Opcodes 00A8 - 00AF
K0A8:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcodes 00B0 - 00B7
K0B0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 34
jmp execend
; Opcode 00B8
K0B8:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcode 00B9
K0B9:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 36
jmp execend
; Opcodes 0100 - 0107
K100:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln3
and ah,0BFh
jmp short ln4
ln3:
or ah,40h
ln4:
sub edi,byte 6
jmp execend
; Opcodes 0108 - 010F
K108:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+0],bx
sub edi,byte 16
jmp execend
; Opcodes 0110 - 0117
K110:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln5
and ah,0BFh
jmp short ln6
ln5:
or ah,40h
ln6:
sub edi,byte 8
jmp execend
; Opcodes 0118 - 011F
K118:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln7
and ah,0BFh
jmp short ln8
ln7:
or ah,40h
ln8:
sub edi,byte 8
jmp execend
; Opcodes 0120 - 0127
K120:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln9
and ah,0BFh
jmp short ln10
ln9:
or ah,40h
ln10:
sub edi,byte 10
jmp execend
; Opcodes 0128 - 012F
K128:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln11
and ah,0BFh
jmp short ln12
ln11:
or ah,40h
ln12:
sub edi,byte 12
jmp execend
; Opcodes 0130 - 0137
K130:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln13
and ah,0BFh
jmp short ln14
ln13:
or ah,40h
ln14:
sub edi,byte 14
jmp execend
; Opcode 0138
K138:
mov cl,byte[__dreg+0]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln15
and ah,0BFh
jmp short ln16
ln15:
or ah,40h
ln16:
sub edi,byte 12
jmp execend
; Opcode 0139
K139:
mov cl,byte[__dreg+0]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln17
and ah,0BFh
jmp short ln18
ln17:
or ah,40h
ln18:
sub edi,byte 16
jmp execend
; Opcode 013A
K13A:
mov cl,byte[__dreg+0]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln19
and ah,0BFh
jmp short ln20
ln19:
or ah,40h
ln20:
sub edi,byte 12
jmp execend
; Opcode 013B
K13B:
mov cl,byte[__dreg+0]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln21
and ah,0BFh
jmp short ln22
ln21:
or ah,40h
ln22:
sub edi,byte 14
jmp execend
; Opcode 013C
K13C:
mov cl,byte[__dreg+0]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln23
and ah,0BFh
jmp short ln24
ln23:
or ah,40h
ln24:
sub edi,byte 8
jmp execend
; Opcodes 0140 - 0147
K140:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln25
and ah,0BFh
jmp short ln26
ln25:
or ah,40h
ln26:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0148 - 014F
K148:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+0],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0150 - 0157
K150:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln27
and ah,0BFh
jmp short ln28
ln27:
or ah,40h
ln28:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0158 - 015F
K158:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln29
and ah,0BFh
jmp short ln30
ln29:
or ah,40h
ln30:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0160 - 0167
K160:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln31
and ah,0BFh
jmp short ln32
ln31:
or ah,40h
ln32:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0168 - 016F
K168:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln33
and ah,0BFh
jmp short ln34
ln33:
or ah,40h
ln34:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0170 - 0177
K170:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln35
and ah,0BFh
jmp short ln36
ln35:
or ah,40h
ln36:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0178
K178:
mov cl,byte[__dreg+0]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln37
and ah,0BFh
jmp short ln38
ln37:
or ah,40h
ln38:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0179
K179:
mov cl,byte[__dreg+0]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln39
and ah,0BFh
jmp short ln40
ln39:
or ah,40h
ln40:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0180 - 0187
K180:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln41
and ah,0BFh
jmp short ln42
ln41:
or ah,40h
ln42:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0188 - 018F
K188:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+0]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0190 - 0197
K190:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln43
and ah,0BFh
jmp short ln44
ln43:
or ah,40h
ln44:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0198 - 019F
K198:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln45
and ah,0BFh
jmp short ln46
ln45:
or ah,40h
ln46:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 01A0 - 01A7
K1A0:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln47
and ah,0BFh
jmp short ln48
ln47:
or ah,40h
ln48:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 01A8 - 01AF
K1A8:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln49
and ah,0BFh
jmp short ln50
ln49:
or ah,40h
ln50:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 01B0 - 01B7
K1B0:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln51
and ah,0BFh
jmp short ln52
ln51:
or ah,40h
ln52:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 01B8
K1B8:
mov cl,byte[__dreg+0]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln53
and ah,0BFh
jmp short ln54
ln53:
or ah,40h
ln54:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 01B9
K1B9:
mov cl,byte[__dreg+0]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln55
and ah,0BFh
jmp short ln56
ln55:
or ah,40h
ln56:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 01C0 - 01C7
K1C0:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln57
and ah,0BFh
jmp short ln58
ln57:
or ah,40h
ln58:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 01C8 - 01CF
K1C8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+0]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 01D0 - 01D7
K1D0:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln59
and ah,0BFh
jmp short ln60
ln59:
or ah,40h
ln60:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 01D8 - 01DF
K1D8:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln61
and ah,0BFh
jmp short ln62
ln61:
or ah,40h
ln62:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 01E0 - 01E7
K1E0:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln63
and ah,0BFh
jmp short ln64
ln63:
or ah,40h
ln64:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 01E8 - 01EF
K1E8:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln65
and ah,0BFh
jmp short ln66
ln65:
or ah,40h
ln66:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 01F0 - 01F7
K1F0:
mov cl,byte[__dreg+0]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln67
and ah,0BFh
jmp short ln68
ln67:
or ah,40h
ln68:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 01F8
K1F8:
mov cl,byte[__dreg+0]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln69
and ah,0BFh
jmp short ln70
ln69:
or ah,40h
ln70:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 01F9
K1F9:
mov cl,byte[__dreg+0]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln71
and ah,0BFh
jmp short ln72
ln71:
or ah,40h
ln72:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0200 - 0207
K200:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
and [__dreg+ebx*4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 0210 - 0217
K210:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0218 - 021F
K218:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0220 - 0227
K220:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0228 - 022F
K228:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0230 - 0237
K230:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 0238
K238:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 0239
K239:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 24
jmp execend
; Opcode 023C
K23C:
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
and cl,[esi]
add esi,byte 2
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp execend
; Opcodes 0240 - 0247
K240:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
and [__dreg+ebx*4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 0250 - 0257
K250:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 0258 - 025F
K258:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0260 - 0267
K260:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0268 - 026F
K268:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 0270 - 0277
K270:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 22
jmp execend
; Opcode 0278
K278:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcode 0279
K279:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 24
jmp execend
; Opcode 027C
K27C:
test byte[__sr+1],20h
jz near privilege_violation
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
and cx,[esi]
add esi,byte 2
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln73
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln74
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln73
ln74:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln73:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp exec_checkpoint
; Opcodes 0280 - 0287
K280:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
and [__dreg+ebx*4],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 0290 - 0297
K290:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 0298 - 029F
K298:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 28
jmp execend
; Opcodes 02A0 - 02A7
K2A0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 30
jmp execend
; Opcodes 02A8 - 02AF
K2A8:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcodes 02B0 - 02B7
K2B0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 34
jmp execend
; Opcode 02B8
K2B8:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcode 02B9
K2B9:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 36
jmp execend
; Opcodes 0300 - 0307
K300:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln75
and ah,0BFh
jmp short ln76
ln75:
or ah,40h
ln76:
sub edi,byte 6
jmp execend
; Opcodes 0308 - 030F
K308:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+4],bx
sub edi,byte 16
jmp execend
; Opcodes 0310 - 0317
K310:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln77
and ah,0BFh
jmp short ln78
ln77:
or ah,40h
ln78:
sub edi,byte 8
jmp execend
; Opcodes 0318 - 031F
K318:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln79
and ah,0BFh
jmp short ln80
ln79:
or ah,40h
ln80:
sub edi,byte 8
jmp execend
; Opcodes 0320 - 0327
K320:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln81
and ah,0BFh
jmp short ln82
ln81:
or ah,40h
ln82:
sub edi,byte 10
jmp execend
; Opcodes 0328 - 032F
K328:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln83
and ah,0BFh
jmp short ln84
ln83:
or ah,40h
ln84:
sub edi,byte 12
jmp execend
; Opcodes 0330 - 0337
K330:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln85
and ah,0BFh
jmp short ln86
ln85:
or ah,40h
ln86:
sub edi,byte 14
jmp execend
; Opcode 0338
K338:
mov cl,byte[__dreg+4]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln87
and ah,0BFh
jmp short ln88
ln87:
or ah,40h
ln88:
sub edi,byte 12
jmp execend
; Opcode 0339
K339:
mov cl,byte[__dreg+4]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln89
and ah,0BFh
jmp short ln90
ln89:
or ah,40h
ln90:
sub edi,byte 16
jmp execend
; Opcode 033A
K33A:
mov cl,byte[__dreg+4]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln91
and ah,0BFh
jmp short ln92
ln91:
or ah,40h
ln92:
sub edi,byte 12
jmp execend
; Opcode 033B
K33B:
mov cl,byte[__dreg+4]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln93
and ah,0BFh
jmp short ln94
ln93:
or ah,40h
ln94:
sub edi,byte 14
jmp execend
; Opcode 033C
K33C:
mov cl,byte[__dreg+4]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln95
and ah,0BFh
jmp short ln96
ln95:
or ah,40h
ln96:
sub edi,byte 8
jmp execend
; Opcodes 0340 - 0347
K340:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln97
and ah,0BFh
jmp short ln98
ln97:
or ah,40h
ln98:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0348 - 034F
K348:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+4],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0350 - 0357
K350:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln99
and ah,0BFh
jmp short ln100
ln99:
or ah,40h
ln100:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0358 - 035F
K358:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln101
and ah,0BFh
jmp short ln102
ln101:
or ah,40h
ln102:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0360 - 0367
K360:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln103
and ah,0BFh
jmp short ln104
ln103:
or ah,40h
ln104:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0368 - 036F
K368:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln105
and ah,0BFh
jmp short ln106
ln105:
or ah,40h
ln106:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0370 - 0377
K370:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln107
and ah,0BFh
jmp short ln108
ln107:
or ah,40h
ln108:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0378
K378:
mov cl,byte[__dreg+4]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln109
and ah,0BFh
jmp short ln110
ln109:
or ah,40h
ln110:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0379
K379:
mov cl,byte[__dreg+4]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln111
and ah,0BFh
jmp short ln112
ln111:
or ah,40h
ln112:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0380 - 0387
K380:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln113
and ah,0BFh
jmp short ln114
ln113:
or ah,40h
ln114:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0388 - 038F
K388:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+4]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0390 - 0397
K390:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln115
and ah,0BFh
jmp short ln116
ln115:
or ah,40h
ln116:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0398 - 039F
K398:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln117
and ah,0BFh
jmp short ln118
ln117:
or ah,40h
ln118:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 03A0 - 03A7
K3A0:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln119
and ah,0BFh
jmp short ln120
ln119:
or ah,40h
ln120:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 03A8 - 03AF
K3A8:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln121
and ah,0BFh
jmp short ln122
ln121:
or ah,40h
ln122:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 03B0 - 03B7
K3B0:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln123
and ah,0BFh
jmp short ln124
ln123:
or ah,40h
ln124:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 03B8
K3B8:
mov cl,byte[__dreg+4]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln125
and ah,0BFh
jmp short ln126
ln125:
or ah,40h
ln126:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 03B9
K3B9:
mov cl,byte[__dreg+4]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln127
and ah,0BFh
jmp short ln128
ln127:
or ah,40h
ln128:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 03C0 - 03C7
K3C0:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln129
and ah,0BFh
jmp short ln130
ln129:
or ah,40h
ln130:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 03C8 - 03CF
K3C8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+4]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 03D0 - 03D7
K3D0:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln131
and ah,0BFh
jmp short ln132
ln131:
or ah,40h
ln132:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 03D8 - 03DF
K3D8:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln133
and ah,0BFh
jmp short ln134
ln133:
or ah,40h
ln134:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 03E0 - 03E7
K3E0:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln135
and ah,0BFh
jmp short ln136
ln135:
or ah,40h
ln136:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 03E8 - 03EF
K3E8:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln137
and ah,0BFh
jmp short ln138
ln137:
or ah,40h
ln138:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 03F0 - 03F7
K3F0:
mov cl,byte[__dreg+4]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln139
and ah,0BFh
jmp short ln140
ln139:
or ah,40h
ln140:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 03F8
K3F8:
mov cl,byte[__dreg+4]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln141
and ah,0BFh
jmp short ln142
ln141:
or ah,40h
ln142:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 03F9
K3F9:
mov cl,byte[__dreg+4]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln143
and ah,0BFh
jmp short ln144
ln143:
or ah,40h
ln144:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0400 - 0407
K400:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
sub [__dreg+ebx*4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 0410 - 0417
K410:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0418 - 041F
K418:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0420 - 0427
K420:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0428 - 042F
K428:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0430 - 0437
K430:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 0438
K438:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 0439
K439:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 24
jmp execend
; Opcodes 0440 - 0447
K440:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
sub [__dreg+ebx*4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 0450 - 0457
K450:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 0458 - 045F
K458:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0460 - 0467
K460:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0468 - 046F
K468:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 0470 - 0477
K470:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 22
jmp execend
; Opcode 0478
K478:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcode 0479
K479:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 24
jmp execend
; Opcodes 0480 - 0487
K480:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
sub [__dreg+ebx*4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 0490 - 0497
K490:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 0498 - 049F
K498:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 28
jmp execend
; Opcodes 04A0 - 04A7
K4A0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 30
jmp execend
; Opcodes 04A8 - 04AF
K4A8:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcodes 04B0 - 04B7
K4B0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 34
jmp execend
; Opcode 04B8
K4B8:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcode 04B9
K4B9:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 36
jmp execend
; Opcodes 0500 - 0507
K500:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln145
and ah,0BFh
jmp short ln146
ln145:
or ah,40h
ln146:
sub edi,byte 6
jmp execend
; Opcodes 0508 - 050F
K508:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+8],bx
sub edi,byte 16
jmp execend
; Opcodes 0510 - 0517
K510:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln147
and ah,0BFh
jmp short ln148
ln147:
or ah,40h
ln148:
sub edi,byte 8
jmp execend
; Opcodes 0518 - 051F
K518:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln149
and ah,0BFh
jmp short ln150
ln149:
or ah,40h
ln150:
sub edi,byte 8
jmp execend
; Opcodes 0520 - 0527
K520:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln151
and ah,0BFh
jmp short ln152
ln151:
or ah,40h
ln152:
sub edi,byte 10
jmp execend
; Opcodes 0528 - 052F
K528:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln153
and ah,0BFh
jmp short ln154
ln153:
or ah,40h
ln154:
sub edi,byte 12
jmp execend
; Opcodes 0530 - 0537
K530:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln155
and ah,0BFh
jmp short ln156
ln155:
or ah,40h
ln156:
sub edi,byte 14
jmp execend
; Opcode 0538
K538:
mov cl,byte[__dreg+8]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln157
and ah,0BFh
jmp short ln158
ln157:
or ah,40h
ln158:
sub edi,byte 12
jmp execend
; Opcode 0539
K539:
mov cl,byte[__dreg+8]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln159
and ah,0BFh
jmp short ln160
ln159:
or ah,40h
ln160:
sub edi,byte 16
jmp execend
; Opcode 053A
K53A:
mov cl,byte[__dreg+8]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln161
and ah,0BFh
jmp short ln162
ln161:
or ah,40h
ln162:
sub edi,byte 12
jmp execend
; Opcode 053B
K53B:
mov cl,byte[__dreg+8]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln163
and ah,0BFh
jmp short ln164
ln163:
or ah,40h
ln164:
sub edi,byte 14
jmp execend
; Opcode 053C
K53C:
mov cl,byte[__dreg+8]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln165
and ah,0BFh
jmp short ln166
ln165:
or ah,40h
ln166:
sub edi,byte 8
jmp execend
; Opcodes 0540 - 0547
K540:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln167
and ah,0BFh
jmp short ln168
ln167:
or ah,40h
ln168:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0548 - 054F
K548:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+8],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0550 - 0557
K550:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln169
and ah,0BFh
jmp short ln170
ln169:
or ah,40h
ln170:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0558 - 055F
K558:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln171
and ah,0BFh
jmp short ln172
ln171:
or ah,40h
ln172:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0560 - 0567
K560:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln173
and ah,0BFh
jmp short ln174
ln173:
or ah,40h
ln174:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0568 - 056F
K568:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln175
and ah,0BFh
jmp short ln176
ln175:
or ah,40h
ln176:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0570 - 0577
K570:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln177
and ah,0BFh
jmp short ln178
ln177:
or ah,40h
ln178:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0578
K578:
mov cl,byte[__dreg+8]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln179
and ah,0BFh
jmp short ln180
ln179:
or ah,40h
ln180:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0579
K579:
mov cl,byte[__dreg+8]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln181
and ah,0BFh
jmp short ln182
ln181:
or ah,40h
ln182:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0580 - 0587
K580:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln183
and ah,0BFh
jmp short ln184
ln183:
or ah,40h
ln184:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0588 - 058F
K588:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+8]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0590 - 0597
K590:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln185
and ah,0BFh
jmp short ln186
ln185:
or ah,40h
ln186:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0598 - 059F
K598:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln187
and ah,0BFh
jmp short ln188
ln187:
or ah,40h
ln188:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 05A0 - 05A7
K5A0:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln189
and ah,0BFh
jmp short ln190
ln189:
or ah,40h
ln190:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 05A8 - 05AF
K5A8:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln191
and ah,0BFh
jmp short ln192
ln191:
or ah,40h
ln192:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 05B0 - 05B7
K5B0:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln193
and ah,0BFh
jmp short ln194
ln193:
or ah,40h
ln194:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 05B8
K5B8:
mov cl,byte[__dreg+8]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln195
and ah,0BFh
jmp short ln196
ln195:
or ah,40h
ln196:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 05B9
K5B9:
mov cl,byte[__dreg+8]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln197
and ah,0BFh
jmp short ln198
ln197:
or ah,40h
ln198:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 05C0 - 05C7
K5C0:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln199
and ah,0BFh
jmp short ln200
ln199:
or ah,40h
ln200:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 05C8 - 05CF
K5C8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+8]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 05D0 - 05D7
K5D0:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln201
and ah,0BFh
jmp short ln202
ln201:
or ah,40h
ln202:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 05D8 - 05DF
K5D8:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln203
and ah,0BFh
jmp short ln204
ln203:
or ah,40h
ln204:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 05E0 - 05E7
K5E0:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln205
and ah,0BFh
jmp short ln206
ln205:
or ah,40h
ln206:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 05E8 - 05EF
K5E8:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln207
and ah,0BFh
jmp short ln208
ln207:
or ah,40h
ln208:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 05F0 - 05F7
K5F0:
mov cl,byte[__dreg+8]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln209
and ah,0BFh
jmp short ln210
ln209:
or ah,40h
ln210:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 05F8
K5F8:
mov cl,byte[__dreg+8]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln211
and ah,0BFh
jmp short ln212
ln211:
or ah,40h
ln212:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 05F9
K5F9:
mov cl,byte[__dreg+8]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln213
and ah,0BFh
jmp short ln214
ln213:
or ah,40h
ln214:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0600 - 0607
K600:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
add [__dreg+ebx*4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 0610 - 0617
K610:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0618 - 061F
K618:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0620 - 0627
K620:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0628 - 062F
K628:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0630 - 0637
K630:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 0638
K638:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 0639
K639:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorybyte
sub edi,byte 24
jmp execend
; Opcodes 0640 - 0647
K640:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
add [__dreg+ebx*4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 0650 - 0657
K650:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 0658 - 065F
K658:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0660 - 0667
K660:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0668 - 066F
K668:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 0670 - 0677
K670:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 22
jmp execend
; Opcode 0678
K678:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcode 0679
K679:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememoryword
sub edi,byte 24
jmp execend
; Opcodes 0680 - 0687
K680:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
add [__dreg+ebx*4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 0690 - 0697
K690:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 0698 - 069F
K698:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 28
jmp execend
; Opcodes 06A0 - 06A7
K6A0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 30
jmp execend
; Opcodes 06A8 - 06AF
K6A8:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcodes 06B0 - 06B7
K6B0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 34
jmp execend
; Opcode 06B8
K6B8:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcode 06B9
K6B9:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[esp]
lahf
seto al
setc [__xflag]
add esp,byte 4
call writememorydword
sub edi,byte 36
jmp execend
; Opcodes 0700 - 0707
K700:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln215
and ah,0BFh
jmp short ln216
ln215:
or ah,40h
ln216:
sub edi,byte 6
jmp execend
; Opcodes 0708 - 070F
K708:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+12],bx
sub edi,byte 16
jmp execend
; Opcodes 0710 - 0717
K710:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln217
and ah,0BFh
jmp short ln218
ln217:
or ah,40h
ln218:
sub edi,byte 8
jmp execend
; Opcodes 0718 - 071F
K718:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln219
and ah,0BFh
jmp short ln220
ln219:
or ah,40h
ln220:
sub edi,byte 8
jmp execend
; Opcodes 0720 - 0727
K720:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln221
and ah,0BFh
jmp short ln222
ln221:
or ah,40h
ln222:
sub edi,byte 10
jmp execend
; Opcodes 0728 - 072F
K728:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln223
and ah,0BFh
jmp short ln224
ln223:
or ah,40h
ln224:
sub edi,byte 12
jmp execend
; Opcodes 0730 - 0737
K730:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln225
and ah,0BFh
jmp short ln226
ln225:
or ah,40h
ln226:
sub edi,byte 14
jmp execend
; Opcode 0738
K738:
mov cl,byte[__dreg+12]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln227
and ah,0BFh
jmp short ln228
ln227:
or ah,40h
ln228:
sub edi,byte 12
jmp execend
; Opcode 0739
K739:
mov cl,byte[__dreg+12]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln229
and ah,0BFh
jmp short ln230
ln229:
or ah,40h
ln230:
sub edi,byte 16
jmp execend
; Opcode 073A
K73A:
mov cl,byte[__dreg+12]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln231
and ah,0BFh
jmp short ln232
ln231:
or ah,40h
ln232:
sub edi,byte 12
jmp execend
; Opcode 073B
K73B:
mov cl,byte[__dreg+12]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln233
and ah,0BFh
jmp short ln234
ln233:
or ah,40h
ln234:
sub edi,byte 14
jmp execend
; Opcode 073C
K73C:
mov cl,byte[__dreg+12]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln235
and ah,0BFh
jmp short ln236
ln235:
or ah,40h
ln236:
sub edi,byte 8
jmp execend
; Opcodes 0740 - 0747
K740:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln237
and ah,0BFh
jmp short ln238
ln237:
or ah,40h
ln238:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0748 - 074F
K748:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+12],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0750 - 0757
K750:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln239
and ah,0BFh
jmp short ln240
ln239:
or ah,40h
ln240:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0758 - 075F
K758:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln241
and ah,0BFh
jmp short ln242
ln241:
or ah,40h
ln242:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0760 - 0767
K760:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln243
and ah,0BFh
jmp short ln244
ln243:
or ah,40h
ln244:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0768 - 076F
K768:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln245
and ah,0BFh
jmp short ln246
ln245:
or ah,40h
ln246:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0770 - 0777
K770:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln247
and ah,0BFh
jmp short ln248
ln247:
or ah,40h
ln248:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0778
K778:
mov cl,byte[__dreg+12]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln249
and ah,0BFh
jmp short ln250
ln249:
or ah,40h
ln250:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0779
K779:
mov cl,byte[__dreg+12]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln251
and ah,0BFh
jmp short ln252
ln251:
or ah,40h
ln252:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0780 - 0787
K780:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln253
and ah,0BFh
jmp short ln254
ln253:
or ah,40h
ln254:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0788 - 078F
K788:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+12]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0790 - 0797
K790:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln255
and ah,0BFh
jmp short ln256
ln255:
or ah,40h
ln256:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0798 - 079F
K798:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln257
and ah,0BFh
jmp short ln258
ln257:
or ah,40h
ln258:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 07A0 - 07A7
K7A0:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln259
and ah,0BFh
jmp short ln260
ln259:
or ah,40h
ln260:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 07A8 - 07AF
K7A8:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln261
and ah,0BFh
jmp short ln262
ln261:
or ah,40h
ln262:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 07B0 - 07B7
K7B0:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln263
and ah,0BFh
jmp short ln264
ln263:
or ah,40h
ln264:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 07B8
K7B8:
mov cl,byte[__dreg+12]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln265
and ah,0BFh
jmp short ln266
ln265:
or ah,40h
ln266:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 07B9
K7B9:
mov cl,byte[__dreg+12]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln267
and ah,0BFh
jmp short ln268
ln267:
or ah,40h
ln268:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 07C0 - 07C7
K7C0:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln269
and ah,0BFh
jmp short ln270
ln269:
or ah,40h
ln270:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 07C8 - 07CF
K7C8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+12]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 07D0 - 07D7
K7D0:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln271
and ah,0BFh
jmp short ln272
ln271:
or ah,40h
ln272:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 07D8 - 07DF
K7D8:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln273
and ah,0BFh
jmp short ln274
ln273:
or ah,40h
ln274:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 07E0 - 07E7
K7E0:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln275
and ah,0BFh
jmp short ln276
ln275:
or ah,40h
ln276:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 07E8 - 07EF
K7E8:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln277
and ah,0BFh
jmp short ln278
ln277:
or ah,40h
ln278:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 07F0 - 07F7
K7F0:
mov cl,byte[__dreg+12]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln279
and ah,0BFh
jmp short ln280
ln279:
or ah,40h
ln280:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 07F8
K7F8:
mov cl,byte[__dreg+12]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln281
and ah,0BFh
jmp short ln282
ln281:
or ah,40h
ln282:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 07F9
K7F9:
mov cl,byte[__dreg+12]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln283
and ah,0BFh
jmp short ln284
ln283:
or ah,40h
ln284:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0800 - 0807
K800:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln285
and ah,0BFh
jmp short ln286
ln285:
or ah,40h
ln286:
sub edi,byte 10
jmp execend
; Opcodes 0810 - 0817
K810:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln287
and ah,0BFh
jmp short ln288
ln287:
or ah,40h
ln288:
sub edi,byte 12
jmp execend
; Opcodes 0818 - 081F
K818:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln289
and ah,0BFh
jmp short ln290
ln289:
or ah,40h
ln290:
sub edi,byte 12
jmp execend
; Opcodes 0820 - 0827
K820:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln291
and ah,0BFh
jmp short ln292
ln291:
or ah,40h
ln292:
sub edi,byte 14
jmp execend
; Opcodes 0828 - 082F
K828:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln293
and ah,0BFh
jmp short ln294
ln293:
or ah,40h
ln294:
sub edi,byte 16
jmp execend
; Opcodes 0830 - 0837
K830:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln295
and ah,0BFh
jmp short ln296
ln295:
or ah,40h
ln296:
sub edi,byte 18
jmp execend
; Opcode 0838
K838:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln297
and ah,0BFh
jmp short ln298
ln297:
or ah,40h
ln298:
sub edi,byte 16
jmp execend
; Opcode 0839
K839:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln299
and ah,0BFh
jmp short ln300
ln299:
or ah,40h
ln300:
sub edi,byte 20
jmp execend
; Opcode 083A
K83A:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln301
and ah,0BFh
jmp short ln302
ln301:
or ah,40h
ln302:
sub edi,byte 16
jmp execend
; Opcode 083B
K83B:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln303
and ah,0BFh
jmp short ln304
ln303:
or ah,40h
ln304:
sub edi,byte 18
jmp execend
; Opcode 083C
K83C:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln305
and ah,0BFh
jmp short ln306
ln305:
or ah,40h
ln306:
sub edi,byte 12
jmp execend
; Opcodes 0840 - 0847
K840:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln307
and ah,0BFh
jmp short ln308
ln307:
or ah,40h
ln308:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 12
jmp execend
; Opcodes 0850 - 0857
K850:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln309
and ah,0BFh
jmp short ln310
ln309:
or ah,40h
ln310:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0858 - 085F
K858:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln311
and ah,0BFh
jmp short ln312
ln311:
or ah,40h
ln312:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0860 - 0867
K860:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln313
and ah,0BFh
jmp short ln314
ln313:
or ah,40h
ln314:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0868 - 086F
K868:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln315
and ah,0BFh
jmp short ln316
ln315:
or ah,40h
ln316:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0870 - 0877
K870:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln317
and ah,0BFh
jmp short ln318
ln317:
or ah,40h
ln318:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 0878
K878:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln319
and ah,0BFh
jmp short ln320
ln319:
or ah,40h
ln320:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 0879
K879:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln321
and ah,0BFh
jmp short ln322
ln321:
or ah,40h
ln322:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 24
jmp execend
; Opcodes 0880 - 0887
K880:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln323
and ah,0BFh
jmp short ln324
ln323:
or ah,40h
ln324:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 14
jmp execend
; Opcodes 0890 - 0897
K890:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln325
and ah,0BFh
jmp short ln326
ln325:
or ah,40h
ln326:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0898 - 089F
K898:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln327
and ah,0BFh
jmp short ln328
ln327:
or ah,40h
ln328:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 08A0 - 08A7
K8A0:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln329
and ah,0BFh
jmp short ln330
ln329:
or ah,40h
ln330:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 08A8 - 08AF
K8A8:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln331
and ah,0BFh
jmp short ln332
ln331:
or ah,40h
ln332:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 08B0 - 08B7
K8B0:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln333
and ah,0BFh
jmp short ln334
ln333:
or ah,40h
ln334:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 08B8
K8B8:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln335
and ah,0BFh
jmp short ln336
ln335:
or ah,40h
ln336:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 08B9
K8B9:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln337
and ah,0BFh
jmp short ln338
ln337:
or ah,40h
ln338:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 24
jmp execend
; Opcodes 08C0 - 08C7
K8C0:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln339
and ah,0BFh
jmp short ln340
ln339:
or ah,40h
ln340:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 12
jmp execend
; Opcodes 08D0 - 08D7
K8D0:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln341
and ah,0BFh
jmp short ln342
ln341:
or ah,40h
ln342:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 08D8 - 08DF
K8D8:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln343
and ah,0BFh
jmp short ln344
ln343:
or ah,40h
ln344:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 08E0 - 08E7
K8E0:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln345
and ah,0BFh
jmp short ln346
ln345:
or ah,40h
ln346:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 08E8 - 08EF
K8E8:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln347
and ah,0BFh
jmp short ln348
ln347:
or ah,40h
ln348:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 08F0 - 08F7
K8F0:
mov cl,[esi]
add esi,byte 2
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln349
and ah,0BFh
jmp short ln350
ln349:
or ah,40h
ln350:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 08F8
K8F8:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln351
and ah,0BFh
jmp short ln352
ln351:
or ah,40h
ln352:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 08F9
K8F9:
mov cl,[esi]
add esi,byte 2
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln353
and ah,0BFh
jmp short ln354
ln353:
or ah,40h
ln354:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 24
jmp execend
; Opcodes 0900 - 0907
K900:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln355
and ah,0BFh
jmp short ln356
ln355:
or ah,40h
ln356:
sub edi,byte 6
jmp execend
; Opcodes 0908 - 090F
K908:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+16],bx
sub edi,byte 16
jmp execend
; Opcodes 0910 - 0917
K910:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln357
and ah,0BFh
jmp short ln358
ln357:
or ah,40h
ln358:
sub edi,byte 8
jmp execend
; Opcodes 0918 - 091F
K918:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln359
and ah,0BFh
jmp short ln360
ln359:
or ah,40h
ln360:
sub edi,byte 8
jmp execend
; Opcodes 0920 - 0927
K920:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln361
and ah,0BFh
jmp short ln362
ln361:
or ah,40h
ln362:
sub edi,byte 10
jmp execend
; Opcodes 0928 - 092F
K928:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln363
and ah,0BFh
jmp short ln364
ln363:
or ah,40h
ln364:
sub edi,byte 12
jmp execend
; Opcodes 0930 - 0937
K930:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln365
and ah,0BFh
jmp short ln366
ln365:
or ah,40h
ln366:
sub edi,byte 14
jmp execend
; Opcode 0938
K938:
mov cl,byte[__dreg+16]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln367
and ah,0BFh
jmp short ln368
ln367:
or ah,40h
ln368:
sub edi,byte 12
jmp execend
; Opcode 0939
K939:
mov cl,byte[__dreg+16]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln369
and ah,0BFh
jmp short ln370
ln369:
or ah,40h
ln370:
sub edi,byte 16
jmp execend
; Opcode 093A
K93A:
mov cl,byte[__dreg+16]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln371
and ah,0BFh
jmp short ln372
ln371:
or ah,40h
ln372:
sub edi,byte 12
jmp execend
; Opcode 093B
K93B:
mov cl,byte[__dreg+16]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln373
and ah,0BFh
jmp short ln374
ln373:
or ah,40h
ln374:
sub edi,byte 14
jmp execend
; Opcode 093C
K93C:
mov cl,byte[__dreg+16]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln375
and ah,0BFh
jmp short ln376
ln375:
or ah,40h
ln376:
sub edi,byte 8
jmp execend
; Opcodes 0940 - 0947
K940:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln377
and ah,0BFh
jmp short ln378
ln377:
or ah,40h
ln378:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0948 - 094F
K948:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+16],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0950 - 0957
K950:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln379
and ah,0BFh
jmp short ln380
ln379:
or ah,40h
ln380:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0958 - 095F
K958:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln381
and ah,0BFh
jmp short ln382
ln381:
or ah,40h
ln382:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0960 - 0967
K960:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln383
and ah,0BFh
jmp short ln384
ln383:
or ah,40h
ln384:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0968 - 096F
K968:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln385
and ah,0BFh
jmp short ln386
ln385:
or ah,40h
ln386:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0970 - 0977
K970:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln387
and ah,0BFh
jmp short ln388
ln387:
or ah,40h
ln388:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0978
K978:
mov cl,byte[__dreg+16]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln389
and ah,0BFh
jmp short ln390
ln389:
or ah,40h
ln390:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0979
K979:
mov cl,byte[__dreg+16]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln391
and ah,0BFh
jmp short ln392
ln391:
or ah,40h
ln392:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0980 - 0987
K980:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln393
and ah,0BFh
jmp short ln394
ln393:
or ah,40h
ln394:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0988 - 098F
K988:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+16]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0990 - 0997
K990:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln395
and ah,0BFh
jmp short ln396
ln395:
or ah,40h
ln396:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0998 - 099F
K998:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln397
and ah,0BFh
jmp short ln398
ln397:
or ah,40h
ln398:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 09A0 - 09A7
K9A0:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln399
and ah,0BFh
jmp short ln400
ln399:
or ah,40h
ln400:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 09A8 - 09AF
K9A8:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln401
and ah,0BFh
jmp short ln402
ln401:
or ah,40h
ln402:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 09B0 - 09B7
K9B0:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln403
and ah,0BFh
jmp short ln404
ln403:
or ah,40h
ln404:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 09B8
K9B8:
mov cl,byte[__dreg+16]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln405
and ah,0BFh
jmp short ln406
ln405:
or ah,40h
ln406:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 09B9
K9B9:
mov cl,byte[__dreg+16]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln407
and ah,0BFh
jmp short ln408
ln407:
or ah,40h
ln408:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 09C0 - 09C7
K9C0:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln409
and ah,0BFh
jmp short ln410
ln409:
or ah,40h
ln410:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 09C8 - 09CF
K9C8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+16]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 09D0 - 09D7
K9D0:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln411
and ah,0BFh
jmp short ln412
ln411:
or ah,40h
ln412:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 09D8 - 09DF
K9D8:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln413
and ah,0BFh
jmp short ln414
ln413:
or ah,40h
ln414:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 09E0 - 09E7
K9E0:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln415
and ah,0BFh
jmp short ln416
ln415:
or ah,40h
ln416:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 09E8 - 09EF
K9E8:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln417
and ah,0BFh
jmp short ln418
ln417:
or ah,40h
ln418:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 09F0 - 09F7
K9F0:
mov cl,byte[__dreg+16]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln419
and ah,0BFh
jmp short ln420
ln419:
or ah,40h
ln420:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 09F8
K9F8:
mov cl,byte[__dreg+16]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln421
and ah,0BFh
jmp short ln422
ln421:
or ah,40h
ln422:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 09F9
K9F9:
mov cl,byte[__dreg+16]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln423
and ah,0BFh
jmp short ln424
ln423:
or ah,40h
ln424:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0A00 - 0A07
KA00:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
xor [__dreg+ebx*4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 0A10 - 0A17
KA10:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0A18 - 0A1F
KA18:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0A20 - 0A27
KA20:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0A28 - 0A2F
KA28:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0A30 - 0A37
KA30:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 0A38
KA38:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 0A39
KA39:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[esp]
lahf
mov al,0
add esp,byte 4
call writememorybyte
sub edi,byte 24
jmp execend
; Opcode 0A3C
KA3C:
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
xor cl,[esi]
add esi,byte 2
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp execend
; Opcodes 0A40 - 0A47
KA40:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
xor [__dreg+ebx*4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 0A50 - 0A57
KA50:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 0A58 - 0A5F
KA58:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes 0A60 - 0A67
KA60:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 0A68 - 0A6F
KA68:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 0A70 - 0A77
KA70:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 22
jmp execend
; Opcode 0A78
KA78:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 20
jmp execend
; Opcode 0A79
KA79:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[esp]
lahf
mov al,0
add esp,byte 4
call writememoryword
sub edi,byte 24
jmp execend
; Opcode 0A7C
KA7C:
test byte[__sr+1],20h
jz near privilege_violation
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
xor cx,[esi]
add esi,byte 2
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln425
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln426
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln425
ln426:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln425:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp exec_checkpoint
; Opcodes 0A80 - 0A87
KA80:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
xor [__dreg+ebx*4],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 0A90 - 0A97
KA90:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 0A98 - 0A9F
KA98:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 28
jmp execend
; Opcodes 0AA0 - 0AA7
KAA0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 30
jmp execend
; Opcodes 0AA8 - 0AAF
KAA8:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcodes 0AB0 - 0AB7
KAB0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 34
jmp execend
; Opcode 0AB8
KAB8:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 32
jmp execend
; Opcode 0AB9
KAB9:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[esp]
lahf
mov al,0
add esp,byte 4
call writememorydword
sub edi,byte 36
jmp execend
; Opcodes 0B00 - 0B07
KB00:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln427
and ah,0BFh
jmp short ln428
ln427:
or ah,40h
ln428:
sub edi,byte 6
jmp execend
; Opcodes 0B08 - 0B0F
KB08:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+20],bx
sub edi,byte 16
jmp execend
; Opcodes 0B10 - 0B17
KB10:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln429
and ah,0BFh
jmp short ln430
ln429:
or ah,40h
ln430:
sub edi,byte 8
jmp execend
; Opcodes 0B18 - 0B1F
KB18:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln431
and ah,0BFh
jmp short ln432
ln431:
or ah,40h
ln432:
sub edi,byte 8
jmp execend
; Opcodes 0B20 - 0B27
KB20:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln433
and ah,0BFh
jmp short ln434
ln433:
or ah,40h
ln434:
sub edi,byte 10
jmp execend
; Opcodes 0B28 - 0B2F
KB28:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln435
and ah,0BFh
jmp short ln436
ln435:
or ah,40h
ln436:
sub edi,byte 12
jmp execend
; Opcodes 0B30 - 0B37
KB30:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln437
and ah,0BFh
jmp short ln438
ln437:
or ah,40h
ln438:
sub edi,byte 14
jmp execend
; Opcode 0B38
KB38:
mov cl,byte[__dreg+20]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln439
and ah,0BFh
jmp short ln440
ln439:
or ah,40h
ln440:
sub edi,byte 12
jmp execend
; Opcode 0B39
KB39:
mov cl,byte[__dreg+20]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln441
and ah,0BFh
jmp short ln442
ln441:
or ah,40h
ln442:
sub edi,byte 16
jmp execend
; Opcode 0B3A
KB3A:
mov cl,byte[__dreg+20]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln443
and ah,0BFh
jmp short ln444
ln443:
or ah,40h
ln444:
sub edi,byte 12
jmp execend
; Opcode 0B3B
KB3B:
mov cl,byte[__dreg+20]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln445
and ah,0BFh
jmp short ln446
ln445:
or ah,40h
ln446:
sub edi,byte 14
jmp execend
; Opcode 0B3C
KB3C:
mov cl,byte[__dreg+20]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln447
and ah,0BFh
jmp short ln448
ln447:
or ah,40h
ln448:
sub edi,byte 8
jmp execend
; Opcodes 0B40 - 0B47
KB40:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln449
and ah,0BFh
jmp short ln450
ln449:
or ah,40h
ln450:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0B48 - 0B4F
KB48:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+20],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0B50 - 0B57
KB50:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln451
and ah,0BFh
jmp short ln452
ln451:
or ah,40h
ln452:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0B58 - 0B5F
KB58:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln453
and ah,0BFh
jmp short ln454
ln453:
or ah,40h
ln454:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0B60 - 0B67
KB60:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln455
and ah,0BFh
jmp short ln456
ln455:
or ah,40h
ln456:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0B68 - 0B6F
KB68:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln457
and ah,0BFh
jmp short ln458
ln457:
or ah,40h
ln458:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0B70 - 0B77
KB70:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln459
and ah,0BFh
jmp short ln460
ln459:
or ah,40h
ln460:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0B78
KB78:
mov cl,byte[__dreg+20]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln461
and ah,0BFh
jmp short ln462
ln461:
or ah,40h
ln462:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0B79
KB79:
mov cl,byte[__dreg+20]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln463
and ah,0BFh
jmp short ln464
ln463:
or ah,40h
ln464:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0B80 - 0B87
KB80:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln465
and ah,0BFh
jmp short ln466
ln465:
or ah,40h
ln466:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0B88 - 0B8F
KB88:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+20]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0B90 - 0B97
KB90:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln467
and ah,0BFh
jmp short ln468
ln467:
or ah,40h
ln468:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0B98 - 0B9F
KB98:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln469
and ah,0BFh
jmp short ln470
ln469:
or ah,40h
ln470:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0BA0 - 0BA7
KBA0:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln471
and ah,0BFh
jmp short ln472
ln471:
or ah,40h
ln472:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0BA8 - 0BAF
KBA8:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln473
and ah,0BFh
jmp short ln474
ln473:
or ah,40h
ln474:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0BB0 - 0BB7
KBB0:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln475
and ah,0BFh
jmp short ln476
ln475:
or ah,40h
ln476:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0BB8
KBB8:
mov cl,byte[__dreg+20]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln477
and ah,0BFh
jmp short ln478
ln477:
or ah,40h
ln478:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0BB9
KBB9:
mov cl,byte[__dreg+20]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln479
and ah,0BFh
jmp short ln480
ln479:
or ah,40h
ln480:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0BC0 - 0BC7
KBC0:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln481
and ah,0BFh
jmp short ln482
ln481:
or ah,40h
ln482:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0BC8 - 0BCF
KBC8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+20]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0BD0 - 0BD7
KBD0:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln483
and ah,0BFh
jmp short ln484
ln483:
or ah,40h
ln484:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0BD8 - 0BDF
KBD8:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln485
and ah,0BFh
jmp short ln486
ln485:
or ah,40h
ln486:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0BE0 - 0BE7
KBE0:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln487
and ah,0BFh
jmp short ln488
ln487:
or ah,40h
ln488:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0BE8 - 0BEF
KBE8:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln489
and ah,0BFh
jmp short ln490
ln489:
or ah,40h
ln490:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0BF0 - 0BF7
KBF0:
mov cl,byte[__dreg+20]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln491
and ah,0BFh
jmp short ln492
ln491:
or ah,40h
ln492:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0BF8
KBF8:
mov cl,byte[__dreg+20]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln493
and ah,0BFh
jmp short ln494
ln493:
or ah,40h
ln494:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0BF9
KBF9:
mov cl,byte[__dreg+20]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln495
and ah,0BFh
jmp short ln496
ln495:
or ah,40h
ln496:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0C00 - 0C07
KC00:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
cmp [__dreg+ebx*4],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes 0C10 - 0C17
KC10:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp cl,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 12
jmp execend
; Opcodes 0C18 - 0C1F
KC18:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp cl,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 12
jmp execend
; Opcodes 0C20 - 0C27
KC20:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp cl,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 14
jmp execend
; Opcodes 0C28 - 0C2F
KC28:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp cl,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 16
jmp execend
; Opcodes 0C30 - 0C37
KC30:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp cl,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 18
jmp execend
; Opcode 0C38
KC38:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp cl,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 16
jmp execend
; Opcode 0C39
KC39:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp cl,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 20
jmp execend
; Opcodes 0C40 - 0C47
KC40:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
cmp [__dreg+ebx*4],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes 0C50 - 0C57
KC50:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
cmp cx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 12
jmp execend
; Opcodes 0C58 - 0C5F
KC58:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp cx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 12
jmp execend
; Opcodes 0C60 - 0C67
KC60:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp cx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 14
jmp execend
; Opcodes 0C68 - 0C6F
KC68:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp cx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 16
jmp execend
; Opcodes 0C70 - 0C77
KC70:
and ebx,byte 7
mov cx,[esi]
add esi,byte 2
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp cx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 18
jmp execend
; Opcode 0C78
KC78:
mov cx,[esi]
add esi,byte 2
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp cx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 16
jmp execend
; Opcode 0C79
KC79:
mov cx,[esi]
add esi,byte 2
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp cx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 20
jmp execend
; Opcodes 0C80 - 0C87
KC80:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
cmp [__dreg+ebx*4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes 0C90 - 0C97
KC90:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
cmp ecx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 20
jmp execend
; Opcodes 0C98 - 0C9F
KC98:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp ecx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 20
jmp execend
; Opcodes 0CA0 - 0CA7
KCA0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp ecx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 22
jmp execend
; Opcodes 0CA8 - 0CAF
KCA8:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp ecx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 24
jmp execend
; Opcodes 0CB0 - 0CB7
KCB0:
and ebx,byte 7
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp ecx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 26
jmp execend
; Opcode 0CB8
KCB8:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp ecx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 24
jmp execend
; Opcode 0CB9
KCB9:
mov ecx,[esi]
rol ecx,16
add esi,byte 4
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp ecx,[esp]
lahf
seto al
add esp,byte 4
sub edi,byte 28
jmp execend
; Opcodes 0D00 - 0D07
KD00:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln497
and ah,0BFh
jmp short ln498
ln497:
or ah,40h
ln498:
sub edi,byte 6
jmp execend
; Opcodes 0D08 - 0D0F
KD08:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+24],bx
sub edi,byte 16
jmp execend
; Opcodes 0D10 - 0D17
KD10:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln499
and ah,0BFh
jmp short ln500
ln499:
or ah,40h
ln500:
sub edi,byte 8
jmp execend
; Opcodes 0D18 - 0D1F
KD18:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln501
and ah,0BFh
jmp short ln502
ln501:
or ah,40h
ln502:
sub edi,byte 8
jmp execend
; Opcodes 0D20 - 0D27
KD20:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln503
and ah,0BFh
jmp short ln504
ln503:
or ah,40h
ln504:
sub edi,byte 10
jmp execend
; Opcodes 0D28 - 0D2F
KD28:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln505
and ah,0BFh
jmp short ln506
ln505:
or ah,40h
ln506:
sub edi,byte 12
jmp execend
; Opcodes 0D30 - 0D37
KD30:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln507
and ah,0BFh
jmp short ln508
ln507:
or ah,40h
ln508:
sub edi,byte 14
jmp execend
; Opcode 0D38
KD38:
mov cl,byte[__dreg+24]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln509
and ah,0BFh
jmp short ln510
ln509:
or ah,40h
ln510:
sub edi,byte 12
jmp execend
; Opcode 0D39
KD39:
mov cl,byte[__dreg+24]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln511
and ah,0BFh
jmp short ln512
ln511:
or ah,40h
ln512:
sub edi,byte 16
jmp execend
; Opcode 0D3A
KD3A:
mov cl,byte[__dreg+24]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln513
and ah,0BFh
jmp short ln514
ln513:
or ah,40h
ln514:
sub edi,byte 12
jmp execend
; Opcode 0D3B
KD3B:
mov cl,byte[__dreg+24]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln515
and ah,0BFh
jmp short ln516
ln515:
or ah,40h
ln516:
sub edi,byte 14
jmp execend
; Opcode 0D3C
KD3C:
mov cl,byte[__dreg+24]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln517
and ah,0BFh
jmp short ln518
ln517:
or ah,40h
ln518:
sub edi,byte 8
jmp execend
; Opcodes 0D40 - 0D47
KD40:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln519
and ah,0BFh
jmp short ln520
ln519:
or ah,40h
ln520:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0D48 - 0D4F
KD48:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+24],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0D50 - 0D57
KD50:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln521
and ah,0BFh
jmp short ln522
ln521:
or ah,40h
ln522:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0D58 - 0D5F
KD58:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln523
and ah,0BFh
jmp short ln524
ln523:
or ah,40h
ln524:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0D60 - 0D67
KD60:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln525
and ah,0BFh
jmp short ln526
ln525:
or ah,40h
ln526:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0D68 - 0D6F
KD68:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln527
and ah,0BFh
jmp short ln528
ln527:
or ah,40h
ln528:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0D70 - 0D77
KD70:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln529
and ah,0BFh
jmp short ln530
ln529:
or ah,40h
ln530:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0D78
KD78:
mov cl,byte[__dreg+24]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln531
and ah,0BFh
jmp short ln532
ln531:
or ah,40h
ln532:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0D79
KD79:
mov cl,byte[__dreg+24]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln533
and ah,0BFh
jmp short ln534
ln533:
or ah,40h
ln534:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0D80 - 0D87
KD80:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln535
and ah,0BFh
jmp short ln536
ln535:
or ah,40h
ln536:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0D88 - 0D8F
KD88:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+24]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0D90 - 0D97
KD90:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln537
and ah,0BFh
jmp short ln538
ln537:
or ah,40h
ln538:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0D98 - 0D9F
KD98:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln539
and ah,0BFh
jmp short ln540
ln539:
or ah,40h
ln540:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0DA0 - 0DA7
KDA0:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln541
and ah,0BFh
jmp short ln542
ln541:
or ah,40h
ln542:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0DA8 - 0DAF
KDA8:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln543
and ah,0BFh
jmp short ln544
ln543:
or ah,40h
ln544:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0DB0 - 0DB7
KDB0:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln545
and ah,0BFh
jmp short ln546
ln545:
or ah,40h
ln546:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0DB8
KDB8:
mov cl,byte[__dreg+24]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln547
and ah,0BFh
jmp short ln548
ln547:
or ah,40h
ln548:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0DB9
KDB9:
mov cl,byte[__dreg+24]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln549
and ah,0BFh
jmp short ln550
ln549:
or ah,40h
ln550:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0DC0 - 0DC7
KDC0:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln551
and ah,0BFh
jmp short ln552
ln551:
or ah,40h
ln552:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0DC8 - 0DCF
KDC8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+24]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0DD0 - 0DD7
KDD0:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln553
and ah,0BFh
jmp short ln554
ln553:
or ah,40h
ln554:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0DD8 - 0DDF
KDD8:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln555
and ah,0BFh
jmp short ln556
ln555:
or ah,40h
ln556:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0DE0 - 0DE7
KDE0:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln557
and ah,0BFh
jmp short ln558
ln557:
or ah,40h
ln558:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0DE8 - 0DEF
KDE8:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln559
and ah,0BFh
jmp short ln560
ln559:
or ah,40h
ln560:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0DF0 - 0DF7
KDF0:
mov cl,byte[__dreg+24]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln561
and ah,0BFh
jmp short ln562
ln561:
or ah,40h
ln562:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0DF8
KDF8:
mov cl,byte[__dreg+24]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln563
and ah,0BFh
jmp short ln564
ln563:
or ah,40h
ln564:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0DF9
KDF9:
mov cl,byte[__dreg+24]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln565
and ah,0BFh
jmp short ln566
ln565:
or ah,40h
ln566:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0F00 - 0F07
KF00:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
test [__dreg+ebx*4],edx
jz short ln567
and ah,0BFh
jmp short ln568
ln567:
or ah,40h
ln568:
sub edi,byte 6
jmp execend
; Opcodes 0F08 - 0F0F
KF08:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+28],bx
sub edi,byte 16
jmp execend
; Opcodes 0F10 - 0F17
KF10:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln569
and ah,0BFh
jmp short ln570
ln569:
or ah,40h
ln570:
sub edi,byte 8
jmp execend
; Opcodes 0F18 - 0F1F
KF18:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln571
and ah,0BFh
jmp short ln572
ln571:
or ah,40h
ln572:
sub edi,byte 8
jmp execend
; Opcodes 0F20 - 0F27
KF20:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
push ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln573
and ah,0BFh
jmp short ln574
ln573:
or ah,40h
ln574:
sub edi,byte 10
jmp execend
; Opcodes 0F28 - 0F2F
KF28:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln575
and ah,0BFh
jmp short ln576
ln575:
or ah,40h
ln576:
sub edi,byte 12
jmp execend
; Opcodes 0F30 - 0F37
KF30:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
push ecx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln577
and ah,0BFh
jmp short ln578
ln577:
or ah,40h
ln578:
sub edi,byte 14
jmp execend
; Opcode 0F38
KF38:
mov cl,byte[__dreg+28]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln579
and ah,0BFh
jmp short ln580
ln579:
or ah,40h
ln580:
sub edi,byte 12
jmp execend
; Opcode 0F39
KF39:
mov cl,byte[__dreg+28]
and ecx,byte 7
push ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln581
and ah,0BFh
jmp short ln582
ln581:
or ah,40h
ln582:
sub edi,byte 16
jmp execend
; Opcode 0F3A
KF3A:
mov cl,byte[__dreg+28]
and ecx,byte 7
push ecx
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln583
and ah,0BFh
jmp short ln584
ln583:
or ah,40h
ln584:
sub edi,byte 12
jmp execend
; Opcode 0F3B
KF3B:
mov cl,byte[__dreg+28]
and ecx,byte 7
push ecx
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln585
and ah,0BFh
jmp short ln586
ln585:
or ah,40h
ln586:
sub edi,byte 14
jmp execend
; Opcode 0F3C
KF3C:
mov cl,byte[__dreg+28]
and ecx,byte 7
push ecx
mov cx,[esi]
add esi,byte 2
mov edx,ecx
pop ecx
inc cl
shr dl,cl
jnc short ln587
and ah,0BFh
jmp short ln588
ln587:
or ah,40h
ln588:
sub edi,byte 8
jmp execend
; Opcodes 0F40 - 0F47
KF40:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln589
and ah,0BFh
jmp short ln590
ln589:
or ah,40h
ln590:
xor ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0F48 - 0F4F
KF48:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
add edx,byte 2
shl ebx,16
call readmemorybyte
mov bh,cl
add edx,byte 2
call readmemorybyte
mov bl,cl
mov [__dreg+28],ebx
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0F50 - 0F57
KF50:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln591
and ah,0BFh
jmp short ln592
ln591:
or ah,40h
ln592:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0F58 - 0F5F
KF58:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln593
and ah,0BFh
jmp short ln594
ln593:
or ah,40h
ln594:
xor cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0F60 - 0F67
KF60:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln595
and ah,0BFh
jmp short ln596
ln595:
or ah,40h
ln596:
xor cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0F68 - 0F6F
KF68:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln597
and ah,0BFh
jmp short ln598
ln597:
or ah,40h
ln598:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0F70 - 0F77
KF70:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln599
and ah,0BFh
jmp short ln600
ln599:
or ah,40h
ln600:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0F78
KF78:
mov cl,byte[__dreg+28]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln601
and ah,0BFh
jmp short ln602
ln601:
or ah,40h
ln602:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0F79
KF79:
mov cl,byte[__dreg+28]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln603
and ah,0BFh
jmp short ln604
ln603:
or ah,40h
ln604:
xor cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0F80 - 0F87
KF80:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln605
and ah,0BFh
jmp short ln606
ln605:
or ah,40h
ln606:
not edx
and ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 10
jmp execend
; Opcodes 0F88 - 0F8F
KF88:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+28]
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 16
jmp execend
; Opcodes 0F90 - 0F97
KF90:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln607
and ah,0BFh
jmp short ln608
ln607:
or ah,40h
ln608:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0F98 - 0F9F
KF98:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln609
and ah,0BFh
jmp short ln610
ln609:
or ah,40h
ln610:
not dl
and cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0FA0 - 0FA7
KFA0:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln611
and ah,0BFh
jmp short ln612
ln611:
or ah,40h
ln612:
not dl
and cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0FA8 - 0FAF
KFA8:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln613
and ah,0BFh
jmp short ln614
ln613:
or ah,40h
ln614:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0FB0 - 0FB7
KFB0:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln615
and ah,0BFh
jmp short ln616
ln615:
or ah,40h
ln616:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0FB8
KFB8:
mov cl,byte[__dreg+28]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln617
and ah,0BFh
jmp short ln618
ln617:
or ah,40h
ln618:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0FB9
KFB9:
mov cl,byte[__dreg+28]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln619
and ah,0BFh
jmp short ln620
ln619:
or ah,40h
ln620:
not dl
and cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 0FC0 - 0FC7
KFC0:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 31
mov edx,1
shl edx,cl
mov ecx,[__dreg+ebx*4]
test ecx,edx
jz short ln621
and ah,0BFh
jmp short ln622
ln621:
or ah,40h
ln622:
or ecx,edx
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes 0FC8 - 0FCF
KFC8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ebx,[__dreg+28]
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
add edx,byte 2
rol ebx,16
mov cl,bh
call writememorybyte
add edx,byte 2
mov cl,bl
call writememorybyte
xor ebx,ebx
sub edi,byte 24
jmp execend
; Opcodes 0FD0 - 0FD7
KFD0:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln623
and ah,0BFh
jmp short ln624
ln623:
or ah,40h
ln624:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 0FD8 - 0FDF
KFD8:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln625
and ah,0BFh
jmp short ln626
ln625:
or ah,40h
ln626:
or cl,dl
pop edx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 0FE0 - 0FE7
KFE0:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln627
and ah,0BFh
jmp short ln628
ln627:
or ah,40h
ln628:
or cl,dl
pop edx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 0FE8 - 0FEF
KFE8:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln629
and ah,0BFh
jmp short ln630
ln629:
or ah,40h
ln630:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 0FF0 - 0FF7
KFF0:
mov cl,byte[__dreg+28]
and ebx,byte 7
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln631
and ah,0BFh
jmp short ln632
ln631:
or ah,40h
ln632:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 0FF8
KFF8:
mov cl,byte[__dreg+28]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln633
and ah,0BFh
jmp short ln634
ln633:
or ah,40h
ln634:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 0FF9
KFF9:
mov cl,byte[__dreg+28]
and ecx,byte 7
mov dl,1
shl dl,cl
push edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xchg edx,[esp]
test cl,dl
jz short ln635
and ah,0BFh
jmp short ln636
ln635:
or ah,40h
ln636:
or cl,dl
pop edx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 1000 - 1007
L000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1008 - 100F
L008:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1010 - 1017
L010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1018 - 101F
L018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1020 - 1027
L020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1028 - 102F
L028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1030 - 1037
L030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1038
L038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1039
L039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 103A
L03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 103B
L03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 103C
L03C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+0],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1080 - 1087
L080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1088 - 108F
L088:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1090 - 1097
L090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1098 - 109F
L098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 10A0 - 10A7
L0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 10A8 - 10AF
L0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 10B0 - 10B7
L0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 10B8
L0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 10B9
L0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 10BA
L0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 10BB
L0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 10BC
L0BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 10C0 - 10C7
L0C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 10C8 - 10CF
L0C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 10D0 - 10D7
L0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 10D8 - 10DF
L0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 10E0 - 10E7
L0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 10E8 - 10EF
L0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 10F0 - 10F7
L0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 10F8
L0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 10F9
L0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 10FA
L0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 10FB
L0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 10FC
L0FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+0]
call writememorybyte
inc edx
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1100 - 1107
L100:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1108 - 110F
L108:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1110 - 1117
L110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1118 - 111F
L118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1120 - 1127
L120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1128 - 112F
L128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1130 - 1137
L130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1138
L138:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1139
L139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 113A
L13A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 113B
L13B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 113C
L13C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+0]
dec edx
call writememorybyte
mov [__areg+0],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1140 - 1147
L140:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1148 - 114F
L148:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1150 - 1157
L150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1158 - 115F
L158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1160 - 1167
L160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1168 - 116F
L168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1170 - 1177
L170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1178
L178:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1179
L179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 117A
L17A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 117B
L17B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 117C
L17C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1180 - 1187
L180:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1188 - 118F
L188:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1190 - 1197
L190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1198 - 119F
L198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 11A0 - 11A7
L1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 11A8 - 11AF
L1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 11B0 - 11B7
L1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 11B8
L1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 11B9
L1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 11BA
L1BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 11BB
L1BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 11BC
L1BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+0]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 11C0 - 11C7
L1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 11C8 - 11CF
L1C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 11D0 - 11D7
L1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 11D8 - 11DF
L1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 11E0 - 11E7
L1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 11E8 - 11EF
L1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 11F0 - 11F7
L1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 11F8
L1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 11F9
L1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 11FA
L1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 11FB
L1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 11FC
L1FC:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1200 - 1207
L200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1208 - 120F
L208:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1210 - 1217
L210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1218 - 121F
L218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1220 - 1227
L220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1228 - 122F
L228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1230 - 1237
L230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1238
L238:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1239
L239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 123A
L23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 123B
L23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 123C
L23C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+4],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1280 - 1287
L280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1288 - 128F
L288:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1290 - 1297
L290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1298 - 129F
L298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 12A0 - 12A7
L2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 12A8 - 12AF
L2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 12B0 - 12B7
L2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 12B8
L2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 12B9
L2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 12BA
L2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 12BB
L2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 12BC
L2BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 12C0 - 12C7
L2C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 12C8 - 12CF
L2C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 12D0 - 12D7
L2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 12D8 - 12DF
L2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 12E0 - 12E7
L2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 12E8 - 12EF
L2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 12F0 - 12F7
L2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 12F8
L2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 12F9
L2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 12FA
L2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 12FB
L2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 12FC
L2FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+4]
call writememorybyte
inc edx
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1300 - 1307
L300:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1308 - 130F
L308:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1310 - 1317
L310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1318 - 131F
L318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1320 - 1327
L320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1328 - 132F
L328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1330 - 1337
L330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1338
L338:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1339
L339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 133A
L33A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 133B
L33B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 133C
L33C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+4]
dec edx
call writememorybyte
mov [__areg+4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1340 - 1347
L340:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1348 - 134F
L348:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1350 - 1357
L350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1358 - 135F
L358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1360 - 1367
L360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1368 - 136F
L368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1370 - 1377
L370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1378
L378:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1379
L379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 137A
L37A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 137B
L37B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 137C
L37C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1380 - 1387
L380:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1388 - 138F
L388:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1390 - 1397
L390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1398 - 139F
L398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 13A0 - 13A7
L3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 13A8 - 13AF
L3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 13B0 - 13B7
L3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 13B8
L3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 13B9
L3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 13BA
L3BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 13BB
L3BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 13BC
L3BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+4]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 13C0 - 13C7
L3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 13C8 - 13CF
L3C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 13D0 - 13D7
L3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 13D8 - 13DF
L3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 13E0 - 13E7
L3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 13E8 - 13EF
L3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 13F0 - 13F7
L3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 13F8
L3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 13F9
L3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 13FA
L3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 13FB
L3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 13FC
L3FC:
mov cx,[esi]
add esi,byte 2
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1400 - 1407
L400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1408 - 140F
L408:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1410 - 1417
L410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1418 - 141F
L418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1420 - 1427
L420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1428 - 142F
L428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1430 - 1437
L430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1438
L438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1439
L439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 143A
L43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 143B
L43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 143C
L43C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+8],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1480 - 1487
L480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1488 - 148F
L488:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1490 - 1497
L490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1498 - 149F
L498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 14A0 - 14A7
L4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 14A8 - 14AF
L4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 14B0 - 14B7
L4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 14B8
L4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 14B9
L4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 14BA
L4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 14BB
L4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 14BC
L4BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 14C0 - 14C7
L4C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 14C8 - 14CF
L4C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 14D0 - 14D7
L4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 14D8 - 14DF
L4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 14E0 - 14E7
L4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 14E8 - 14EF
L4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 14F0 - 14F7
L4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 14F8
L4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 14F9
L4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 14FA
L4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 14FB
L4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 14FC
L4FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+8]
call writememorybyte
inc edx
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1500 - 1507
L500:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1508 - 150F
L508:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1510 - 1517
L510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1518 - 151F
L518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1520 - 1527
L520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1528 - 152F
L528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1530 - 1537
L530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1538
L538:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1539
L539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 153A
L53A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 153B
L53B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 153C
L53C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+8]
dec edx
call writememorybyte
mov [__areg+8],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1540 - 1547
L540:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1548 - 154F
L548:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1550 - 1557
L550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1558 - 155F
L558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1560 - 1567
L560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1568 - 156F
L568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1570 - 1577
L570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1578
L578:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1579
L579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 157A
L57A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 157B
L57B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 157C
L57C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1580 - 1587
L580:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1588 - 158F
L588:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1590 - 1597
L590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1598 - 159F
L598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 15A0 - 15A7
L5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 15A8 - 15AF
L5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 15B0 - 15B7
L5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 15B8
L5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 15B9
L5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 15BA
L5BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 15BB
L5BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 15BC
L5BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+8]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1600 - 1607
L600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1608 - 160F
L608:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1610 - 1617
L610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1618 - 161F
L618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1620 - 1627
L620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1628 - 162F
L628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1630 - 1637
L630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1638
L638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1639
L639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 163A
L63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 163B
L63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 163C
L63C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+12],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1680 - 1687
L680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1688 - 168F
L688:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1690 - 1697
L690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1698 - 169F
L698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 16A0 - 16A7
L6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 16A8 - 16AF
L6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 16B0 - 16B7
L6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 16B8
L6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 16B9
L6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 16BA
L6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 16BB
L6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 16BC
L6BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 16C0 - 16C7
L6C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 16C8 - 16CF
L6C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 16D0 - 16D7
L6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 16D8 - 16DF
L6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 16E0 - 16E7
L6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 16E8 - 16EF
L6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 16F0 - 16F7
L6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 16F8
L6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 16F9
L6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 16FA
L6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 16FB
L6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 16FC
L6FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+12]
call writememorybyte
inc edx
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1700 - 1707
L700:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1708 - 170F
L708:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1710 - 1717
L710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1718 - 171F
L718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1720 - 1727
L720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1728 - 172F
L728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1730 - 1737
L730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1738
L738:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1739
L739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 173A
L73A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 173B
L73B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 173C
L73C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+12]
dec edx
call writememorybyte
mov [__areg+12],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1740 - 1747
L740:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1748 - 174F
L748:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1750 - 1757
L750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1758 - 175F
L758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1760 - 1767
L760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1768 - 176F
L768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1770 - 1777
L770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1778
L778:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1779
L779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 177A
L77A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 177B
L77B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 177C
L77C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1780 - 1787
L780:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1788 - 178F
L788:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1790 - 1797
L790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1798 - 179F
L798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 17A0 - 17A7
L7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 17A8 - 17AF
L7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 17B0 - 17B7
L7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 17B8
L7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 17B9
L7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 17BA
L7BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 17BB
L7BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 17BC
L7BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+12]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1800 - 1807
L800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1808 - 180F
L808:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1810 - 1817
L810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1818 - 181F
L818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1820 - 1827
L820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1828 - 182F
L828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1830 - 1837
L830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1838
L838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1839
L839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 183A
L83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 183B
L83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 183C
L83C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+16],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1880 - 1887
L880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1888 - 188F
L888:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1890 - 1897
L890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1898 - 189F
L898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 18A0 - 18A7
L8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 18A8 - 18AF
L8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 18B0 - 18B7
L8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 18B8
L8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 18B9
L8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 18BA
L8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 18BB
L8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 18BC
L8BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 18C0 - 18C7
L8C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 18C8 - 18CF
L8C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 18D0 - 18D7
L8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 18D8 - 18DF
L8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 18E0 - 18E7
L8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 18E8 - 18EF
L8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 18F0 - 18F7
L8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 18F8
L8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 18F9
L8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 18FA
L8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 18FB
L8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 18FC
L8FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+16]
call writememorybyte
inc edx
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1900 - 1907
L900:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1908 - 190F
L908:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1910 - 1917
L910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1918 - 191F
L918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1920 - 1927
L920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1928 - 192F
L928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1930 - 1937
L930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1938
L938:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1939
L939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 193A
L93A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 193B
L93B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 193C
L93C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+16]
dec edx
call writememorybyte
mov [__areg+16],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1940 - 1947
L940:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1948 - 194F
L948:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1950 - 1957
L950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1958 - 195F
L958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1960 - 1967
L960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1968 - 196F
L968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1970 - 1977
L970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1978
L978:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1979
L979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 197A
L97A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 197B
L97B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 197C
L97C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1980 - 1987
L980:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1988 - 198F
L988:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1990 - 1997
L990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1998 - 199F
L998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 19A0 - 19A7
L9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 19A8 - 19AF
L9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 19B0 - 19B7
L9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 19B8
L9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 19B9
L9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 19BA
L9BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 19BB
L9BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 19BC
L9BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+16]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1A00 - 1A07
LA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1A08 - 1A0F
LA08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1A10 - 1A17
LA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1A18 - 1A1F
LA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1A20 - 1A27
LA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1A28 - 1A2F
LA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1A30 - 1A37
LA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1A38
LA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1A39
LA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1A3A
LA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1A3B
LA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1A3C
LA3C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+20],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1A80 - 1A87
LA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1A88 - 1A8F
LA88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1A90 - 1A97
LA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1A98 - 1A9F
LA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1AA0 - 1AA7
LAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1AA8 - 1AAF
LAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1AB0 - 1AB7
LAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1AB8
LAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1AB9
LAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1ABA
LABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1ABB
LABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1ABC
LABC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1AC0 - 1AC7
LAC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1AC8 - 1ACF
LAC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1AD0 - 1AD7
LAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1AD8 - 1ADF
LAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1AE0 - 1AE7
LAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1AE8 - 1AEF
LAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1AF0 - 1AF7
LAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1AF8
LAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1AF9
LAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1AFA
LAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1AFB
LAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1AFC
LAFC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+20]
call writememorybyte
inc edx
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1B00 - 1B07
LB00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1B08 - 1B0F
LB08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1B10 - 1B17
LB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1B18 - 1B1F
LB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1B20 - 1B27
LB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1B28 - 1B2F
LB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1B30 - 1B37
LB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1B38
LB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1B39
LB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1B3A
LB3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1B3B
LB3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1B3C
LB3C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+20]
dec edx
call writememorybyte
mov [__areg+20],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1B40 - 1B47
LB40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1B48 - 1B4F
LB48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1B50 - 1B57
LB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1B58 - 1B5F
LB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1B60 - 1B67
LB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1B68 - 1B6F
LB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1B70 - 1B77
LB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1B78
LB78:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1B79
LB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1B7A
LB7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1B7B
LB7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1B7C
LB7C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1B80 - 1B87
LB80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1B88 - 1B8F
LB88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1B90 - 1B97
LB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1B98 - 1B9F
LB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1BA0 - 1BA7
LBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1BA8 - 1BAF
LBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 1BB0 - 1BB7
LBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1BB8
LBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1BB9
LBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 1BBA
LBBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1BBB
LBBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1BBC
LBBC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+20]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1C00 - 1C07
LC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1C08 - 1C0F
LC08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1C10 - 1C17
LC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1C18 - 1C1F
LC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1C20 - 1C27
LC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1C28 - 1C2F
LC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1C30 - 1C37
LC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1C38
LC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1C39
LC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1C3A
LC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1C3B
LC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1C3C
LC3C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+24],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1C80 - 1C87
LC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1C88 - 1C8F
LC88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1C90 - 1C97
LC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1C98 - 1C9F
LC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1CA0 - 1CA7
LCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1CA8 - 1CAF
LCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1CB0 - 1CB7
LCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1CB8
LCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1CB9
LCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1CBA
LCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1CBB
LCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1CBC
LCBC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1CC0 - 1CC7
LCC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1CC8 - 1CCF
LCC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1CD0 - 1CD7
LCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1CD8 - 1CDF
LCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1CE0 - 1CE7
LCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1CE8 - 1CEF
LCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1CF0 - 1CF7
LCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1CF8
LCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1CF9
LCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1CFA
LCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1CFB
LCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1CFC
LCFC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+24]
call writememorybyte
inc edx
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1D00 - 1D07
LD00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1D08 - 1D0F
LD08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1D10 - 1D17
LD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1D18 - 1D1F
LD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1D20 - 1D27
LD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1D28 - 1D2F
LD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1D30 - 1D37
LD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1D38
LD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1D39
LD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1D3A
LD3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1D3B
LD3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1D3C
LD3C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+24]
dec edx
call writememorybyte
mov [__areg+24],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1D40 - 1D47
LD40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1D48 - 1D4F
LD48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1D50 - 1D57
LD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1D58 - 1D5F
LD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1D60 - 1D67
LD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1D68 - 1D6F
LD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1D70 - 1D77
LD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1D78
LD78:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1D79
LD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1D7A
LD7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1D7B
LD7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1D7C
LD7C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1D80 - 1D87
LD80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1D88 - 1D8F
LD88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1D90 - 1D97
LD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1D98 - 1D9F
LD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1DA0 - 1DA7
LDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1DA8 - 1DAF
LDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 1DB0 - 1DB7
LDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1DB8
LDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1DB9
LDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 1DBA
LDBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1DBB
LDBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1DBC
LDBC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+24]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1E00 - 1E07
LE00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1E08 - 1E0F
LE08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 1E10 - 1E17
LE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1E18 - 1E1F
LE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1E20 - 1E27
LE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 1E28 - 1E2F
LE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1E30 - 1E37
LE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1E38
LE38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1E39
LE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1E3A
LE3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 1E3B
LE3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 1E3C
LE3C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+28],cl
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1E80 - 1E87
LE80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1E88 - 1E8F
LE88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1E90 - 1E97
LE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1E98 - 1E9F
LE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1EA0 - 1EA7
LEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1EA8 - 1EAF
LEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1EB0 - 1EB7
LEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1EB8
LEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1EB9
LEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1EBA
LEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1EBB
LEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1EBC
LEBC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1EC0 - 1EC7
LEC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1EC8 - 1ECF
LEC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1ED0 - 1ED7
LED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1ED8 - 1EDF
LED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1EE0 - 1EE7
LEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1EE8 - 1EEF
LEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1EF0 - 1EF7
LEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1EF8
LEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1EF9
LEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1EFA
LEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1EFB
LEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1EFC
LEFC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+28]
call writememorybyte
add edx,byte 2
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1F00 - 1F07
LF00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1F08 - 1F0F
LF08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 1F10 - 1F17
LF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1F18 - 1F1F
LF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1F20 - 1F27
LF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1F28 - 1F2F
LF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1F30 - 1F37
LF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1F38
LF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1F39
LF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1F3A
LF3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 1F3B
LF3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 1F3C
LF3C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+28]
sub edx,byte 2
call writememorybyte
mov [__areg+28],edx
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1F40 - 1F47
LF40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1F48 - 1F4F
LF48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 1F50 - 1F57
LF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1F58 - 1F5F
LF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1F60 - 1F67
LF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1F68 - 1F6F
LF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1F70 - 1F77
LF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1F78
LF78:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1F79
LF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1F7A
LF7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 1F7B
LF7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1F7C
LF7C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 1F80 - 1F87
LF80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1F88 - 1F8F
LF88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 1F90 - 1F97
LF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1F98 - 1F9F
LF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 1FA0 - 1FA7
LFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 1FA8 - 1FAF
LFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 1FB0 - 1FB7
LFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1FB8
LFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1FB9
LFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 1FBA
LFBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 1FBB
LFBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 1FBC
LFBC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+28]
call writememorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2000 - 2007
M000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2008 - 200F
M008:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2010 - 2017
M010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2018 - 201F
M018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2020 - 2027
M020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2028 - 202F
M028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2030 - 2037
M030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2038
M038:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2039
M039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 203A
M03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 203B
M03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 203C
M03C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+0],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2040 - 2047
M040:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+0],ecx
sub edi,byte 4
jmp execend
; Opcodes 2048 - 204F
M048:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+0],ecx
sub edi,byte 4
jmp execend
; Opcodes 2050 - 2057
M050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes 2058 - 205F
M058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes 2060 - 2067
M060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcodes 2068 - 206F
M068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcodes 2070 - 2077
M070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode 2078
M078:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcode 2079
M079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+0],ecx
sub edi,byte 20
jmp execend
; Opcode 207A
M07A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcode 207B
M07B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode 207C
M07C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes 2080 - 2087
M080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2088 - 208F
M088:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2090 - 2097
M090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2098 - 209F
M098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 20A0 - 20A7
M0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 20A8 - 20AF
M0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 20B0 - 20B7
M0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 20B8
M0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 20B9
M0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 20BA
M0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 20BB
M0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 20BC
M0BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 20C0 - 20C7
M0C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 20C8 - 20CF
M0C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 20D0 - 20D7
M0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 20D8 - 20DF
M0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 20E0 - 20E7
M0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 20E8 - 20EF
M0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 20F0 - 20F7
M0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 20F8
M0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 20F9
M0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 20FA
M0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 20FB
M0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 20FC
M0FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+0]
call writememorydword
add edx,byte 4
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2100 - 2107
M100:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2108 - 210F
M108:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2110 - 2117
M110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2118 - 211F
M118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2120 - 2127
M120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2128 - 212F
M128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2130 - 2137
M130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2138
M138:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2139
M139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 213A
M13A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 213B
M13B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 213C
M13C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+0]
sub edx,byte 4
call writememorydword
mov [__areg+0],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2140 - 2147
M140:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2148 - 214F
M148:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2150 - 2157
M150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2158 - 215F
M158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2160 - 2167
M160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2168 - 216F
M168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2170 - 2177
M170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2178
M178:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2179
M179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 217A
M17A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 217B
M17B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 217C
M17C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2180 - 2187
M180:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2188 - 218F
M188:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2190 - 2197
M190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2198 - 219F
M198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 21A0 - 21A7
M1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 21A8 - 21AF
M1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 21B0 - 21B7
M1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 21B8
M1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 21B9
M1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 21BA
M1BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 21BB
M1BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 21BC
M1BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+0]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 21C0 - 21C7
M1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 21C8 - 21CF
M1C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 21D0 - 21D7
M1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 21D8 - 21DF
M1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 21E0 - 21E7
M1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 21E8 - 21EF
M1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 21F0 - 21F7
M1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 21F8
M1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 21F9
M1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 21FA
M1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 21FB
M1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 21FC
M1FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2200 - 2207
M200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2208 - 220F
M208:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2210 - 2217
M210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2218 - 221F
M218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2220 - 2227
M220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2228 - 222F
M228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2230 - 2237
M230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2238
M238:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2239
M239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 223A
M23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 223B
M23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 223C
M23C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2240 - 2247
M240:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+4],ecx
sub edi,byte 4
jmp execend
; Opcodes 2248 - 224F
M248:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+4],ecx
sub edi,byte 4
jmp execend
; Opcodes 2250 - 2257
M250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes 2258 - 225F
M258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes 2260 - 2267
M260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcodes 2268 - 226F
M268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcodes 2270 - 2277
M270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode 2278
M278:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcode 2279
M279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+4],ecx
sub edi,byte 20
jmp execend
; Opcode 227A
M27A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcode 227B
M27B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode 227C
M27C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes 2280 - 2287
M280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2288 - 228F
M288:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2290 - 2297
M290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2298 - 229F
M298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 22A0 - 22A7
M2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 22A8 - 22AF
M2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 22B0 - 22B7
M2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 22B8
M2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 22B9
M2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 22BA
M2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 22BB
M2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 22BC
M2BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 22C0 - 22C7
M2C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 22C8 - 22CF
M2C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 22D0 - 22D7
M2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 22D8 - 22DF
M2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 22E0 - 22E7
M2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 22E8 - 22EF
M2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 22F0 - 22F7
M2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 22F8
M2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 22F9
M2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 22FA
M2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 22FB
M2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 22FC
M2FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+4]
call writememorydword
add edx,byte 4
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2300 - 2307
M300:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2308 - 230F
M308:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2310 - 2317
M310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2318 - 231F
M318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2320 - 2327
M320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2328 - 232F
M328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2330 - 2337
M330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2338
M338:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2339
M339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 233A
M33A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 233B
M33B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 233C
M33C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+4]
sub edx,byte 4
call writememorydword
mov [__areg+4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2340 - 2347
M340:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2348 - 234F
M348:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2350 - 2357
M350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2358 - 235F
M358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2360 - 2367
M360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2368 - 236F
M368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2370 - 2377
M370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2378
M378:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2379
M379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 237A
M37A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 237B
M37B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 237C
M37C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2380 - 2387
M380:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2388 - 238F
M388:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2390 - 2397
M390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2398 - 239F
M398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 23A0 - 23A7
M3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 23A8 - 23AF
M3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 23B0 - 23B7
M3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 23B8
M3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 23B9
M3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 23BA
M3BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 23BB
M3BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 23BC
M3BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+4]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 23C0 - 23C7
M3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 23C8 - 23CF
M3C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 23D0 - 23D7
M3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 23D8 - 23DF
M3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 23E0 - 23E7
M3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 23E8 - 23EF
M3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcodes 23F0 - 23F7
M3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 23F8
M3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 23F9
M3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 36
jmp execend
; Opcode 23FA
M3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 23FB
M3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 23FC
M3FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2400 - 2407
M400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2408 - 240F
M408:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2410 - 2417
M410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2418 - 241F
M418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2420 - 2427
M420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2428 - 242F
M428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2430 - 2437
M430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2438
M438:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2439
M439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 243A
M43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 243B
M43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 243C
M43C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+8],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2440 - 2447
M440:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+8],ecx
sub edi,byte 4
jmp execend
; Opcodes 2448 - 244F
M448:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+8],ecx
sub edi,byte 4
jmp execend
; Opcodes 2450 - 2457
M450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes 2458 - 245F
M458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes 2460 - 2467
M460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcodes 2468 - 246F
M468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcodes 2470 - 2477
M470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode 2478
M478:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcode 2479
M479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+8],ecx
sub edi,byte 20
jmp execend
; Opcode 247A
M47A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcode 247B
M47B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode 247C
M47C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes 2480 - 2487
M480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2488 - 248F
M488:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2490 - 2497
M490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2498 - 249F
M498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 24A0 - 24A7
M4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 24A8 - 24AF
M4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 24B0 - 24B7
M4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 24B8
M4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 24B9
M4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 24BA
M4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 24BB
M4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 24BC
M4BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 24C0 - 24C7
M4C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 24C8 - 24CF
M4C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 24D0 - 24D7
M4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 24D8 - 24DF
M4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 24E0 - 24E7
M4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 24E8 - 24EF
M4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 24F0 - 24F7
M4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 24F8
M4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 24F9
M4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 24FA
M4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 24FB
M4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 24FC
M4FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+8]
call writememorydword
add edx,byte 4
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2500 - 2507
M500:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2508 - 250F
M508:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2510 - 2517
M510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2518 - 251F
M518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2520 - 2527
M520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2528 - 252F
M528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2530 - 2537
M530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2538
M538:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2539
M539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 253A
M53A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 253B
M53B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 253C
M53C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+8]
sub edx,byte 4
call writememorydword
mov [__areg+8],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2540 - 2547
M540:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2548 - 254F
M548:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2550 - 2557
M550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2558 - 255F
M558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2560 - 2567
M560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2568 - 256F
M568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2570 - 2577
M570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2578
M578:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2579
M579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 257A
M57A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 257B
M57B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 257C
M57C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2580 - 2587
M580:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2588 - 258F
M588:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2590 - 2597
M590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2598 - 259F
M598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 25A0 - 25A7
M5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 25A8 - 25AF
M5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 25B0 - 25B7
M5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 25B8
M5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 25B9
M5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 25BA
M5BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 25BB
M5BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 25BC
M5BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+8]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2600 - 2607
M600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2608 - 260F
M608:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2610 - 2617
M610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2618 - 261F
M618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2620 - 2627
M620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2628 - 262F
M628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2630 - 2637
M630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2638
M638:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2639
M639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 263A
M63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 263B
M63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 263C
M63C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+12],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2640 - 2647
M640:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+12],ecx
sub edi,byte 4
jmp execend
; Opcodes 2648 - 264F
M648:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+12],ecx
sub edi,byte 4
jmp execend
; Opcodes 2650 - 2657
M650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes 2658 - 265F
M658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes 2660 - 2667
M660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcodes 2668 - 266F
M668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcodes 2670 - 2677
M670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode 2678
M678:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcode 2679
M679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+12],ecx
sub edi,byte 20
jmp execend
; Opcode 267A
M67A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcode 267B
M67B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode 267C
M67C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes 2680 - 2687
M680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2688 - 268F
M688:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2690 - 2697
M690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2698 - 269F
M698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 26A0 - 26A7
M6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 26A8 - 26AF
M6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 26B0 - 26B7
M6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 26B8
M6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 26B9
M6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 26BA
M6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 26BB
M6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 26BC
M6BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 26C0 - 26C7
M6C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 26C8 - 26CF
M6C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 26D0 - 26D7
M6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 26D8 - 26DF
M6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 26E0 - 26E7
M6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 26E8 - 26EF
M6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 26F0 - 26F7
M6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 26F8
M6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 26F9
M6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 26FA
M6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 26FB
M6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 26FC
M6FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+12]
call writememorydword
add edx,byte 4
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2700 - 2707
M700:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2708 - 270F
M708:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2710 - 2717
M710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2718 - 271F
M718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2720 - 2727
M720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2728 - 272F
M728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2730 - 2737
M730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2738
M738:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2739
M739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 273A
M73A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 273B
M73B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 273C
M73C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+12]
sub edx,byte 4
call writememorydword
mov [__areg+12],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2740 - 2747
M740:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2748 - 274F
M748:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2750 - 2757
M750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2758 - 275F
M758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2760 - 2767
M760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2768 - 276F
M768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2770 - 2777
M770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2778
M778:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2779
M779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 277A
M77A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 277B
M77B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 277C
M77C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2780 - 2787
M780:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2788 - 278F
M788:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2790 - 2797
M790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2798 - 279F
M798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 27A0 - 27A7
M7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 27A8 - 27AF
M7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 27B0 - 27B7
M7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 27B8
M7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 27B9
M7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 27BA
M7BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 27BB
M7BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 27BC
M7BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+12]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2800 - 2807
M800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2808 - 280F
M808:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2810 - 2817
M810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2818 - 281F
M818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2820 - 2827
M820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2828 - 282F
M828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2830 - 2837
M830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2838
M838:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2839
M839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 283A
M83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 283B
M83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 283C
M83C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+16],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2840 - 2847
M840:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+16],ecx
sub edi,byte 4
jmp execend
; Opcodes 2848 - 284F
M848:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+16],ecx
sub edi,byte 4
jmp execend
; Opcodes 2850 - 2857
M850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes 2858 - 285F
M858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes 2860 - 2867
M860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcodes 2868 - 286F
M868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcodes 2870 - 2877
M870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode 2878
M878:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcode 2879
M879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+16],ecx
sub edi,byte 20
jmp execend
; Opcode 287A
M87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcode 287B
M87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode 287C
M87C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes 2880 - 2887
M880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2888 - 288F
M888:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2890 - 2897
M890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2898 - 289F
M898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 28A0 - 28A7
M8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 28A8 - 28AF
M8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 28B0 - 28B7
M8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 28B8
M8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 28B9
M8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 28BA
M8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 28BB
M8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 28BC
M8BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 28C0 - 28C7
M8C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 28C8 - 28CF
M8C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 28D0 - 28D7
M8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 28D8 - 28DF
M8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 28E0 - 28E7
M8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 28E8 - 28EF
M8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 28F0 - 28F7
M8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 28F8
M8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 28F9
M8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 28FA
M8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 28FB
M8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 28FC
M8FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+16]
call writememorydword
add edx,byte 4
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2900 - 2907
M900:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2908 - 290F
M908:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2910 - 2917
M910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2918 - 291F
M918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2920 - 2927
M920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2928 - 292F
M928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2930 - 2937
M930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2938
M938:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2939
M939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 293A
M93A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 293B
M93B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 293C
M93C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+16]
sub edx,byte 4
call writememorydword
mov [__areg+16],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2940 - 2947
M940:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2948 - 294F
M948:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2950 - 2957
M950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2958 - 295F
M958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2960 - 2967
M960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2968 - 296F
M968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2970 - 2977
M970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2978
M978:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2979
M979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 297A
M97A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 297B
M97B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 297C
M97C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2980 - 2987
M980:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2988 - 298F
M988:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2990 - 2997
M990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2998 - 299F
M998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 29A0 - 29A7
M9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 29A8 - 29AF
M9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 29B0 - 29B7
M9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 29B8
M9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 29B9
M9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 29BA
M9BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 29BB
M9BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 29BC
M9BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+16]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2A00 - 2A07
MA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2A08 - 2A0F
MA08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2A10 - 2A17
MA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2A18 - 2A1F
MA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2A20 - 2A27
MA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2A28 - 2A2F
MA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2A30 - 2A37
MA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2A38
MA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2A39
MA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 2A3A
MA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2A3B
MA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2A3C
MA3C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+20],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2A40 - 2A47
MA40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+20],ecx
sub edi,byte 4
jmp execend
; Opcodes 2A48 - 2A4F
MA48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+20],ecx
sub edi,byte 4
jmp execend
; Opcodes 2A50 - 2A57
MA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes 2A58 - 2A5F
MA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes 2A60 - 2A67
MA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcodes 2A68 - 2A6F
MA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcodes 2A70 - 2A77
MA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode 2A78
MA78:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcode 2A79
MA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+20],ecx
sub edi,byte 20
jmp execend
; Opcode 2A7A
MA7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcode 2A7B
MA7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode 2A7C
MA7C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes 2A80 - 2A87
MA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2A88 - 2A8F
MA88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2A90 - 2A97
MA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2A98 - 2A9F
MA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2AA0 - 2AA7
MAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2AA8 - 2AAF
MAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2AB0 - 2AB7
MAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2AB8
MAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2AB9
MAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2ABA
MABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2ABB
MABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2ABC
MABC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2AC0 - 2AC7
MAC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2AC8 - 2ACF
MAC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2AD0 - 2AD7
MAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2AD8 - 2ADF
MAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2AE0 - 2AE7
MAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2AE8 - 2AEF
MAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2AF0 - 2AF7
MAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2AF8
MAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2AF9
MAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2AFA
MAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2AFB
MAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2AFC
MAFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+20]
call writememorydword
add edx,byte 4
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2B00 - 2B07
MB00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2B08 - 2B0F
MB08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2B10 - 2B17
MB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2B18 - 2B1F
MB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2B20 - 2B27
MB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2B28 - 2B2F
MB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2B30 - 2B37
MB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2B38
MB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2B39
MB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2B3A
MB3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2B3B
MB3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2B3C
MB3C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+20]
sub edx,byte 4
call writememorydword
mov [__areg+20],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2B40 - 2B47
MB40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2B48 - 2B4F
MB48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2B50 - 2B57
MB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2B58 - 2B5F
MB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2B60 - 2B67
MB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2B68 - 2B6F
MB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2B70 - 2B77
MB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2B78
MB78:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2B79
MB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2B7A
MB7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2B7B
MB7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2B7C
MB7C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2B80 - 2B87
MB80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2B88 - 2B8F
MB88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2B90 - 2B97
MB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2B98 - 2B9F
MB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2BA0 - 2BA7
MBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2BA8 - 2BAF
MBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 2BB0 - 2BB7
MBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2BB8
MBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2BB9
MBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 2BBA
MBBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2BBB
MBBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2BBC
MBBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+20]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2C00 - 2C07
MC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2C08 - 2C0F
MC08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2C10 - 2C17
MC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2C18 - 2C1F
MC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2C20 - 2C27
MC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2C28 - 2C2F
MC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2C30 - 2C37
MC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2C38
MC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2C39
MC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 2C3A
MC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2C3B
MC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2C3C
MC3C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+24],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2C40 - 2C47
MC40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+24],ecx
sub edi,byte 4
jmp execend
; Opcodes 2C48 - 2C4F
MC48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+24],ecx
sub edi,byte 4
jmp execend
; Opcodes 2C50 - 2C57
MC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes 2C58 - 2C5F
MC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes 2C60 - 2C67
MC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcodes 2C68 - 2C6F
MC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcodes 2C70 - 2C77
MC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode 2C78
MC78:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcode 2C79
MC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+24],ecx
sub edi,byte 20
jmp execend
; Opcode 2C7A
MC7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcode 2C7B
MC7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode 2C7C
MC7C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes 2C80 - 2C87
MC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2C88 - 2C8F
MC88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2C90 - 2C97
MC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2C98 - 2C9F
MC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2CA0 - 2CA7
MCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2CA8 - 2CAF
MCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2CB0 - 2CB7
MCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2CB8
MCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2CB9
MCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2CBA
MCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2CBB
MCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2CBC
MCBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2CC0 - 2CC7
MCC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2CC8 - 2CCF
MCC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2CD0 - 2CD7
MCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2CD8 - 2CDF
MCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2CE0 - 2CE7
MCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2CE8 - 2CEF
MCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2CF0 - 2CF7
MCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2CF8
MCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2CF9
MCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2CFA
MCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2CFB
MCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2CFC
MCFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+24]
call writememorydword
add edx,byte 4
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2D00 - 2D07
MD00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2D08 - 2D0F
MD08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2D10 - 2D17
MD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2D18 - 2D1F
MD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2D20 - 2D27
MD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2D28 - 2D2F
MD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2D30 - 2D37
MD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2D38
MD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2D39
MD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2D3A
MD3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2D3B
MD3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2D3C
MD3C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+24]
sub edx,byte 4
call writememorydword
mov [__areg+24],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2D40 - 2D47
MD40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2D48 - 2D4F
MD48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2D50 - 2D57
MD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2D58 - 2D5F
MD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2D60 - 2D67
MD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2D68 - 2D6F
MD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2D70 - 2D77
MD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2D78
MD78:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2D79
MD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2D7A
MD7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2D7B
MD7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2D7C
MD7C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2D80 - 2D87
MD80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2D88 - 2D8F
MD88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2D90 - 2D97
MD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2D98 - 2D9F
MD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2DA0 - 2DA7
MDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2DA8 - 2DAF
MDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 2DB0 - 2DB7
MDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2DB8
MDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2DB9
MDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 2DBA
MDBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2DBB
MDBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2DBC
MDBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+24]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2E00 - 2E07
ME00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2E08 - 2E0F
ME08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 2E10 - 2E17
ME10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2E18 - 2E1F
ME18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2E20 - 2E27
ME20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 2E28 - 2E2F
ME28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2E30 - 2E37
ME30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2E38
ME38:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2E39
ME39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 2E3A
ME3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 2E3B
ME3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 2E3C
ME3C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__dreg+28],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2E40 - 2E47
ME40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__areg+28],ecx
sub edi,byte 4
jmp execend
; Opcodes 2E48 - 2E4F
ME48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__areg+28],ecx
sub edi,byte 4
jmp execend
; Opcodes 2E50 - 2E57
ME50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes 2E58 - 2E5F
ME58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes 2E60 - 2E67
ME60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcodes 2E68 - 2E6F
ME68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcodes 2E70 - 2E77
ME70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode 2E78
ME78:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcode 2E79
ME79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov [__areg+28],ecx
sub edi,byte 20
jmp execend
; Opcode 2E7A
ME7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcode 2E7B
ME7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode 2E7C
ME7C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes 2E80 - 2E87
ME80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2E88 - 2E8F
ME88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2E90 - 2E97
ME90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2E98 - 2E9F
ME98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2EA0 - 2EA7
MEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2EA8 - 2EAF
MEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2EB0 - 2EB7
MEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2EB8
MEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2EB9
MEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2EBA
MEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2EBB
MEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2EBC
MEBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2EC0 - 2EC7
MEC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2EC8 - 2ECF
MEC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2ED0 - 2ED7
MED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2ED8 - 2EDF
MED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2EE0 - 2EE7
MEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2EE8 - 2EEF
MEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2EF0 - 2EF7
MEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2EF8
MEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2EF9
MEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2EFA
MEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2EFB
MEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2EFC
MEFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+28]
call writememorydword
add edx,byte 4
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2F00 - 2F07
MF00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2F08 - 2F0F
MF08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 2F10 - 2F17
MF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2F18 - 2F1F
MF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2F20 - 2F27
MF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 2F28 - 2F2F
MF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2F30 - 2F37
MF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2F38
MF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2F39
MF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2F3A
MF3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 2F3B
MF3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 2F3C
MF3C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 2F40 - 2F47
MF40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2F48 - 2F4F
MF48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 2F50 - 2F57
MF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2F58 - 2F5F
MF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2F60 - 2F67
MF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2F68 - 2F6F
MF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2F70 - 2F77
MF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2F78
MF78:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2F79
MF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2F7A
MF7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 2F7B
MF7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2F7C
MF7C:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 2F80 - 2F87
MF80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2F88 - 2F8F
MF88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 2F90 - 2F97
MF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2F98 - 2F9F
MF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 2FA0 - 2FA7
MFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcodes 2FA8 - 2FAF
MFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcodes 2FB0 - 2FB7
MFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2FB8
MFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2FB9
MFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 34
jmp execend
; Opcode 2FBA
MFBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 30
jmp execend
; Opcode 2FBB
MFBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 32
jmp execend
; Opcode 2FBC
MFBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
call decode_ext
add edx,[__areg+28]
call writememorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcodes 3000 - 3007
N000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3008 - 300F
N008:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3010 - 3017
N010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3018 - 301F
N018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3020 - 3027
N020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3028 - 302F
N028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3030 - 3037
N030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3038
N038:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3039
N039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 303A
N03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 303B
N03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 303C
N03C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+0],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3040 - 3047
N040:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+0],ecx
sub edi,byte 4
jmp execend
; Opcodes 3048 - 304F
N048:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+0],ecx
sub edi,byte 4
jmp execend
; Opcodes 3050 - 3057
N050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes 3058 - 305F
N058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes 3060 - 3067
N060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+0],ecx
sub edi,byte 10
jmp execend
; Opcodes 3068 - 306F
N068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes 3070 - 3077
N070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcode 3078
N078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcode 3079
N079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcode 307A
N07A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcode 307B
N07B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcode 307C
N07C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes 3080 - 3087
N080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3088 - 308F
N088:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3090 - 3097
N090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3098 - 309F
N098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 30A0 - 30A7
N0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 30A8 - 30AF
N0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 30B0 - 30B7
N0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 30B8
N0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 30B9
N0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 30BA
N0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 30BB
N0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 30BC
N0BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 30C0 - 30C7
N0C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 30C8 - 30CF
N0C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 30D0 - 30D7
N0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 30D8 - 30DF
N0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 30E0 - 30E7
N0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 30E8 - 30EF
N0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 30F0 - 30F7
N0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 30F8
N0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 30F9
N0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 30FA
N0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 30FB
N0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 30FC
N0FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+0]
call writememoryword
add edx,byte 2
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3100 - 3107
N100:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3108 - 310F
N108:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3110 - 3117
N110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3118 - 311F
N118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3120 - 3127
N120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3128 - 312F
N128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3130 - 3137
N130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3138
N138:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3139
N139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 313A
N13A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 313B
N13B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 313C
N13C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+0]
sub edx,byte 2
call writememoryword
mov [__areg+0],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3140 - 3147
N140:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3148 - 314F
N148:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3150 - 3157
N150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3158 - 315F
N158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3160 - 3167
N160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3168 - 316F
N168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3170 - 3177
N170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3178
N178:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3179
N179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 317A
N17A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 317B
N17B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 317C
N17C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3180 - 3187
N180:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3188 - 318F
N188:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3190 - 3197
N190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3198 - 319F
N198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 31A0 - 31A7
N1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 31A8 - 31AF
N1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 31B0 - 31B7
N1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 31B8
N1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 31B9
N1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 31BA
N1BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 31BB
N1BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 31BC
N1BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+0]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 31C0 - 31C7
N1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 31C8 - 31CF
N1C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 31D0 - 31D7
N1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 31D8 - 31DF
N1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 31E0 - 31E7
N1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 31E8 - 31EF
N1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 31F0 - 31F7
N1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 31F8
N1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 31F9
N1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 31FA
N1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 31FB
N1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 31FC
N1FC:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3200 - 3207
N200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3208 - 320F
N208:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3210 - 3217
N210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3218 - 321F
N218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3220 - 3227
N220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3228 - 322F
N228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3230 - 3237
N230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3238
N238:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3239
N239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 323A
N23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 323B
N23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 323C
N23C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3240 - 3247
N240:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+4],ecx
sub edi,byte 4
jmp execend
; Opcodes 3248 - 324F
N248:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+4],ecx
sub edi,byte 4
jmp execend
; Opcodes 3250 - 3257
N250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes 3258 - 325F
N258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes 3260 - 3267
N260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+4],ecx
sub edi,byte 10
jmp execend
; Opcodes 3268 - 326F
N268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes 3270 - 3277
N270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcode 3278
N278:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcode 3279
N279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcode 327A
N27A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcode 327B
N27B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcode 327C
N27C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes 3280 - 3287
N280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3288 - 328F
N288:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3290 - 3297
N290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3298 - 329F
N298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 32A0 - 32A7
N2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 32A8 - 32AF
N2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 32B0 - 32B7
N2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 32B8
N2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 32B9
N2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 32BA
N2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 32BB
N2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 32BC
N2BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 32C0 - 32C7
N2C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 32C8 - 32CF
N2C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 32D0 - 32D7
N2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 32D8 - 32DF
N2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 32E0 - 32E7
N2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 32E8 - 32EF
N2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 32F0 - 32F7
N2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 32F8
N2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 32F9
N2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 32FA
N2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 32FB
N2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 32FC
N2FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+4]
call writememoryword
add edx,byte 2
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3300 - 3307
N300:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3308 - 330F
N308:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3310 - 3317
N310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3318 - 331F
N318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3320 - 3327
N320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3328 - 332F
N328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3330 - 3337
N330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3338
N338:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3339
N339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 333A
N33A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 333B
N33B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 333C
N33C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+4]
sub edx,byte 2
call writememoryword
mov [__areg+4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3340 - 3347
N340:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3348 - 334F
N348:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3350 - 3357
N350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3358 - 335F
N358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3360 - 3367
N360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3368 - 336F
N368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3370 - 3377
N370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3378
N378:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3379
N379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 337A
N37A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 337B
N37B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 337C
N37C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3380 - 3387
N380:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3388 - 338F
N388:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3390 - 3397
N390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3398 - 339F
N398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 33A0 - 33A7
N3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 33A8 - 33AF
N3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 33B0 - 33B7
N3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 33B8
N3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 33B9
N3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 33BA
N3BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 33BB
N3BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 33BC
N3BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+4]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 33C0 - 33C7
N3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 33C8 - 33CF
N3C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 33D0 - 33D7
N3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 33D8 - 33DF
N3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 33E0 - 33E7
N3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 33E8 - 33EF
N3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcodes 33F0 - 33F7
N3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 33F8
N3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 33F9
N3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 28
jmp execend
; Opcode 33FA
N3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 33FB
N3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 33FC
N3FC:
mov cx,[esi]
add esi,byte 2
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3400 - 3407
N400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3408 - 340F
N408:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3410 - 3417
N410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3418 - 341F
N418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3420 - 3427
N420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3428 - 342F
N428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3430 - 3437
N430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3438
N438:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3439
N439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 343A
N43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 343B
N43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 343C
N43C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+8],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3440 - 3447
N440:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+8],ecx
sub edi,byte 4
jmp execend
; Opcodes 3448 - 344F
N448:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+8],ecx
sub edi,byte 4
jmp execend
; Opcodes 3450 - 3457
N450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes 3458 - 345F
N458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes 3460 - 3467
N460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+8],ecx
sub edi,byte 10
jmp execend
; Opcodes 3468 - 346F
N468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes 3470 - 3477
N470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcode 3478
N478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcode 3479
N479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcode 347A
N47A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcode 347B
N47B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcode 347C
N47C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes 3480 - 3487
N480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3488 - 348F
N488:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3490 - 3497
N490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3498 - 349F
N498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 34A0 - 34A7
N4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 34A8 - 34AF
N4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 34B0 - 34B7
N4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 34B8
N4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 34B9
N4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 34BA
N4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 34BB
N4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 34BC
N4BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 34C0 - 34C7
N4C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 34C8 - 34CF
N4C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 34D0 - 34D7
N4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 34D8 - 34DF
N4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 34E0 - 34E7
N4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 34E8 - 34EF
N4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 34F0 - 34F7
N4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 34F8
N4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 34F9
N4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 34FA
N4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 34FB
N4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 34FC
N4FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+8]
call writememoryword
add edx,byte 2
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3500 - 3507
N500:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3508 - 350F
N508:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3510 - 3517
N510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3518 - 351F
N518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3520 - 3527
N520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3528 - 352F
N528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3530 - 3537
N530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3538
N538:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3539
N539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 353A
N53A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 353B
N53B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 353C
N53C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+8]
sub edx,byte 2
call writememoryword
mov [__areg+8],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3540 - 3547
N540:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3548 - 354F
N548:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3550 - 3557
N550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3558 - 355F
N558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3560 - 3567
N560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3568 - 356F
N568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3570 - 3577
N570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3578
N578:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3579
N579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 357A
N57A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 357B
N57B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 357C
N57C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3580 - 3587
N580:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3588 - 358F
N588:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3590 - 3597
N590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3598 - 359F
N598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 35A0 - 35A7
N5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 35A8 - 35AF
N5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 35B0 - 35B7
N5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 35B8
N5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 35B9
N5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 35BA
N5BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 35BB
N5BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 35BC
N5BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+8]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3600 - 3607
N600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3608 - 360F
N608:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3610 - 3617
N610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3618 - 361F
N618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3620 - 3627
N620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3628 - 362F
N628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3630 - 3637
N630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3638
N638:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3639
N639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 363A
N63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 363B
N63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 363C
N63C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+12],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3640 - 3647
N640:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+12],ecx
sub edi,byte 4
jmp execend
; Opcodes 3648 - 364F
N648:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+12],ecx
sub edi,byte 4
jmp execend
; Opcodes 3650 - 3657
N650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes 3658 - 365F
N658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes 3660 - 3667
N660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+12],ecx
sub edi,byte 10
jmp execend
; Opcodes 3668 - 366F
N668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes 3670 - 3677
N670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcode 3678
N678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcode 3679
N679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcode 367A
N67A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcode 367B
N67B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcode 367C
N67C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes 3680 - 3687
N680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3688 - 368F
N688:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3690 - 3697
N690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3698 - 369F
N698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 36A0 - 36A7
N6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 36A8 - 36AF
N6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 36B0 - 36B7
N6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 36B8
N6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 36B9
N6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 36BA
N6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 36BB
N6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 36BC
N6BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 36C0 - 36C7
N6C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 36C8 - 36CF
N6C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 36D0 - 36D7
N6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 36D8 - 36DF
N6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 36E0 - 36E7
N6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 36E8 - 36EF
N6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 36F0 - 36F7
N6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 36F8
N6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 36F9
N6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 36FA
N6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 36FB
N6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 36FC
N6FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+12]
call writememoryword
add edx,byte 2
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3700 - 3707
N700:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3708 - 370F
N708:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3710 - 3717
N710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3718 - 371F
N718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3720 - 3727
N720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3728 - 372F
N728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3730 - 3737
N730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3738
N738:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3739
N739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 373A
N73A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 373B
N73B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 373C
N73C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+12]
sub edx,byte 2
call writememoryword
mov [__areg+12],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3740 - 3747
N740:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3748 - 374F
N748:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3750 - 3757
N750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3758 - 375F
N758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3760 - 3767
N760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3768 - 376F
N768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3770 - 3777
N770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3778
N778:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3779
N779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 377A
N77A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 377B
N77B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 377C
N77C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3780 - 3787
N780:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3788 - 378F
N788:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3790 - 3797
N790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3798 - 379F
N798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 37A0 - 37A7
N7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 37A8 - 37AF
N7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 37B0 - 37B7
N7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 37B8
N7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 37B9
N7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 37BA
N7BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 37BB
N7BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 37BC
N7BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+12]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3800 - 3807
N800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3808 - 380F
N808:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3810 - 3817
N810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3818 - 381F
N818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3820 - 3827
N820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3828 - 382F
N828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3830 - 3837
N830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3838
N838:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3839
N839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 383A
N83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 383B
N83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 383C
N83C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+16],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3840 - 3847
N840:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+16],ecx
sub edi,byte 4
jmp execend
; Opcodes 3848 - 384F
N848:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+16],ecx
sub edi,byte 4
jmp execend
; Opcodes 3850 - 3857
N850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes 3858 - 385F
N858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes 3860 - 3867
N860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+16],ecx
sub edi,byte 10
jmp execend
; Opcodes 3868 - 386F
N868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes 3870 - 3877
N870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcode 3878
N878:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcode 3879
N879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcode 387A
N87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcode 387B
N87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcode 387C
N87C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes 3880 - 3887
N880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3888 - 388F
N888:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3890 - 3897
N890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3898 - 389F
N898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 38A0 - 38A7
N8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 38A8 - 38AF
N8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 38B0 - 38B7
N8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 38B8
N8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 38B9
N8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 38BA
N8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 38BB
N8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 38BC
N8BC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 38C0 - 38C7
N8C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 38C8 - 38CF
N8C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 38D0 - 38D7
N8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 38D8 - 38DF
N8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 38E0 - 38E7
N8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 38E8 - 38EF
N8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 38F0 - 38F7
N8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 38F8
N8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 38F9
N8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 38FA
N8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 38FB
N8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 38FC
N8FC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+16]
call writememoryword
add edx,byte 2
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3900 - 3907
N900:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3908 - 390F
N908:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3910 - 3917
N910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3918 - 391F
N918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3920 - 3927
N920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3928 - 392F
N928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3930 - 3937
N930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3938
N938:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3939
N939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 393A
N93A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 393B
N93B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 393C
N93C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+16]
sub edx,byte 2
call writememoryword
mov [__areg+16],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3940 - 3947
N940:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3948 - 394F
N948:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3950 - 3957
N950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3958 - 395F
N958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3960 - 3967
N960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3968 - 396F
N968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3970 - 3977
N970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3978
N978:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3979
N979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 397A
N97A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 397B
N97B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 397C
N97C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3980 - 3987
N980:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3988 - 398F
N988:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3990 - 3997
N990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3998 - 399F
N998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 39A0 - 39A7
N9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 39A8 - 39AF
N9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 39B0 - 39B7
N9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 39B8
N9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 39B9
N9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 39BA
N9BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 39BB
N9BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 39BC
N9BC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+16]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3A00 - 3A07
NA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3A08 - 3A0F
NA08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3A10 - 3A17
NA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3A18 - 3A1F
NA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3A20 - 3A27
NA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3A28 - 3A2F
NA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3A30 - 3A37
NA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3A38
NA38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3A39
NA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3A3A
NA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3A3B
NA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3A3C
NA3C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+20],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3A40 - 3A47
NA40:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+20],ecx
sub edi,byte 4
jmp execend
; Opcodes 3A48 - 3A4F
NA48:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+20],ecx
sub edi,byte 4
jmp execend
; Opcodes 3A50 - 3A57
NA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes 3A58 - 3A5F
NA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes 3A60 - 3A67
NA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+20],ecx
sub edi,byte 10
jmp execend
; Opcodes 3A68 - 3A6F
NA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes 3A70 - 3A77
NA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcode 3A78
NA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcode 3A79
NA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcode 3A7A
NA7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcode 3A7B
NA7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcode 3A7C
NA7C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes 3A80 - 3A87
NA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3A88 - 3A8F
NA88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3A90 - 3A97
NA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3A98 - 3A9F
NA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3AA0 - 3AA7
NAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3AA8 - 3AAF
NAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3AB0 - 3AB7
NAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3AB8
NAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3AB9
NAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3ABA
NABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3ABB
NABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3ABC
NABC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3AC0 - 3AC7
NAC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3AC8 - 3ACF
NAC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3AD0 - 3AD7
NAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3AD8 - 3ADF
NAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3AE0 - 3AE7
NAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3AE8 - 3AEF
NAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3AF0 - 3AF7
NAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3AF8
NAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3AF9
NAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3AFA
NAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3AFB
NAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3AFC
NAFC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+20]
call writememoryword
add edx,byte 2
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3B00 - 3B07
NB00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3B08 - 3B0F
NB08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3B10 - 3B17
NB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3B18 - 3B1F
NB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3B20 - 3B27
NB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3B28 - 3B2F
NB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3B30 - 3B37
NB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3B38
NB38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3B39
NB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3B3A
NB3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3B3B
NB3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3B3C
NB3C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+20]
sub edx,byte 2
call writememoryword
mov [__areg+20],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3B40 - 3B47
NB40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3B48 - 3B4F
NB48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3B50 - 3B57
NB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3B58 - 3B5F
NB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3B60 - 3B67
NB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3B68 - 3B6F
NB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3B70 - 3B77
NB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3B78
NB78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3B79
NB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3B7A
NB7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3B7B
NB7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3B7C
NB7C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3B80 - 3B87
NB80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3B88 - 3B8F
NB88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3B90 - 3B97
NB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3B98 - 3B9F
NB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3BA0 - 3BA7
NBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3BA8 - 3BAF
NBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 3BB0 - 3BB7
NBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3BB8
NBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3BB9
NBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 3BBA
NBBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3BBB
NBBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3BBC
NBBC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+20]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3C00 - 3C07
NC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3C08 - 3C0F
NC08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3C10 - 3C17
NC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3C18 - 3C1F
NC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3C20 - 3C27
NC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3C28 - 3C2F
NC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3C30 - 3C37
NC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3C38
NC38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3C39
NC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3C3A
NC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3C3B
NC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3C3C
NC3C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+24],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3C40 - 3C47
NC40:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+24],ecx
sub edi,byte 4
jmp execend
; Opcodes 3C48 - 3C4F
NC48:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+24],ecx
sub edi,byte 4
jmp execend
; Opcodes 3C50 - 3C57
NC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes 3C58 - 3C5F
NC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes 3C60 - 3C67
NC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+24],ecx
sub edi,byte 10
jmp execend
; Opcodes 3C68 - 3C6F
NC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes 3C70 - 3C77
NC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcode 3C78
NC78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcode 3C79
NC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcode 3C7A
NC7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcode 3C7B
NC7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcode 3C7C
NC7C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes 3C80 - 3C87
NC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3C88 - 3C8F
NC88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3C90 - 3C97
NC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3C98 - 3C9F
NC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3CA0 - 3CA7
NCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3CA8 - 3CAF
NCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3CB0 - 3CB7
NCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3CB8
NCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3CB9
NCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3CBA
NCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3CBB
NCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3CBC
NCBC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3CC0 - 3CC7
NCC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3CC8 - 3CCF
NCC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3CD0 - 3CD7
NCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3CD8 - 3CDF
NCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3CE0 - 3CE7
NCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3CE8 - 3CEF
NCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3CF0 - 3CF7
NCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3CF8
NCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3CF9
NCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3CFA
NCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3CFB
NCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3CFC
NCFC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+24]
call writememoryword
add edx,byte 2
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3D00 - 3D07
ND00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3D08 - 3D0F
ND08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3D10 - 3D17
ND10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3D18 - 3D1F
ND18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3D20 - 3D27
ND20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3D28 - 3D2F
ND28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3D30 - 3D37
ND30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3D38
ND38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3D39
ND39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3D3A
ND3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3D3B
ND3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3D3C
ND3C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+24]
sub edx,byte 2
call writememoryword
mov [__areg+24],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3D40 - 3D47
ND40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3D48 - 3D4F
ND48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3D50 - 3D57
ND50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3D58 - 3D5F
ND58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3D60 - 3D67
ND60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3D68 - 3D6F
ND68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3D70 - 3D77
ND70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3D78
ND78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3D79
ND79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3D7A
ND7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3D7B
ND7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3D7C
ND7C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3D80 - 3D87
ND80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3D88 - 3D8F
ND88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3D90 - 3D97
ND90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3D98 - 3D9F
ND98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3DA0 - 3DA7
NDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3DA8 - 3DAF
NDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 3DB0 - 3DB7
NDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3DB8
NDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3DB9
NDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 3DBA
NDBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3DBB
NDBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3DBC
NDBC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+24]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3E00 - 3E07
NE00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3E08 - 3E0F
NE08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 3E10 - 3E17
NE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3E18 - 3E1F
NE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3E20 - 3E27
NE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 3E28 - 3E2F
NE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3E30 - 3E37
NE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3E38
NE38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3E39
NE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3E3A
NE3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 3E3B
NE3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 3E3C
NE3C:
mov cx,[esi]
add esi,byte 2
mov [__dreg+28],cx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3E40 - 3E47
NE40:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__areg+28],ecx
sub edi,byte 4
jmp execend
; Opcodes 3E48 - 3E4F
NE48:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
mov [__areg+28],ecx
sub edi,byte 4
jmp execend
; Opcodes 3E50 - 3E57
NE50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes 3E58 - 3E5F
NE58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
mov [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes 3E60 - 3E67
NE60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
mov [__areg+28],ecx
sub edi,byte 10
jmp execend
; Opcodes 3E68 - 3E6F
NE68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes 3E70 - 3E77
NE70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
mov [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcode 3E78
NE78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcode 3E79
NE79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
mov [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcode 3E7A
NE7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcode 3E7B
NE7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcode 3E7C
NE7C:
movsx ecx,word[esi]
add esi,byte 2
mov [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes 3E80 - 3E87
NE80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3E88 - 3E8F
NE88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3E90 - 3E97
NE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3E98 - 3E9F
NE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3EA0 - 3EA7
NEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3EA8 - 3EAF
NEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3EB0 - 3EB7
NEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3EB8
NEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3EB9
NEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3EBA
NEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3EBB
NEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3EBC
NEBC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3EC0 - 3EC7
NEC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3EC8 - 3ECF
NEC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3ED0 - 3ED7
NED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3ED8 - 3EDF
NED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3EE0 - 3EE7
NEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3EE8 - 3EEF
NEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3EF0 - 3EF7
NEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3EF8
NEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3EF9
NEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3EFA
NEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3EFB
NEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3EFC
NEFC:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+28]
call writememoryword
add edx,byte 2
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3F00 - 3F07
NF00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3F08 - 3F0F
NF08:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 3F10 - 3F17
NF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3F18 - 3F1F
NF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3F20 - 3F27
NF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3F28 - 3F2F
NF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3F30 - 3F37
NF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3F38
NF38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3F39
NF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3F3A
NF3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 3F3B
NF3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 3F3C
NF3C:
mov cx,[esi]
add esi,byte 2
mov edx,[__areg+28]
sub edx,byte 2
call writememoryword
mov [__areg+28],edx
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3F40 - 3F47
NF40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3F48 - 3F4F
NF48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 3F50 - 3F57
NF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3F58 - 3F5F
NF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3F60 - 3F67
NF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3F68 - 3F6F
NF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3F70 - 3F77
NF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3F78
NF78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3F79
NF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3F7A
NF7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 3F7B
NF7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3F7C
NF7C:
mov cx,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 3F80 - 3F87
NF80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3F88 - 3F8F
NF88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 3F90 - 3F97
NF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3F98 - 3F9F
NF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 3FA0 - 3FA7
NFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 3FA8 - 3FAF
NFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcodes 3FB0 - 3FB7
NFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3FB8
NFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3FB9
NFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 26
jmp execend
; Opcode 3FBA
NFBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 3FBB
NFBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 24
jmp execend
; Opcode 3FBC
NFBC:
mov cx,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+28]
call writememoryword
test cx,cx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 4000 - 4007
O000:
and ebx,byte 7
mov cl,[__xflag]
shr cl,1
mov cl,0
sbb cl,[__dreg+ebx*4]
mov edx,eax
lahf
seto al
setc [__xflag]
jnz short ln637
or dh,0BFh
and ah,dh
ln637:
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 4010 - 4017
O010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
push ebx
mov bl,[__xflag]
shr bl,1
mov bl,0
sbb bl,cl
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln638
or bh,0BFh
and ah,bh
ln638:
pop ebx
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 4018 - 401F
O018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
push ebx
mov bl,[__xflag]
shr bl,1
mov bl,0
sbb bl,cl
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln639
or bh,0BFh
and ah,bh
ln639:
pop ebx
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4020 - 4027
O020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
push ebx
mov bl,[__xflag]
shr bl,1
mov bl,0
sbb bl,cl
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln640
or bh,0BFh
and ah,bh
ln640:
pop ebx
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 4028 - 402F
O028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
push ebx
mov bl,[__xflag]
shr bl,1
mov bl,0
sbb bl,cl
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln641
or bh,0BFh
and ah,bh
ln641:
pop ebx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 4030 - 4037
O030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
push ebx
mov bl,[__xflag]
shr bl,1
mov bl,0
sbb bl,cl
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln642
or bh,0BFh
and ah,bh
ln642:
pop ebx
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 4038
O038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
push ebx
mov bl,[__xflag]
shr bl,1
mov bl,0
sbb bl,cl
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln643
or bh,0BFh
and ah,bh
ln643:
pop ebx
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 4039
O039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
push ebx
mov bl,[__xflag]
shr bl,1
mov bl,0
sbb bl,cl
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln644
or bh,0BFh
and ah,bh
ln644:
pop ebx
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 4040 - 4047
O040:
and ebx,byte 7
mov cl,[__xflag]
shr cl,1
mov ecx,0
sbb cx,[__dreg+ebx*4]
mov edx,eax
lahf
seto al
setc [__xflag]
jnz short ln645
or dh,0BFh
and ah,dh
ln645:
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes 4050 - 4057
O050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb bx,cx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln646
or bh,0BFh
and ah,bh
ln646:
pop ebx
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 4058 - 405F
O058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb bx,cx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln647
or bh,0BFh
and ah,bh
ln647:
pop ebx
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4060 - 4067
O060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb bx,cx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln648
or bh,0BFh
and ah,bh
ln648:
pop ebx
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 4068 - 406F
O068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb bx,cx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln649
or bh,0BFh
and ah,bh
ln649:
pop ebx
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 4070 - 4077
O070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb bx,cx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln650
or bh,0BFh
and ah,bh
ln650:
pop ebx
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 4078
O078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb bx,cx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln651
or bh,0BFh
and ah,bh
ln651:
pop ebx
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 4079
O079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb bx,cx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln652
or bh,0BFh
and ah,bh
ln652:
pop ebx
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 4080 - 4087
O080:
and ebx,byte 7
mov cl,[__xflag]
shr cl,1
mov ecx,0
sbb ecx,[__dreg+ebx*4]
mov edx,eax
lahf
seto al
setc [__xflag]
jnz short ln653
or dh,0BFh
and ah,dh
ln653:
mov [__dreg+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes 4090 - 4097
O090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb ebx,ecx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln654
or bh,0BFh
and ah,bh
ln654:
pop ebx
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 4098 - 409F
O098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb ebx,ecx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln655
or bh,0BFh
and ah,bh
ln655:
pop ebx
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 40A0 - 40A7
O0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb ebx,ecx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln656
or bh,0BFh
and ah,bh
ln656:
pop ebx
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 40A8 - 40AF
O0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb ebx,ecx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln657
or bh,0BFh
and ah,bh
ln657:
pop ebx
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 40B0 - 40B7
O0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb ebx,ecx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln658
or bh,0BFh
and ah,bh
ln658:
pop ebx
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 40B8
O0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb ebx,ecx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln659
or bh,0BFh
and ah,bh
ln659:
pop ebx
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 40B9
O0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
push ebx
mov bl,[__xflag]
shr bl,1
mov ebx,0
sbb ebx,ecx
mov ecx,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln660
or bh,0BFh
and ah,bh
ln660:
pop ebx
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 40C0 - 40C7
O0C0:
and ebx,byte 7
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
mov [__dreg+ebx*4],cx
sub edi,byte 6
jmp execend
; Opcodes 40D0 - 40D7
O0D0:
and ebx,byte 7
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
mov edx,[__areg+ebx*4]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 40D8 - 40DF
O0D8:
and ebx,byte 7
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
mov edx,[__areg+ebx*4]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 40E0 - 40E7
O0E0:
and ebx,byte 7
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
mov edx,[__areg+ebx*4]
sub edx,byte 2
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 40E8 - 40EF
O0E8:
and ebx,byte 7
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 40F0 - 40F7
O0F0:
and ebx,byte 7
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
call decode_ext
add edx,[__areg+ebx*4]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 40F8
O0F8:
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
movsx edx,word[esi]
add esi,byte 2
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 40F9
O0F9:
mov ch,[__xflag]
mov cl,ah
shr cx,6
add cl,cl
or cl,al
mov ch,ah
shl ch,8
adc cl,cl
mov ch,[__sr+1]
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 4100 - 4107
O100:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln661
cmp [__dreg+0],cx
mov ax,0
jg short ln661
sub edi,byte 10
jmp execend
ln661:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4110 - 4117
O110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln662
cmp [__dreg+0],cx
mov ax,0
jg short ln662
sub edi,byte 14
jmp execend
ln662:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4118 - 411F
O118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln663
cmp [__dreg+0],cx
mov ax,0
jg short ln663
sub edi,byte 14
jmp execend
ln663:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4120 - 4127
O120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln664
cmp [__dreg+0],cx
mov ax,0
jg short ln664
sub edi,byte 16
jmp execend
ln664:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4128 - 412F
O128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln665
cmp [__dreg+0],cx
mov ax,0
jg short ln665
sub edi,byte 18
jmp execend
ln665:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4130 - 4137
O130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln666
cmp [__dreg+0],cx
mov ax,0
jg short ln666
sub edi,byte 20
jmp execend
ln666:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4138
O138:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln667
cmp [__dreg+0],cx
mov ax,0
jg short ln667
sub edi,byte 18
jmp execend
ln667:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4139
O139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln668
cmp [__dreg+0],cx
mov ax,0
jg short ln668
sub edi,byte 22
jmp execend
ln668:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 413A
O13A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln669
cmp [__dreg+0],cx
mov ax,0
jg short ln669
sub edi,byte 18
jmp execend
ln669:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 413B
O13B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln670
cmp [__dreg+0],cx
mov ax,0
jg short ln670
sub edi,byte 20
jmp execend
ln670:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 413C
O13C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+0],byte 0
mov ax,8000h
jl short ln671
cmp [__dreg+0],cx
mov ax,0
jg short ln671
sub edi,byte 14
jmp execend
ln671:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 41D0 - 41D7
O1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+0],edx
sub edi,byte 4
jmp execend
; Opcodes 41E8 - 41EF
O1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+0],edx
sub edi,byte 8
jmp execend
; Opcodes 41F0 - 41F7
O1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+0],edx
sub edi,byte 12
jmp execend
; Opcode 41F8
O1F8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+0],edx
sub edi,byte 8
jmp execend
; Opcode 41F9
O1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+0],edx
sub edi,byte 12
jmp execend
; Opcode 41FA
O1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+0],edx
sub edi,byte 8
jmp execend
; Opcode 41FB
O1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+0],edx
sub edi,byte 12
jmp execend
; Opcodes 4200 - 4207
O200:
and ebx,byte 7
xor ecx,ecx
mov [__dreg+ebx*4],cl
mov ax,4000h
sub edi,byte 4
jmp execend
; Opcodes 4210 - 4217
O210:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
call writememorybyte
mov ax,4000h
sub edi,byte 10
jmp execend
; Opcodes 4218 - 421F
O218:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov ax,4000h
sub edi,byte 10
jmp execend
; Opcodes 4220 - 4227
O220:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
mov ax,4000h
sub edi,byte 12
jmp execend
; Opcodes 4228 - 422F
O228:
and ebx,byte 7
xor ecx,ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
mov ax,4000h
sub edi,byte 14
jmp execend
; Opcodes 4230 - 4237
O230:
and ebx,byte 7
xor ecx,ecx
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
mov ax,4000h
sub edi,byte 16
jmp execend
; Opcode 4238
O238:
xor ecx,ecx
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
mov ax,4000h
sub edi,byte 14
jmp execend
; Opcode 4239
O239:
xor ecx,ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
mov ax,4000h
sub edi,byte 18
jmp execend
; Opcodes 4240 - 4247
O240:
and ebx,byte 7
xor ecx,ecx
mov [__dreg+ebx*4],cx
mov ax,4000h
sub edi,byte 4
jmp execend
; Opcodes 4250 - 4257
O250:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
call writememoryword
mov ax,4000h
sub edi,byte 10
jmp execend
; Opcodes 4258 - 425F
O258:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov ax,4000h
sub edi,byte 10
jmp execend
; Opcodes 4260 - 4267
O260:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
sub edx,byte 2
call writememoryword
mov [__areg+ebx*4],edx
mov ax,4000h
sub edi,byte 12
jmp execend
; Opcodes 4268 - 426F
O268:
and ebx,byte 7
xor ecx,ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememoryword
mov ax,4000h
sub edi,byte 14
jmp execend
; Opcodes 4270 - 4277
O270:
and ebx,byte 7
xor ecx,ecx
call decode_ext
add edx,[__areg+ebx*4]
call writememoryword
mov ax,4000h
sub edi,byte 16
jmp execend
; Opcode 4278
O278:
xor ecx,ecx
movsx edx,word[esi]
add esi,byte 2
call writememoryword
mov ax,4000h
sub edi,byte 14
jmp execend
; Opcode 4279
O279:
xor ecx,ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememoryword
mov ax,4000h
sub edi,byte 18
jmp execend
; Opcodes 4280 - 4287
O280:
and ebx,byte 7
xor ecx,ecx
mov [__dreg+ebx*4],ecx
mov ax,4000h
sub edi,byte 8
jmp execend
; Opcodes 4290 - 4297
O290:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
call writememorydword
mov ax,4000h
sub edi,byte 20
jmp execend
; Opcodes 4298 - 429F
O298:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov ax,4000h
sub edi,byte 20
jmp execend
; Opcodes 42A0 - 42A7
O2A0:
and ebx,byte 7
xor ecx,ecx
mov edx,[__areg+ebx*4]
sub edx,byte 4
call writememorydword
mov [__areg+ebx*4],edx
mov ax,4000h
sub edi,byte 22
jmp execend
; Opcodes 42A8 - 42AF
O2A8:
and ebx,byte 7
xor ecx,ecx
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorydword
mov ax,4000h
sub edi,byte 24
jmp execend
; Opcodes 42B0 - 42B7
O2B0:
and ebx,byte 7
xor ecx,ecx
call decode_ext
add edx,[__areg+ebx*4]
call writememorydword
mov ax,4000h
sub edi,byte 26
jmp execend
; Opcode 42B8
O2B8:
xor ecx,ecx
movsx edx,word[esi]
add esi,byte 2
call writememorydword
mov ax,4000h
sub edi,byte 24
jmp execend
; Opcode 42B9
O2B9:
xor ecx,ecx
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorydword
mov ax,4000h
sub edi,byte 28
jmp execend
; Opcodes 4300 - 4307
O300:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln672
cmp [__dreg+4],cx
mov ax,0
jg short ln672
sub edi,byte 10
jmp execend
ln672:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4310 - 4317
O310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln673
cmp [__dreg+4],cx
mov ax,0
jg short ln673
sub edi,byte 14
jmp execend
ln673:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4318 - 431F
O318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln674
cmp [__dreg+4],cx
mov ax,0
jg short ln674
sub edi,byte 14
jmp execend
ln674:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4320 - 4327
O320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln675
cmp [__dreg+4],cx
mov ax,0
jg short ln675
sub edi,byte 16
jmp execend
ln675:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4328 - 432F
O328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln676
cmp [__dreg+4],cx
mov ax,0
jg short ln676
sub edi,byte 18
jmp execend
ln676:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4330 - 4337
O330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln677
cmp [__dreg+4],cx
mov ax,0
jg short ln677
sub edi,byte 20
jmp execend
ln677:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4338
O338:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln678
cmp [__dreg+4],cx
mov ax,0
jg short ln678
sub edi,byte 18
jmp execend
ln678:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4339
O339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln679
cmp [__dreg+4],cx
mov ax,0
jg short ln679
sub edi,byte 22
jmp execend
ln679:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 433A
O33A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln680
cmp [__dreg+4],cx
mov ax,0
jg short ln680
sub edi,byte 18
jmp execend
ln680:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 433B
O33B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln681
cmp [__dreg+4],cx
mov ax,0
jg short ln681
sub edi,byte 20
jmp execend
ln681:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 433C
O33C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+4],byte 0
mov ax,8000h
jl short ln682
cmp [__dreg+4],cx
mov ax,0
jg short ln682
sub edi,byte 14
jmp execend
ln682:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 43D0 - 43D7
O3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+4],edx
sub edi,byte 4
jmp execend
; Opcodes 43E8 - 43EF
O3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+4],edx
sub edi,byte 8
jmp execend
; Opcodes 43F0 - 43F7
O3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+4],edx
sub edi,byte 12
jmp execend
; Opcode 43F8
O3F8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+4],edx
sub edi,byte 8
jmp execend
; Opcode 43F9
O3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+4],edx
sub edi,byte 12
jmp execend
; Opcode 43FA
O3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+4],edx
sub edi,byte 8
jmp execend
; Opcode 43FB
O3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+4],edx
sub edi,byte 12
jmp execend
; Opcodes 4400 - 4407
O400:
and ebx,byte 7
neg byte[__dreg+ebx*4]
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 4410 - 4417
O410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
neg cl
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 4418 - 441F
O418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
neg cl
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4420 - 4427
O420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
neg cl
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 4428 - 442F
O428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
neg cl
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 4430 - 4437
O430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
neg cl
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 4438
O438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
neg cl
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 4439
O439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
neg cl
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 4440 - 4447
O440:
and ebx,byte 7
neg word[__dreg+ebx*4]
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 4450 - 4457
O450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
neg cx
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 4458 - 445F
O458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
neg cx
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4460 - 4467
O460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
neg cx
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 4468 - 446F
O468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
neg cx
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 4470 - 4477
O470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
neg cx
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 4478
O478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
neg cx
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 4479
O479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
neg cx
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 4480 - 4487
O480:
and ebx,byte 7
neg dword[__dreg+ebx*4]
lahf
seto al
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes 4490 - 4497
O490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
neg ecx
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 4498 - 449F
O498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
neg ecx
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 44A0 - 44A7
O4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
neg ecx
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 44A8 - 44AF
O4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
neg ecx
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 44B0 - 44B7
O4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
neg ecx
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 44B8
O4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
neg ecx
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 44B9
O4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
neg ecx
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 44C0 - 44C7
O4C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 12
jmp execend
; Opcodes 44D0 - 44D7
O4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 16
jmp execend
; Opcodes 44D8 - 44DF
O4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 16
jmp execend
; Opcodes 44E0 - 44E7
O4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 18
jmp execend
; Opcodes 44E8 - 44EF
O4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp execend
; Opcodes 44F0 - 44F7
O4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 22
jmp execend
; Opcode 44F8
O4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp execend
; Opcode 44F9
O4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 24
jmp execend
; Opcode 44FA
O4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp execend
; Opcode 44FB
O4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 22
jmp execend
; Opcode 44FC
O4FC:
mov cx,[esi]
add esi,byte 2
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 16
jmp execend
; Opcodes 4500 - 4507
O500:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln683
cmp [__dreg+8],cx
mov ax,0
jg short ln683
sub edi,byte 10
jmp execend
ln683:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4510 - 4517
O510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln684
cmp [__dreg+8],cx
mov ax,0
jg short ln684
sub edi,byte 14
jmp execend
ln684:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4518 - 451F
O518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln685
cmp [__dreg+8],cx
mov ax,0
jg short ln685
sub edi,byte 14
jmp execend
ln685:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4520 - 4527
O520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln686
cmp [__dreg+8],cx
mov ax,0
jg short ln686
sub edi,byte 16
jmp execend
ln686:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4528 - 452F
O528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln687
cmp [__dreg+8],cx
mov ax,0
jg short ln687
sub edi,byte 18
jmp execend
ln687:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4530 - 4537
O530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln688
cmp [__dreg+8],cx
mov ax,0
jg short ln688
sub edi,byte 20
jmp execend
ln688:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4538
O538:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln689
cmp [__dreg+8],cx
mov ax,0
jg short ln689
sub edi,byte 18
jmp execend
ln689:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4539
O539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln690
cmp [__dreg+8],cx
mov ax,0
jg short ln690
sub edi,byte 22
jmp execend
ln690:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 453A
O53A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln691
cmp [__dreg+8],cx
mov ax,0
jg short ln691
sub edi,byte 18
jmp execend
ln691:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 453B
O53B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln692
cmp [__dreg+8],cx
mov ax,0
jg short ln692
sub edi,byte 20
jmp execend
ln692:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 453C
O53C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+8],byte 0
mov ax,8000h
jl short ln693
cmp [__dreg+8],cx
mov ax,0
jg short ln693
sub edi,byte 14
jmp execend
ln693:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 45D0 - 45D7
O5D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+8],edx
sub edi,byte 4
jmp execend
; Opcodes 45E8 - 45EF
O5E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+8],edx
sub edi,byte 8
jmp execend
; Opcodes 45F0 - 45F7
O5F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+8],edx
sub edi,byte 12
jmp execend
; Opcode 45F8
O5F8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+8],edx
sub edi,byte 8
jmp execend
; Opcode 45F9
O5F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+8],edx
sub edi,byte 12
jmp execend
; Opcode 45FA
O5FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+8],edx
sub edi,byte 8
jmp execend
; Opcode 45FB
O5FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+8],edx
sub edi,byte 12
jmp execend
; Opcodes 4600 - 4607
O600:
and ebx,byte 7
xor byte[__dreg+ebx*4],byte -1
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 4610 - 4617
O610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,byte -1
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 4618 - 461F
O618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,byte -1
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4620 - 4627
O620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,byte -1
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 4628 - 462F
O628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,byte -1
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 4630 - 4637
O630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,byte -1
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 4638
O638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,byte -1
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 4639
O639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,byte -1
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 4640 - 4647
O640:
and ebx,byte 7
xor word[__dreg+ebx*4],byte -1
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 4650 - 4657
O650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,byte -1
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 4658 - 465F
O658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,byte -1
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4660 - 4667
O660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,byte -1
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 4668 - 466F
O668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,byte -1
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 4670 - 4677
O670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,byte -1
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 4678
O678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,byte -1
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 4679
O679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,byte -1
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 4680 - 4687
O680:
and ebx,byte 7
xor dword[__dreg+ebx*4],byte -1
lahf
mov al,0
sub edi,byte 6
jmp execend
; Opcodes 4690 - 4697
O690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,byte -1
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 4698 - 469F
O698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,byte -1
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 46A0 - 46A7
O6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,byte -1
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 46A8 - 46AF
O6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,byte -1
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 46B0 - 46B7
O6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,byte -1
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 46B8
O6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,byte -1
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 46B9
O6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,byte -1
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 46C0 - 46C7
O6C0:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln694
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln695
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln694
ln695:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln694:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 12
jmp exec_checkpoint
; Opcodes 46D0 - 46D7
O6D0:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln696
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln697
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln696
ln697:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln696:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 16
jmp exec_checkpoint
; Opcodes 46D8 - 46DF
O6D8:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln698
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln699
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln698
ln699:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln698:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 16
jmp exec_checkpoint
; Opcodes 46E0 - 46E7
O6E0:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln700
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln701
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln700
ln701:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln700:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 18
jmp exec_checkpoint
; Opcodes 46E8 - 46EF
O6E8:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln702
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln703
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln702
ln703:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln702:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp exec_checkpoint
; Opcodes 46F0 - 46F7
O6F0:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln704
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln705
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln704
ln705:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln704:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 22
jmp exec_checkpoint
; Opcode 46F8
O6F8:
test byte[__sr+1],20h
jz near privilege_violation
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln706
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln707
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln706
ln707:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln706:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp exec_checkpoint
; Opcode 46F9
O6F9:
test byte[__sr+1],20h
jz near privilege_violation
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln708
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln709
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln708
ln709:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln708:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 24
jmp exec_checkpoint
; Opcode 46FA
O6FA:
test byte[__sr+1],20h
jz near privilege_violation
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln710
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln711
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln710
ln711:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln710:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 20
jmp exec_checkpoint
; Opcode 46FB
O6FB:
test byte[__sr+1],20h
jz near privilege_violation
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln712
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln713
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln712
ln713:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln712:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 22
jmp exec_checkpoint
; Opcode 46FC
O6FC:
test byte[__sr+1],20h
jz near privilege_violation
mov cx,[esi]
add esi,byte 2
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln714
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln715
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln714
ln715:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln714:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
sub edi,byte 16
jmp exec_checkpoint
; Opcodes 4700 - 4707
O700:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln716
cmp [__dreg+12],cx
mov ax,0
jg short ln716
sub edi,byte 10
jmp execend
ln716:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4710 - 4717
O710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln717
cmp [__dreg+12],cx
mov ax,0
jg short ln717
sub edi,byte 14
jmp execend
ln717:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4718 - 471F
O718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln718
cmp [__dreg+12],cx
mov ax,0
jg short ln718
sub edi,byte 14
jmp execend
ln718:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4720 - 4727
O720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln719
cmp [__dreg+12],cx
mov ax,0
jg short ln719
sub edi,byte 16
jmp execend
ln719:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4728 - 472F
O728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln720
cmp [__dreg+12],cx
mov ax,0
jg short ln720
sub edi,byte 18
jmp execend
ln720:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4730 - 4737
O730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln721
cmp [__dreg+12],cx
mov ax,0
jg short ln721
sub edi,byte 20
jmp execend
ln721:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4738
O738:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln722
cmp [__dreg+12],cx
mov ax,0
jg short ln722
sub edi,byte 18
jmp execend
ln722:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4739
O739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln723
cmp [__dreg+12],cx
mov ax,0
jg short ln723
sub edi,byte 22
jmp execend
ln723:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 473A
O73A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln724
cmp [__dreg+12],cx
mov ax,0
jg short ln724
sub edi,byte 18
jmp execend
ln724:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 473B
O73B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln725
cmp [__dreg+12],cx
mov ax,0
jg short ln725
sub edi,byte 20
jmp execend
ln725:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 473C
O73C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+12],byte 0
mov ax,8000h
jl short ln726
cmp [__dreg+12],cx
mov ax,0
jg short ln726
sub edi,byte 14
jmp execend
ln726:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 47D0 - 47D7
O7D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+12],edx
sub edi,byte 4
jmp execend
; Opcodes 47E8 - 47EF
O7E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+12],edx
sub edi,byte 8
jmp execend
; Opcodes 47F0 - 47F7
O7F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+12],edx
sub edi,byte 12
jmp execend
; Opcode 47F8
O7F8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+12],edx
sub edi,byte 8
jmp execend
; Opcode 47F9
O7F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+12],edx
sub edi,byte 12
jmp execend
; Opcode 47FA
O7FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+12],edx
sub edi,byte 8
jmp execend
; Opcode 47FB
O7FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+12],edx
sub edi,byte 12
jmp execend
; Opcodes 4800 - 4807
O800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln727
or ch,0BFh
and ah,ch
ln727:
mov [__dreg+ebx*4],cl
sub edi,byte 6
jmp execend
; Opcodes 4810 - 4817
O810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln728
or ch,0BFh
and ah,ch
ln728:
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 4818 - 481F
O818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln729
or ch,0BFh
and ah,ch
ln729:
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4820 - 4827
O820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln730
or ch,0BFh
and ah,ch
ln730:
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 4828 - 482F
O828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln731
or ch,0BFh
and ah,ch
ln731:
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 4830 - 4837
O830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln732
or ch,0BFh
and ah,ch
ln732:
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 4838
O838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln733
or ch,0BFh
and ah,ch
ln733:
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 4839
O839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
mov cl,[__xflag]
shr cl,1
mov ch,ah
mov al,0
sbb al,cl
das
mov cl,al
lahf
mov al,0
setc [__xflag]
jnz short ln734
or ch,0BFh
and ah,ch
ln734:
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 4840 - 4847
O840:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
rol ecx,16
mov [__dreg+ebx*4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 4850 - 4857
O850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov ecx,edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 12
jmp execend
; Opcodes 4868 - 486F
O868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ecx,edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 16
jmp execend
; Opcodes 4870 - 4877
O870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov ecx,edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 20
jmp execend
; Opcode 4878
O878:
movsx edx,word[esi]
add esi,byte 2
mov ecx,edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 16
jmp execend
; Opcode 4879
O879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov ecx,edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 20
jmp execend
; Opcode 487A
O87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov ecx,edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 16
jmp execend
; Opcode 487B
O87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov ecx,edx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 20
jmp execend
; Opcodes 4880 - 4887
O880:
and ebx,byte 7
movsx cx,byte[__dreg+ebx*4]
mov [__dreg+ebx*4],cx
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 4890 - 4897
O890:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
xor ebx,ebx
ln735:
shr eax,1
jnc short ln736
mov ecx,[__reg+ebx]
call writememoryword
add edx,byte 2
sub edi,byte 4
ln736:
add ebx,byte 4
cmp ebx,byte 64
jne short ln735
pop eax
sub edi,byte 8
jmp execend
; Opcodes 48A0 - 48A7
O8A0:
and ebx,byte 7
push eax
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
push ebx
mov ebx,60
ln737:
shr eax,1
jnc short ln738
mov ecx,[__reg+ebx]
sub edx,byte 2
sub edi,byte 4
call writememoryword
ln738:
sub ebx,byte 4
jns short ln737
pop ebx
pop eax
mov [__areg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes 48A8 - 48AF
O8A8:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
xor ebx,ebx
ln739:
shr eax,1
jnc short ln740
mov ecx,[__reg+ebx]
call writememoryword
add edx,byte 2
sub edi,byte 4
ln740:
add ebx,byte 4
cmp ebx,byte 64
jne short ln739
pop eax
sub edi,byte 12
jmp execend
; Opcodes 48B0 - 48B7
O8B0:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+ebx*4]
xor ebx,ebx
ln741:
shr eax,1
jnc short ln742
mov ecx,[__reg+ebx]
call writememoryword
add edx,byte 2
sub edi,byte 4
ln742:
add ebx,byte 4
cmp ebx,byte 64
jne short ln741
pop eax
sub edi,byte 14
jmp execend
; Opcode 48B8
O8B8:
push eax
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
xor ebx,ebx
ln743:
shr eax,1
jnc short ln744
mov ecx,[__reg+ebx]
call writememoryword
add edx,byte 2
sub edi,byte 4
ln744:
add ebx,byte 4
cmp ebx,byte 64
jne short ln743
pop eax
sub edi,byte 12
jmp execend
; Opcode 48B9
O8B9:
push eax
mov ax,[esi]
add esi,byte 2
mov edx,dword[esi]
add esi,byte 4
rol edx,16
xor ebx,ebx
ln745:
shr eax,1
jnc short ln746
mov ecx,[__reg+ebx]
call writememoryword
add edx,byte 2
sub edi,byte 4
ln746:
add ebx,byte 4
cmp ebx,byte 64
jne short ln745
pop eax
sub edi,byte 16
jmp execend
; Opcodes 48C0 - 48C7
O8C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
mov [__dreg+ebx*4],ecx
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 48D0 - 48D7
O8D0:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
xor ebx,ebx
ln747:
shr eax,1
jnc short ln748
mov ecx,[__reg+ebx]
call writememorydword
add edx,byte 4
sub edi,byte 8
ln748:
add ebx,byte 4
cmp ebx,byte 64
jne short ln747
pop eax
sub edi,byte 8
jmp execend
; Opcodes 48E0 - 48E7
O8E0:
and ebx,byte 7
push eax
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
push ebx
mov ebx,60
ln749:
shr eax,1
jnc short ln750
mov ecx,[__reg+ebx]
sub edx,byte 4
sub edi,byte 8
call writememorydword
ln750:
sub ebx,byte 4
jns short ln749
pop ebx
pop eax
mov [__areg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes 48E8 - 48EF
O8E8:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
xor ebx,ebx
ln751:
shr eax,1
jnc short ln752
mov ecx,[__reg+ebx]
call writememorydword
add edx,byte 4
sub edi,byte 8
ln752:
add ebx,byte 4
cmp ebx,byte 64
jne short ln751
pop eax
sub edi,byte 12
jmp execend
; Opcodes 48F0 - 48F7
O8F0:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+ebx*4]
xor ebx,ebx
ln753:
shr eax,1
jnc short ln754
mov ecx,[__reg+ebx]
call writememorydword
add edx,byte 4
sub edi,byte 8
ln754:
add ebx,byte 4
cmp ebx,byte 64
jne short ln753
pop eax
sub edi,byte 14
jmp execend
; Opcode 48F8
O8F8:
push eax
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
xor ebx,ebx
ln755:
shr eax,1
jnc short ln756
mov ecx,[__reg+ebx]
call writememorydword
add edx,byte 4
sub edi,byte 8
ln756:
add ebx,byte 4
cmp ebx,byte 64
jne short ln755
pop eax
sub edi,byte 12
jmp execend
; Opcode 48F9
O8F9:
push eax
mov ax,[esi]
add esi,byte 2
mov edx,dword[esi]
add esi,byte 4
rol edx,16
xor ebx,ebx
ln757:
shr eax,1
jnc short ln758
mov ecx,[__reg+ebx]
call writememorydword
add edx,byte 4
sub edi,byte 8
ln758:
add ebx,byte 4
cmp ebx,byte 64
jne short ln757
pop eax
sub edi,byte 16
jmp execend
; Opcodes 4900 - 4907
O900:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln759
cmp [__dreg+16],cx
mov ax,0
jg short ln759
sub edi,byte 10
jmp execend
ln759:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4910 - 4917
O910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln760
cmp [__dreg+16],cx
mov ax,0
jg short ln760
sub edi,byte 14
jmp execend
ln760:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4918 - 491F
O918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln761
cmp [__dreg+16],cx
mov ax,0
jg short ln761
sub edi,byte 14
jmp execend
ln761:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4920 - 4927
O920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln762
cmp [__dreg+16],cx
mov ax,0
jg short ln762
sub edi,byte 16
jmp execend
ln762:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4928 - 492F
O928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln763
cmp [__dreg+16],cx
mov ax,0
jg short ln763
sub edi,byte 18
jmp execend
ln763:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4930 - 4937
O930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln764
cmp [__dreg+16],cx
mov ax,0
jg short ln764
sub edi,byte 20
jmp execend
ln764:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4938
O938:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln765
cmp [__dreg+16],cx
mov ax,0
jg short ln765
sub edi,byte 18
jmp execend
ln765:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4939
O939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln766
cmp [__dreg+16],cx
mov ax,0
jg short ln766
sub edi,byte 22
jmp execend
ln766:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 493A
O93A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln767
cmp [__dreg+16],cx
mov ax,0
jg short ln767
sub edi,byte 18
jmp execend
ln767:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 493B
O93B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln768
cmp [__dreg+16],cx
mov ax,0
jg short ln768
sub edi,byte 20
jmp execend
ln768:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 493C
O93C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+16],byte 0
mov ax,8000h
jl short ln769
cmp [__dreg+16],cx
mov ax,0
jg short ln769
sub edi,byte 14
jmp execend
ln769:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 49D0 - 49D7
O9D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+16],edx
sub edi,byte 4
jmp execend
; Opcodes 49E8 - 49EF
O9E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+16],edx
sub edi,byte 8
jmp execend
; Opcodes 49F0 - 49F7
O9F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+16],edx
sub edi,byte 12
jmp execend
; Opcode 49F8
O9F8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+16],edx
sub edi,byte 8
jmp execend
; Opcode 49F9
O9F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+16],edx
sub edi,byte 12
jmp execend
; Opcode 49FA
O9FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+16],edx
sub edi,byte 8
jmp execend
; Opcode 49FB
O9FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+16],edx
sub edi,byte 12
jmp execend
; Opcodes 4A00 - 4A07
OA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 4A10 - 4A17
OA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 4A18 - 4A1F
OA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 4A20 - 4A27
OA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
test cl,cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 4A28 - 4A2F
OA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 4A30 - 4A37
OA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 4A38
OA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 4A39
OA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
test cl,cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 4A40 - 4A47
OA40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 4A50 - 4A57
OA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 4A58 - 4A5F
OA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 4A60 - 4A67
OA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 4A68 - 4A6F
OA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 4A70 - 4A77
OA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 4A78
OA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 4A79
OA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 4A80 - 4A87
OA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 4A90 - 4A97
OA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 4A98 - 4A9F
OA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 4AA0 - 4AA7
OAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
test ecx,ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 4AA8 - 4AAF
OAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 4AB0 - 4AB7
OAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 4AB8
OAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 4AB9
OAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
test ecx,ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcodes 4AC0 - 4AC7
OAC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
or cl,80h
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 4AD0 - 4AD7
OAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
test cl,cl
lahf
mov al,0
or cl,80h
call writememorybyte
sub edi,byte 18
jmp execend
; Opcodes 4AD8 - 4ADF
OAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
test cl,cl
lahf
mov al,0
or cl,80h
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes 4AE0 - 4AE7
OAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
test cl,cl
lahf
mov al,0
or cl,80h
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 4AE8 - 4AEF
OAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
test cl,cl
lahf
mov al,0
or cl,80h
call writememorybyte
sub edi,byte 22
jmp execend
; Opcodes 4AF0 - 4AF7
OAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
test cl,cl
lahf
mov al,0
or cl,80h
call writememorybyte
sub edi,byte 24
jmp execend
; Opcode 4AF8
OAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
test cl,cl
lahf
mov al,0
or cl,80h
call writememorybyte
sub edi,byte 22
jmp execend
; Opcode 4AF9
OAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
test cl,cl
lahf
mov al,0
or cl,80h
call writememorybyte
sub edi,byte 26
jmp execend
; Opcode 4AFA
OAFA:
r_illegal:
sub esi,byte 2
mov edx,10h
call group_1_exception
sub edi,byte 34
jmp execend
; Opcode 4AFB
OAFB:
sub esi,byte 2
mov edx,10h
call group_1_exception
sub edi,byte 34
jmp execend
; Opcode 4AFC
OAFC:
sub esi,byte 2
mov edx,10h
call group_1_exception
sub edi,byte 34
jmp execend
; Opcodes 4B00 - 4B07
OB00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln770
cmp [__dreg+20],cx
mov ax,0
jg short ln770
sub edi,byte 10
jmp execend
ln770:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4B10 - 4B17
OB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln771
cmp [__dreg+20],cx
mov ax,0
jg short ln771
sub edi,byte 14
jmp execend
ln771:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4B18 - 4B1F
OB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln772
cmp [__dreg+20],cx
mov ax,0
jg short ln772
sub edi,byte 14
jmp execend
ln772:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4B20 - 4B27
OB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln773
cmp [__dreg+20],cx
mov ax,0
jg short ln773
sub edi,byte 16
jmp execend
ln773:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4B28 - 4B2F
OB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln774
cmp [__dreg+20],cx
mov ax,0
jg short ln774
sub edi,byte 18
jmp execend
ln774:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4B30 - 4B37
OB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln775
cmp [__dreg+20],cx
mov ax,0
jg short ln775
sub edi,byte 20
jmp execend
ln775:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4B38
OB38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln776
cmp [__dreg+20],cx
mov ax,0
jg short ln776
sub edi,byte 18
jmp execend
ln776:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4B39
OB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln777
cmp [__dreg+20],cx
mov ax,0
jg short ln777
sub edi,byte 22
jmp execend
ln777:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 4B3A
OB3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln778
cmp [__dreg+20],cx
mov ax,0
jg short ln778
sub edi,byte 18
jmp execend
ln778:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4B3B
OB3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln779
cmp [__dreg+20],cx
mov ax,0
jg short ln779
sub edi,byte 20
jmp execend
ln779:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4B3C
OB3C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+20],byte 0
mov ax,8000h
jl short ln780
cmp [__dreg+20],cx
mov ax,0
jg short ln780
sub edi,byte 14
jmp execend
ln780:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4BD0 - 4BD7
OBD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+20],edx
sub edi,byte 4
jmp execend
; Opcodes 4BE8 - 4BEF
OBE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+20],edx
sub edi,byte 8
jmp execend
; Opcodes 4BF0 - 4BF7
OBF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+20],edx
sub edi,byte 12
jmp execend
; Opcode 4BF8
OBF8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+20],edx
sub edi,byte 8
jmp execend
; Opcode 4BF9
OBF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+20],edx
sub edi,byte 12
jmp execend
; Opcode 4BFA
OBFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+20],edx
sub edi,byte 8
jmp execend
; Opcode 4BFB
OBFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+20],edx
sub edi,byte 12
jmp execend
; Opcodes 4C90 - 4C97
OC90:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
xor ebx,ebx
ln781:
shr eax,1
jnc short ln782
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln782:
add ebx,byte 4
cmp ebx,byte 64
jne short ln781
pop eax
sub edi,byte 12
jmp execend
; Opcodes 4C98 - 4C9F
OC98:
and ebx,byte 7
push eax
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
push ebx
xor ebx,ebx
ln783:
shr eax,1
jnc short ln784
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln784:
add ebx,byte 4
cmp ebx,byte 64
jne short ln783
pop ebx
pop eax
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4CA8 - 4CAF
OCA8:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
xor ebx,ebx
ln785:
shr eax,1
jnc short ln786
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln786:
add ebx,byte 4
cmp ebx,byte 64
jne short ln785
pop eax
sub edi,byte 16
jmp execend
; Opcodes 4CB0 - 4CB7
OCB0:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+ebx*4]
xor ebx,ebx
ln787:
shr eax,1
jnc short ln788
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln788:
add ebx,byte 4
cmp ebx,byte 64
jne short ln787
pop eax
sub edi,byte 18
jmp execend
; Opcode 4CB8
OCB8:
push eax
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
xor ebx,ebx
ln789:
shr eax,1
jnc short ln790
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln790:
add ebx,byte 4
cmp ebx,byte 64
jne short ln789
pop eax
sub edi,byte 16
jmp execend
; Opcode 4CB9
OCB9:
push eax
mov ax,[esi]
add esi,byte 2
mov edx,dword[esi]
add esi,byte 4
rol edx,16
xor ebx,ebx
ln791:
shr eax,1
jnc short ln792
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln792:
add ebx,byte 4
cmp ebx,byte 64
jne short ln791
pop eax
sub edi,byte 20
jmp execend
; Opcode 4CBA
OCBA:
push eax
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
xor ebx,ebx
ln793:
shr eax,1
jnc short ln794
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln794:
add ebx,byte 4
cmp ebx,byte 64
jne short ln793
pop eax
sub edi,byte 16
jmp execend
; Opcode 4CBB
OCBB:
push eax
mov ax,[esi]
add esi,byte 2
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
xor ebx,ebx
ln795:
shr eax,1
jnc short ln796
call readmemoryword
movsx ecx,cx
mov [__reg+ebx],ecx
add edx,byte 2
sub edi,byte 4
ln796:
add ebx,byte 4
cmp ebx,byte 64
jne short ln795
pop eax
sub edi,byte 18
jmp execend
; Opcodes 4CD0 - 4CD7
OCD0:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
xor ebx,ebx
ln797:
shr eax,1
jnc short ln798
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln798:
add ebx,byte 4
cmp ebx,byte 64
jne short ln797
pop eax
sub edi,byte 12
jmp execend
; Opcodes 4CD8 - 4CDF
OCD8:
and ebx,byte 7
push eax
mov ax,[esi]
add esi,byte 2
mov edx,[__areg+ebx*4]
push ebx
xor ebx,ebx
ln799:
shr eax,1
jnc short ln800
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln800:
add ebx,byte 4
cmp ebx,byte 64
jne short ln799
pop ebx
pop eax
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 4CE8 - 4CEF
OCE8:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
xor ebx,ebx
ln801:
shr eax,1
jnc short ln802
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln802:
add ebx,byte 4
cmp ebx,byte 64
jne short ln801
pop eax
sub edi,byte 16
jmp execend
; Opcodes 4CF0 - 4CF7
OCF0:
push eax
and ebx,byte 7
mov ax,[esi]
add esi,byte 2
call decode_ext
add edx,[__areg+ebx*4]
xor ebx,ebx
ln803:
shr eax,1
jnc short ln804
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln804:
add ebx,byte 4
cmp ebx,byte 64
jne short ln803
pop eax
sub edi,byte 18
jmp execend
; Opcode 4CF8
OCF8:
push eax
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add esi,byte 2
xor ebx,ebx
ln805:
shr eax,1
jnc short ln806
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln806:
add ebx,byte 4
cmp ebx,byte 64
jne short ln805
pop eax
sub edi,byte 16
jmp execend
; Opcode 4CF9
OCF9:
push eax
mov ax,[esi]
add esi,byte 2
mov edx,dword[esi]
add esi,byte 4
rol edx,16
xor ebx,ebx
ln807:
shr eax,1
jnc short ln808
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln808:
add ebx,byte 4
cmp ebx,byte 64
jne short ln807
pop eax
sub edi,byte 20
jmp execend
; Opcode 4CFA
OCFA:
push eax
mov ax,[esi]
add esi,byte 2
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
xor ebx,ebx
ln809:
shr eax,1
jnc short ln810
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln810:
add ebx,byte 4
cmp ebx,byte 64
jne short ln809
pop eax
sub edi,byte 16
jmp execend
; Opcode 4CFB
OCFB:
push eax
mov ax,[esi]
add esi,byte 2
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
xor ebx,ebx
ln811:
shr eax,1
jnc short ln812
call readmemorydword
mov [__reg+ebx],ecx
add edx,byte 4
sub edi,byte 8
ln812:
add ebx,byte 4
cmp ebx,byte 64
jne short ln811
pop eax
sub edi,byte 18
jmp execend
; Opcodes 4D00 - 4D07
OD00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln813
cmp [__dreg+24],cx
mov ax,0
jg short ln813
sub edi,byte 10
jmp execend
ln813:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4D10 - 4D17
OD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln814
cmp [__dreg+24],cx
mov ax,0
jg short ln814
sub edi,byte 14
jmp execend
ln814:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4D18 - 4D1F
OD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln815
cmp [__dreg+24],cx
mov ax,0
jg short ln815
sub edi,byte 14
jmp execend
ln815:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4D20 - 4D27
OD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln816
cmp [__dreg+24],cx
mov ax,0
jg short ln816
sub edi,byte 16
jmp execend
ln816:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4D28 - 4D2F
OD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln817
cmp [__dreg+24],cx
mov ax,0
jg short ln817
sub edi,byte 18
jmp execend
ln817:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4D30 - 4D37
OD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln818
cmp [__dreg+24],cx
mov ax,0
jg short ln818
sub edi,byte 20
jmp execend
ln818:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4D38
OD38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln819
cmp [__dreg+24],cx
mov ax,0
jg short ln819
sub edi,byte 18
jmp execend
ln819:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4D39
OD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln820
cmp [__dreg+24],cx
mov ax,0
jg short ln820
sub edi,byte 22
jmp execend
ln820:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 4D3A
OD3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln821
cmp [__dreg+24],cx
mov ax,0
jg short ln821
sub edi,byte 18
jmp execend
ln821:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4D3B
OD3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln822
cmp [__dreg+24],cx
mov ax,0
jg short ln822
sub edi,byte 20
jmp execend
ln822:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4D3C
OD3C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+24],byte 0
mov ax,8000h
jl short ln823
cmp [__dreg+24],cx
mov ax,0
jg short ln823
sub edi,byte 14
jmp execend
ln823:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4DD0 - 4DD7
ODD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+24],edx
sub edi,byte 4
jmp execend
; Opcodes 4DE8 - 4DEF
ODE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+24],edx
sub edi,byte 8
jmp execend
; Opcodes 4DF0 - 4DF7
ODF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+24],edx
sub edi,byte 12
jmp execend
; Opcode 4DF8
ODF8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+24],edx
sub edi,byte 8
jmp execend
; Opcode 4DF9
ODF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+24],edx
sub edi,byte 12
jmp execend
; Opcode 4DFA
ODFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+24],edx
sub edi,byte 8
jmp execend
; Opcode 4DFB
ODFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+24],edx
sub edi,byte 12
jmp execend
; Opcodes 4E40 - 4E4F
OE40:
and ebx,byte 0Fh
lea edx,[80h+ebx*4]
call group_2_exception
sub edi,byte 34
jmp execend
; Opcodes 4E50 - 4E57
OE50:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
mov ecx,[__a7]
mov [__areg+ebx*4],ecx
movsx edx,word[esi]
add ecx,edx
mov [__a7],ecx
add esi,byte 2
sub edi,byte 16
jmp execend
; Opcodes 4E58 - 4E5F
OE58:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__a7],ecx
mov edx,[__areg+28]
call readmemorydword
add edx,byte 4
mov [__areg+28],edx
mov [__areg+ebx*4],ecx
sub edi,byte 12
jmp execend
; Opcodes 4E60 - 4E67
OE60:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
mov ecx,[__areg+ebx*4]
mov [__asp],ecx
sub edi,byte 4
jmp execend
; Opcodes 4E68 - 4E6F
OE68:
test byte[__sr+1],20h
jz near privilege_violation
and ebx,byte 7
mov ecx,[__asp]
mov [__areg+ebx*4],ecx
sub edi,byte 4
jmp execend
; Opcode 4E70
OE70:
test byte[__sr+1],20h
jz near privilege_violation
mov ecx,[__resethandler]
or ecx,ecx
jz near invalidins
mov [__io_cycle_counter],edi
mov [__io_fetchbase],ebp
mov [__io_fetchbased_pc],esi
push ebx
push eax
call ecx
pop eax
pop ebx
mov edi,[__io_cycle_counter]
mov ebp,[__io_fetchbase]
mov esi,[__io_fetchbased_pc]
sub edi,132
jmp execend
; Opcode 4E71
OE71:
sub edi,byte 4
jmp execend
; Opcode 4E72
OE72:
test byte[__sr+1],20h
jz near privilege_violation
mov cx,[esi]
add esi,2
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln825
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln826
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln825
ln826:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln825:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
or byte[__interrupts],1
sub edi,byte 4
js short ln824
xor edi,edi
dec edi
ln824:
or edi,edi
jmp execend
; Opcode 4E73
OE73:
test byte[__sr+1],20h
jz near privilege_violation
mov edx,[__a7]
ADD EDX,BYTE 2
CALL readmemorydword
PUSH ECX
SUB EDX,BYTE 2
CALL readmemoryword
push ecx
mov cl,[__sr+1]
and cx,2020h
xor ch,cl
jz near ln828
mov ecx,[__a7]
xchg ecx,[__asp]
mov [__a7],ecx
test byte[esp+1],20h
jz short ln829
mov ecx,[__s_fetch]
mov [__fetch],ecx
mov ecx,[__s_readbyte]
mov [__readbyte],ecx
mov ecx,[__s_readword]
mov [__readword],ecx
mov ecx,[__s_writebyte]
mov [__writebyte],ecx
mov ecx,[__s_writeword]
mov [__writeword],ecx
jmp short ln828
ln829:
mov ecx,[__u_fetch]
mov [__fetch],ecx
mov ecx,[__u_readbyte]
mov [__readbyte],ecx
mov ecx,[__u_readword]
mov [__readword],ecx
mov ecx,[__u_writebyte]
mov [__writebyte],ecx
mov ecx,[__u_writeword]
mov [__writeword],ecx
ln828:
pop ecx
mov [__sr+1],ch
and byte[__sr+1],0A7h
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
test ch,20h
jz short ln827_nosupe
add dword [__a7],byte 6
jmp short ln827_finish
ln827_nosupe:
add dword [__asp],byte 6
ln827_finish:
POP ESI
CALL basefunction
ADD ESI,EBP
sub edi,byte 20
jmp exec_checkpoint
; Opcode 4E75
OE75:
mov edx,[__areg+28]
call readmemorydword
add edx,byte 4
mov [__areg+28],edx
mov esi,ecx
cmp esi,[__fetch_region_start]
jb short ln830
cmp esi,[__fetch_region_end]
jbe short ln831
ln830:
call basefunction
ln831:
add esi,ebp
sub edi,byte 16
jmp execend
; Opcode 4E76
OE76:
test al,1
jnz short ln832
sub edi,byte 4
jmp execend
ln832:
mov edx,1Ch
call group_2_exception
sub edi,byte 38
jmp execend
; Opcode 4E77
OE77:
mov edx,[__areg+28]
call readmemoryword
add edx,byte 2
mov [__areg+28],edx
mov al,cl
mov ah,al
and ax,0C10h
shl ah,3
shr al,4
mov [__xflag],al
mov al,cl
and al,3
shr al,1
adc ah,ah
mov edx,[__areg+28]
call readmemorydword
add edx,byte 4
mov [__areg+28],edx
mov esi,ecx
cmp esi,[__fetch_region_start]
jb short ln833
cmp esi,[__fetch_region_end]
jbe short ln834
ln833:
call basefunction
ln834:
add esi,ebp
sub edi,byte 20
jmp execend
; Opcodes 4E90 - 4E97
OE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov ecx,esi
sub ecx,ebp
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln835
cmp esi,[__fetch_region_end]
jbe short ln836
ln835:
call basefunction
ln836:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 16
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcodes 4EA8 - 4EAF
OEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov ecx,esi
sub ecx,ebp
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln837
cmp esi,[__fetch_region_end]
jbe short ln838
ln837:
call basefunction
ln838:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 18
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcodes 4EB0 - 4EB7
OEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov ecx,esi
sub ecx,ebp
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln839
cmp esi,[__fetch_region_end]
jbe short ln840
ln839:
call basefunction
ln840:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 22
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EB8
OEB8:
movsx edx,word[esi]
add esi,byte 2
mov ecx,esi
sub ecx,ebp
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln841
cmp esi,[__fetch_region_end]
jbe short ln842
ln841:
call basefunction
ln842:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 18
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EB9
OEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov ecx,esi
sub ecx,ebp
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln843
cmp esi,[__fetch_region_end]
jbe short ln844
ln843:
call basefunction
ln844:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 20
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EBA
OEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov ecx,esi
sub ecx,ebp
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln845
cmp esi,[__fetch_region_end]
jbe short ln846
ln845:
call basefunction
ln846:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 18
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EBB
OEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov ecx,esi
sub ecx,ebp
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln847
cmp esi,[__fetch_region_end]
jbe short ln848
ln847:
call basefunction
ln848:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 22
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcodes 4ED0 - 4ED7
OED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln849
cmp esi,[__fetch_region_end]
jbe short ln850
ln849:
call basefunction
ln850:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
sub edi,byte 8
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcodes 4EE8 - 4EEF
OEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln851
cmp esi,[__fetch_region_end]
jbe short ln852
ln851:
call basefunction
ln852:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
sub edi,byte 10
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcodes 4EF0 - 4EF7
OEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln853
cmp esi,[__fetch_region_end]
jbe short ln854
ln853:
call basefunction
ln854:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
sub edi,byte 14
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EF8
OEF8:
movsx edx,word[esi]
add esi,byte 2
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln855
cmp esi,[__fetch_region_end]
jbe short ln856
ln855:
call basefunction
ln856:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
sub edi,byte 10
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EF9
OEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln857
cmp esi,[__fetch_region_end]
jbe short ln858
ln857:
call basefunction
ln858:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
sub edi,byte 12
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EFA
OEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln859
cmp esi,[__fetch_region_end]
jbe short ln860
ln859:
call basefunction
ln860:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
sub edi,byte 10
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcode 4EFB
OEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov esi,edx
cmp esi,[__fetch_region_start]
jb short ln861
cmp esi,[__fetch_region_end]
jbe short ln862
ln861:
call basefunction
ln862:
add esi,ebp
SHR ESI,1
JC .error
ADD ESI,ESI
sub edi,byte 14
jmp execend
.error:
ADD ESI,ESI
INC ESI
PUSH ESI
SUB ESI,[__FETCH_REGION_OFFSET]
and ESI,16777215
MOV [__BUSERR_ADDR],ESI
POP ESI
MOV [__pc],ESI
MOV [__BUSERR_STAT],word 0016h
JMP addr_error
; Opcodes 4F00 - 4F07
OF00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln863
cmp [__dreg+28],cx
mov ax,0
jg short ln863
sub edi,byte 10
jmp execend
ln863:mov edx,18h
call group_2_exception
sub edi,byte 40
jmp execend
; Opcodes 4F10 - 4F17
OF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln864
cmp [__dreg+28],cx
mov ax,0
jg short ln864
sub edi,byte 14
jmp execend
ln864:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4F18 - 4F1F
OF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln865
cmp [__dreg+28],cx
mov ax,0
jg short ln865
sub edi,byte 14
jmp execend
ln865:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4F20 - 4F27
OF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln866
cmp [__dreg+28],cx
mov ax,0
jg short ln866
sub edi,byte 16
jmp execend
ln866:mov edx,18h
call group_2_exception
sub edi,byte 46
jmp execend
; Opcodes 4F28 - 4F2F
OF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln867
cmp [__dreg+28],cx
mov ax,0
jg short ln867
sub edi,byte 18
jmp execend
ln867:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcodes 4F30 - 4F37
OF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln868
cmp [__dreg+28],cx
mov ax,0
jg short ln868
sub edi,byte 20
jmp execend
ln868:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4F38
OF38:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln869
cmp [__dreg+28],cx
mov ax,0
jg short ln869
sub edi,byte 18
jmp execend
ln869:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4F39
OF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln870
cmp [__dreg+28],cx
mov ax,0
jg short ln870
sub edi,byte 22
jmp execend
ln870:mov edx,18h
call group_2_exception
sub edi,byte 52
jmp execend
; Opcode 4F3A
OF3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln871
cmp [__dreg+28],cx
mov ax,0
jg short ln871
sub edi,byte 18
jmp execend
ln871:mov edx,18h
call group_2_exception
sub edi,byte 48
jmp execend
; Opcode 4F3B
OF3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln872
cmp [__dreg+28],cx
mov ax,0
jg short ln872
sub edi,byte 20
jmp execend
ln872:mov edx,18h
call group_2_exception
sub edi,byte 50
jmp execend
; Opcode 4F3C
OF3C:
mov cx,[esi]
add esi,byte 2
cmp word[__dreg+28],byte 0
mov ax,8000h
jl short ln873
cmp [__dreg+28],cx
mov ax,0
jg short ln873
sub edi,byte 14
jmp execend
ln873:mov edx,18h
call group_2_exception
sub edi,byte 44
jmp execend
; Opcodes 4FD0 - 4FD7
OFD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
mov [__areg+28],edx
sub edi,byte 4
jmp execend
; Opcodes 4FE8 - 4FEF
OFE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
mov [__areg+28],edx
sub edi,byte 8
jmp execend
; Opcodes 4FF0 - 4FF7
OFF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
mov [__areg+28],edx
sub edi,byte 12
jmp execend
; Opcode 4FF8
OFF8:
movsx edx,word[esi]
add esi,byte 2
mov [__areg+28],edx
sub edi,byte 8
jmp execend
; Opcode 4FF9
OFF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
mov [__areg+28],edx
sub edi,byte 12
jmp execend
; Opcode 4FFA
OFFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
mov [__areg+28],edx
sub edi,byte 8
jmp execend
; Opcode 4FFB
OFFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
mov [__areg+28],edx
sub edi,byte 12
jmp execend
; Opcodes 5000 - 5007
P000:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 8
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5010 - 5017
P010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5018 - 501F
P018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5020 - 5027
P020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5028 - 502F
P028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5030 - 5037
P030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5038
P038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5039
P039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5040 - 5047
P040:
and ebx,byte 7
add word[__dreg+ebx*4],byte 8
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5048 - 504F
P048:
and ebx,byte 7
add dword[__areg+ebx*4],byte 8
sub edi,byte 4
jmp execend
; Opcodes 5050 - 5057
P050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5058 - 505F
P058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5060 - 5067
P060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5068 - 506F
P068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5070 - 5077
P070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5078
P078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5079
P079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5080 - 5087
P080:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 8
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5088 - 508F
P088:
and ebx,byte 7
add dword[__areg+ebx*4],byte 8
sub edi,byte 8
jmp execend
; Opcodes 5090 - 5097
P090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5098 - 509F
P098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 50A0 - 50A7
P0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 50A8 - 50AF
P0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 50B0 - 50B7
P0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 50B8
P0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 50B9
P0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 50C0 - 50C7
P0C0:
and ebx,byte 7
mov cl,255
mov [__dreg+ebx*4],cl
sub edi,byte 6
jmp execend
; Opcodes 50C8 - 50CF
P0C8:
add esi,byte 2
sub edi,byte 8
jmp execend
; Opcodes 50D0 - 50D7
P0D0:
and ebx,byte 7
mov cl,255
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 50D8 - 50DF
P0D8:
and ebx,byte 7
mov cl,255
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 50E0 - 50E7
P0E0:
and ebx,byte 7
mov cl,255
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 50E8 - 50EF
P0E8:
and ebx,byte 7
mov cl,255
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 50F0 - 50F7
P0F0:
and ebx,byte 7
mov cl,255
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 50F8
P0F8:
mov cl,255
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 50F9
P0F9:
mov cl,255
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5100 - 5107
P100:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 8
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5110 - 5117
P110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5118 - 511F
P118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5120 - 5127
P120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5128 - 512F
P128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5130 - 5137
P130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5138
P138:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5139
P139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 8
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5140 - 5147
P140:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 8
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5148 - 514F
P148:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 8
sub edi,byte 8
jmp execend
; Opcodes 5150 - 5157
P150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5158 - 515F
P158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5160 - 5167
P160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5168 - 516F
P168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5170 - 5177
P170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5178
P178:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5179
P179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 8
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5180 - 5187
P180:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 8
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5188 - 518F
P188:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 8
sub edi,byte 8
jmp execend
; Opcodes 5190 - 5197
P190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5198 - 519F
P198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 51A0 - 51A7
P1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 51A8 - 51AF
P1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 51B0 - 51B7
P1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 51B8
P1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 51B9
P1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 8
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 51C0 - 51C7
P1C0:
and ebx,byte 7
mov cl,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 51C8 - 51CF
P1C8:
r_dbra:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 1
jnc near r_bra_w
add esi,byte 2
sub edi,byte 14
jmp execend
; Opcodes 51D0 - 51D7
P1D0:
and ebx,byte 7
mov cl,0
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 51D8 - 51DF
P1D8:
and ebx,byte 7
mov cl,0
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 51E0 - 51E7
P1E0:
and ebx,byte 7
mov cl,0
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 51E8 - 51EF
P1E8:
and ebx,byte 7
mov cl,0
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 51F0 - 51F7
P1F0:
and ebx,byte 7
mov cl,0
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 51F8
P1F8:
mov cl,0
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 51F9
P1F9:
mov cl,0
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5200 - 5207
P200:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 1
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5210 - 5217
P210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5218 - 521F
P218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5220 - 5227
P220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5228 - 522F
P228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5230 - 5237
P230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5238
P238:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5239
P239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5240 - 5247
P240:
and ebx,byte 7
add word[__dreg+ebx*4],byte 1
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5248 - 524F
P248:
and ebx,byte 7
add dword[__areg+ebx*4],byte 1
sub edi,byte 4
jmp execend
; Opcodes 5250 - 5257
P250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5258 - 525F
P258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5260 - 5267
P260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5268 - 526F
P268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5270 - 5277
P270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5278
P278:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5279
P279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5280 - 5287
P280:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 1
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5288 - 528F
P288:
and ebx,byte 7
add dword[__areg+ebx*4],byte 1
sub edi,byte 8
jmp execend
; Opcodes 5290 - 5297
P290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5298 - 529F
P298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 52A0 - 52A7
P2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 52A8 - 52AF
P2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 52B0 - 52B7
P2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 52B8
P2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 52B9
P2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 52C0 - 52C7
P2C0:
and ebx,byte 7
xor ecx,ecx
test ah,41h
setz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 52C8 - 52CF
P2C8:
test ah,41h
jnz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 52D0 - 52D7
P2D0:
and ebx,byte 7
test ah,41h
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 52D8 - 52DF
P2D8:
and ebx,byte 7
test ah,41h
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 52E0 - 52E7
P2E0:
and ebx,byte 7
test ah,41h
setz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 52E8 - 52EF
P2E8:
and ebx,byte 7
test ah,41h
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 52F0 - 52F7
P2F0:
and ebx,byte 7
test ah,41h
setz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 52F8
P2F8:
test ah,41h
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 52F9
P2F9:
test ah,41h
setz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5300 - 5307
P300:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 1
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5310 - 5317
P310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5318 - 531F
P318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5320 - 5327
P320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5328 - 532F
P328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5330 - 5337
P330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5338
P338:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5339
P339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 1
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5340 - 5347
P340:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 1
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5348 - 534F
P348:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 1
sub edi,byte 8
jmp execend
; Opcodes 5350 - 5357
P350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5358 - 535F
P358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5360 - 5367
P360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5368 - 536F
P368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5370 - 5377
P370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5378
P378:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5379
P379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5380 - 5387
P380:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 1
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5388 - 538F
P388:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 1
sub edi,byte 8
jmp execend
; Opcodes 5390 - 5397
P390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5398 - 539F
P398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 53A0 - 53A7
P3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 53A8 - 53AF
P3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 53B0 - 53B7
P3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 53B8
P3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 53B9
P3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 1
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 53C0 - 53C7
P3C0:
and ebx,byte 7
xor ecx,ecx
test ah,41h
setnz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 53C8 - 53CF
P3C8:
test ah,41h
jz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 53D0 - 53D7
P3D0:
and ebx,byte 7
test ah,41h
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 53D8 - 53DF
P3D8:
and ebx,byte 7
test ah,41h
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 53E0 - 53E7
P3E0:
and ebx,byte 7
test ah,41h
setnz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 53E8 - 53EF
P3E8:
and ebx,byte 7
test ah,41h
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 53F0 - 53F7
P3F0:
and ebx,byte 7
test ah,41h
setnz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 53F8
P3F8:
test ah,41h
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 53F9
P3F9:
test ah,41h
setnz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5400 - 5407
P400:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 2
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5410 - 5417
P410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5418 - 541F
P418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5420 - 5427
P420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5428 - 542F
P428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5430 - 5437
P430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5438
P438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5439
P439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5440 - 5447
P440:
and ebx,byte 7
add word[__dreg+ebx*4],byte 2
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5448 - 544F
P448:
and ebx,byte 7
add dword[__areg+ebx*4],byte 2
sub edi,byte 4
jmp execend
; Opcodes 5450 - 5457
P450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5458 - 545F
P458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5460 - 5467
P460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5468 - 546F
P468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5470 - 5477
P470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5478
P478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5479
P479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5480 - 5487
P480:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 2
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5488 - 548F
P488:
and ebx,byte 7
add dword[__areg+ebx*4],byte 2
sub edi,byte 8
jmp execend
; Opcodes 5490 - 5497
P490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5498 - 549F
P498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 54A0 - 54A7
P4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 54A8 - 54AF
P4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 54B0 - 54B7
P4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 54B8
P4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 54B9
P4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 54C0 - 54C7
P4C0:
and ebx,byte 7
xor ecx,ecx
test ah,1
setz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 54C8 - 54CF
P4C8:
test ah,1
jnz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 54D0 - 54D7
P4D0:
and ebx,byte 7
test ah,1
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 54D8 - 54DF
P4D8:
and ebx,byte 7
test ah,1
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 54E0 - 54E7
P4E0:
and ebx,byte 7
test ah,1
setz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 54E8 - 54EF
P4E8:
and ebx,byte 7
test ah,1
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 54F0 - 54F7
P4F0:
and ebx,byte 7
test ah,1
setz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 54F8
P4F8:
test ah,1
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 54F9
P4F9:
test ah,1
setz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5500 - 5507
P500:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 2
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5510 - 5517
P510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5518 - 551F
P518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5520 - 5527
P520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5528 - 552F
P528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5530 - 5537
P530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5538
P538:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5539
P539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 2
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5540 - 5547
P540:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 2
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5548 - 554F
P548:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 2
sub edi,byte 8
jmp execend
; Opcodes 5550 - 5557
P550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5558 - 555F
P558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5560 - 5567
P560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5568 - 556F
P568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5570 - 5577
P570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5578
P578:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5579
P579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 2
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5580 - 5587
P580:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 2
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5588 - 558F
P588:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 2
sub edi,byte 8
jmp execend
; Opcodes 5590 - 5597
P590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5598 - 559F
P598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 55A0 - 55A7
P5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 55A8 - 55AF
P5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 55B0 - 55B7
P5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 55B8
P5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 55B9
P5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 2
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 55C0 - 55C7
P5C0:
and ebx,byte 7
xor ecx,ecx
test ah,1
setnz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 55C8 - 55CF
P5C8:
test ah,1
jz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 55D0 - 55D7
P5D0:
and ebx,byte 7
test ah,1
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 55D8 - 55DF
P5D8:
and ebx,byte 7
test ah,1
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 55E0 - 55E7
P5E0:
and ebx,byte 7
test ah,1
setnz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 55E8 - 55EF
P5E8:
and ebx,byte 7
test ah,1
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 55F0 - 55F7
P5F0:
and ebx,byte 7
test ah,1
setnz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 55F8
P5F8:
test ah,1
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 55F9
P5F9:
test ah,1
setnz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5600 - 5607
P600:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 3
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5610 - 5617
P610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5618 - 561F
P618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5620 - 5627
P620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5628 - 562F
P628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5630 - 5637
P630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5638
P638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5639
P639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5640 - 5647
P640:
and ebx,byte 7
add word[__dreg+ebx*4],byte 3
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5648 - 564F
P648:
and ebx,byte 7
add dword[__areg+ebx*4],byte 3
sub edi,byte 4
jmp execend
; Opcodes 5650 - 5657
P650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5658 - 565F
P658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5660 - 5667
P660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5668 - 566F
P668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5670 - 5677
P670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5678
P678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5679
P679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5680 - 5687
P680:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 3
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5688 - 568F
P688:
and ebx,byte 7
add dword[__areg+ebx*4],byte 3
sub edi,byte 8
jmp execend
; Opcodes 5690 - 5697
P690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5698 - 569F
P698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 56A0 - 56A7
P6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 56A8 - 56AF
P6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 56B0 - 56B7
P6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 56B8
P6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 56B9
P6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 56C0 - 56C7
P6C0:
and ebx,byte 7
xor ecx,ecx
test ah,40h
setz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 56C8 - 56CF
P6C8:
test ah,40h
jnz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 56D0 - 56D7
P6D0:
and ebx,byte 7
test ah,40h
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 56D8 - 56DF
P6D8:
and ebx,byte 7
test ah,40h
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 56E0 - 56E7
P6E0:
and ebx,byte 7
test ah,40h
setz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 56E8 - 56EF
P6E8:
and ebx,byte 7
test ah,40h
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 56F0 - 56F7
P6F0:
and ebx,byte 7
test ah,40h
setz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 56F8
P6F8:
test ah,40h
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 56F9
P6F9:
test ah,40h
setz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5700 - 5707
P700:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 3
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5710 - 5717
P710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5718 - 571F
P718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5720 - 5727
P720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5728 - 572F
P728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5730 - 5737
P730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5738
P738:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5739
P739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 3
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5740 - 5747
P740:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 3
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5748 - 574F
P748:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 3
sub edi,byte 8
jmp execend
; Opcodes 5750 - 5757
P750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5758 - 575F
P758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5760 - 5767
P760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5768 - 576F
P768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5770 - 5777
P770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5778
P778:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5779
P779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 3
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5780 - 5787
P780:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 3
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5788 - 578F
P788:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 3
sub edi,byte 8
jmp execend
; Opcodes 5790 - 5797
P790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5798 - 579F
P798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 57A0 - 57A7
P7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 57A8 - 57AF
P7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 57B0 - 57B7
P7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 57B8
P7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 57B9
P7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 3
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 57C0 - 57C7
P7C0:
and ebx,byte 7
xor ecx,ecx
test ah,40h
setnz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 57C8 - 57CF
P7C8:
test ah,40h
jz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 57D0 - 57D7
P7D0:
and ebx,byte 7
test ah,40h
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 57D8 - 57DF
P7D8:
and ebx,byte 7
test ah,40h
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 57E0 - 57E7
P7E0:
and ebx,byte 7
test ah,40h
setnz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 57E8 - 57EF
P7E8:
and ebx,byte 7
test ah,40h
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 57F0 - 57F7
P7F0:
and ebx,byte 7
test ah,40h
setnz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 57F8
P7F8:
test ah,40h
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 57F9
P7F9:
test ah,40h
setnz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5800 - 5807
P800:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 4
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5810 - 5817
P810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5818 - 581F
P818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5820 - 5827
P820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5828 - 582F
P828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5830 - 5837
P830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5838
P838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5839
P839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5840 - 5847
P840:
and ebx,byte 7
add word[__dreg+ebx*4],byte 4
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5848 - 584F
P848:
and ebx,byte 7
add dword[__areg+ebx*4],byte 4
sub edi,byte 4
jmp execend
; Opcodes 5850 - 5857
P850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5858 - 585F
P858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5860 - 5867
P860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5868 - 586F
P868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5870 - 5877
P870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5878
P878:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5879
P879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5880 - 5887
P880:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 4
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5888 - 588F
P888:
and ebx,byte 7
add dword[__areg+ebx*4],byte 4
sub edi,byte 8
jmp execend
; Opcodes 5890 - 5897
P890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5898 - 589F
P898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 58A0 - 58A7
P8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 58A8 - 58AF
P8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 58B0 - 58B7
P8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 58B8
P8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 58B9
P8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 58C0 - 58C7
P8C0:
and ebx,byte 7
xor ecx,ecx
test al,1
setz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 58C8 - 58CF
P8C8:
test al,1
jnz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 58D0 - 58D7
P8D0:
and ebx,byte 7
test al,1
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 58D8 - 58DF
P8D8:
and ebx,byte 7
test al,1
setz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 58E0 - 58E7
P8E0:
and ebx,byte 7
test al,1
setz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 58E8 - 58EF
P8E8:
and ebx,byte 7
test al,1
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 58F0 - 58F7
P8F0:
and ebx,byte 7
test al,1
setz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 58F8
P8F8:
test al,1
setz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 58F9
P8F9:
test al,1
setz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5900 - 5907
P900:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 4
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5910 - 5917
P910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5918 - 591F
P918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5920 - 5927
P920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5928 - 592F
P928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5930 - 5937
P930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5938
P938:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5939
P939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 4
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5940 - 5947
P940:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 4
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5948 - 594F
P948:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 4
sub edi,byte 8
jmp execend
; Opcodes 5950 - 5957
P950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5958 - 595F
P958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5960 - 5967
P960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5968 - 596F
P968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5970 - 5977
P970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5978
P978:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5979
P979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 4
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5980 - 5987
P980:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 4
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5988 - 598F
P988:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 4
sub edi,byte 8
jmp execend
; Opcodes 5990 - 5997
P990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5998 - 599F
P998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 59A0 - 59A7
P9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 59A8 - 59AF
P9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 59B0 - 59B7
P9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 59B8
P9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 59B9
P9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 4
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 59C0 - 59C7
P9C0:
and ebx,byte 7
xor ecx,ecx
test al,1
setnz cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 59C8 - 59CF
P9C8:
test al,1
jz near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 59D0 - 59D7
P9D0:
and ebx,byte 7
test al,1
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 59D8 - 59DF
P9D8:
and ebx,byte 7
test al,1
setnz cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 59E0 - 59E7
P9E0:
and ebx,byte 7
test al,1
setnz cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 59E8 - 59EF
P9E8:
and ebx,byte 7
test al,1
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 59F0 - 59F7
P9F0:
and ebx,byte 7
test al,1
setnz cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 59F8
P9F8:
test al,1
setnz cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 59F9
P9F9:
test al,1
setnz cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5A00 - 5A07
PA00:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 5
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5A10 - 5A17
PA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5A18 - 5A1F
PA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5A20 - 5A27
PA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5A28 - 5A2F
PA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5A30 - 5A37
PA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5A38
PA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5A39
PA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5A40 - 5A47
PA40:
and ebx,byte 7
add word[__dreg+ebx*4],byte 5
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5A48 - 5A4F
PA48:
and ebx,byte 7
add dword[__areg+ebx*4],byte 5
sub edi,byte 4
jmp execend
; Opcodes 5A50 - 5A57
PA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5A58 - 5A5F
PA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5A60 - 5A67
PA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5A68 - 5A6F
PA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5A70 - 5A77
PA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5A78
PA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5A79
PA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5A80 - 5A87
PA80:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 5
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5A88 - 5A8F
PA88:
and ebx,byte 7
add dword[__areg+ebx*4],byte 5
sub edi,byte 8
jmp execend
; Opcodes 5A90 - 5A97
PA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5A98 - 5A9F
PA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 5AA0 - 5AA7
PAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 5AA8 - 5AAF
PAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 5AB0 - 5AB7
PAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 5AB8
PAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 5AB9
PAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 5AC0 - 5AC7
PAC0:
and ebx,byte 7
xor ecx,ecx
or ah,ah
setns cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 5AC8 - 5ACF
PAC8:
or ah,ah
js near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 5AD0 - 5AD7
PAD0:
and ebx,byte 7
or ah,ah
setns cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5AD8 - 5ADF
PAD8:
and ebx,byte 7
or ah,ah
setns cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5AE0 - 5AE7
PAE0:
and ebx,byte 7
or ah,ah
setns cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5AE8 - 5AEF
PAE8:
and ebx,byte 7
or ah,ah
setns cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5AF0 - 5AF7
PAF0:
and ebx,byte 7
or ah,ah
setns cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5AF8
PAF8:
or ah,ah
setns cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5AF9
PAF9:
or ah,ah
setns cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5B00 - 5B07
PB00:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 5
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5B10 - 5B17
PB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5B18 - 5B1F
PB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5B20 - 5B27
PB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5B28 - 5B2F
PB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5B30 - 5B37
PB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5B38
PB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5B39
PB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 5
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5B40 - 5B47
PB40:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 5
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5B48 - 5B4F
PB48:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 5
sub edi,byte 8
jmp execend
; Opcodes 5B50 - 5B57
PB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5B58 - 5B5F
PB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5B60 - 5B67
PB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5B68 - 5B6F
PB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5B70 - 5B77
PB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5B78
PB78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5B79
PB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 5
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5B80 - 5B87
PB80:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 5
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5B88 - 5B8F
PB88:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 5
sub edi,byte 8
jmp execend
; Opcodes 5B90 - 5B97
PB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5B98 - 5B9F
PB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 5BA0 - 5BA7
PBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 5BA8 - 5BAF
PBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 5BB0 - 5BB7
PBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 5BB8
PBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 5BB9
PBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 5
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 5BC0 - 5BC7
PBC0:
and ebx,byte 7
xor ecx,ecx
or ah,ah
sets cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 5BC8 - 5BCF
PBC8:
or ah,ah
jns near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 5BD0 - 5BD7
PBD0:
and ebx,byte 7
or ah,ah
sets cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5BD8 - 5BDF
PBD8:
and ebx,byte 7
or ah,ah
sets cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5BE0 - 5BE7
PBE0:
and ebx,byte 7
or ah,ah
sets cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5BE8 - 5BEF
PBE8:
and ebx,byte 7
or ah,ah
sets cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5BF0 - 5BF7
PBF0:
and ebx,byte 7
or ah,ah
sets cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5BF8
PBF8:
or ah,ah
sets cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5BF9
PBF9:
or ah,ah
sets cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5C00 - 5C07
PC00:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 6
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5C10 - 5C17
PC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5C18 - 5C1F
PC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5C20 - 5C27
PC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5C28 - 5C2F
PC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5C30 - 5C37
PC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5C38
PC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5C39
PC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5C40 - 5C47
PC40:
and ebx,byte 7
add word[__dreg+ebx*4],byte 6
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5C48 - 5C4F
PC48:
and ebx,byte 7
add dword[__areg+ebx*4],byte 6
sub edi,byte 4
jmp execend
; Opcodes 5C50 - 5C57
PC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5C58 - 5C5F
PC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5C60 - 5C67
PC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5C68 - 5C6F
PC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5C70 - 5C77
PC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5C78
PC78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5C79
PC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5C80 - 5C87
PC80:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 6
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5C88 - 5C8F
PC88:
and ebx,byte 7
add dword[__areg+ebx*4],byte 6
sub edi,byte 8
jmp execend
; Opcodes 5C90 - 5C97
PC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5C98 - 5C9F
PC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 5CA0 - 5CA7
PCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 5CA8 - 5CAF
PCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 5CB0 - 5CB7
PCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 5CB8
PCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 5CB9
PCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 5CC0 - 5CC7
PCC0:
and ebx,byte 7
xor ecx,ecx
push eax
neg al
xor al,ah
pop eax
setns cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 5CC8 - 5CCF
PCC8:
push eax
neg al
xor al,ah
pop eax
js near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 5CD0 - 5CD7
PCD0:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
setns cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5CD8 - 5CDF
PCD8:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
setns cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5CE0 - 5CE7
PCE0:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
setns cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5CE8 - 5CEF
PCE8:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
setns cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5CF0 - 5CF7
PCF0:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
setns cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5CF8
PCF8:
push eax
neg al
xor al,ah
pop eax
setns cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5CF9
PCF9:
push eax
neg al
xor al,ah
pop eax
setns cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5D00 - 5D07
PD00:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 6
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5D10 - 5D17
PD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5D18 - 5D1F
PD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5D20 - 5D27
PD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5D28 - 5D2F
PD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5D30 - 5D37
PD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5D38
PD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5D39
PD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 6
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5D40 - 5D47
PD40:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 6
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5D48 - 5D4F
PD48:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 6
sub edi,byte 8
jmp execend
; Opcodes 5D50 - 5D57
PD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5D58 - 5D5F
PD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5D60 - 5D67
PD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5D68 - 5D6F
PD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5D70 - 5D77
PD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5D78
PD78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5D79
PD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 6
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5D80 - 5D87
PD80:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 6
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5D88 - 5D8F
PD88:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 6
sub edi,byte 8
jmp execend
; Opcodes 5D90 - 5D97
PD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5D98 - 5D9F
PD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 5DA0 - 5DA7
PDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 5DA8 - 5DAF
PDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 5DB0 - 5DB7
PDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 5DB8
PDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 5DB9
PDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 6
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 5DC0 - 5DC7
PDC0:
and ebx,byte 7
xor ecx,ecx
push eax
neg al
xor al,ah
pop eax
sets cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 5DC8 - 5DCF
PDC8:
push eax
neg al
xor al,ah
pop eax
jns near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 5DD0 - 5DD7
PDD0:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
sets cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5DD8 - 5DDF
PDD8:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
sets cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5DE0 - 5DE7
PDE0:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
sets cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5DE8 - 5DEF
PDE8:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
sets cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5DF0 - 5DF7
PDF0:
and ebx,byte 7
push eax
neg al
xor al,ah
pop eax
sets cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5DF8
PDF8:
push eax
neg al
xor al,ah
pop eax
sets cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5DF9
PDF9:
push eax
neg al
xor al,ah
pop eax
sets cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5E00 - 5E07
PE00:
and ebx,byte 7
add byte[__dreg+ebx*4],byte 7
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5E10 - 5E17
PE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5E18 - 5E1F
PE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5E20 - 5E27
PE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5E28 - 5E2F
PE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5E30 - 5E37
PE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5E38
PE38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5E39
PE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5E40 - 5E47
PE40:
and ebx,byte 7
add word[__dreg+ebx*4],byte 7
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5E48 - 5E4F
PE48:
and ebx,byte 7
add dword[__areg+ebx*4],byte 7
sub edi,byte 4
jmp execend
; Opcodes 5E50 - 5E57
PE50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5E58 - 5E5F
PE58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5E60 - 5E67
PE60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5E68 - 5E6F
PE68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5E70 - 5E77
PE70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5E78
PE78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5E79
PE79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5E80 - 5E87
PE80:
and ebx,byte 7
add dword[__dreg+ebx*4],byte 7
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5E88 - 5E8F
PE88:
and ebx,byte 7
add dword[__areg+ebx*4],byte 7
sub edi,byte 8
jmp execend
; Opcodes 5E90 - 5E97
PE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5E98 - 5E9F
PE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 5EA0 - 5EA7
PEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 5EA8 - 5EAF
PEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 5EB0 - 5EB7
PEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 5EB8
PEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 5EB9
PEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 5EC0 - 5EC7
PEC0:
and ebx,byte 7
xor ecx,ecx
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 5EC8 - 5ECF
PEC8:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
js near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 5ED0 - 5ED7
PED0:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5ED8 - 5EDF
PED8:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5EE0 - 5EE7
PEE0:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5EE8 - 5EEF
PEE8:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5EF0 - 5EF7
PEF0:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5EF8
PEF8:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5EF9
PEF9:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
setns cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5F00 - 5F07
PF00:
and ebx,byte 7
sub byte[__dreg+ebx*4],byte 7
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5F10 - 5F17
PF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5F18 - 5F1F
PF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5F20 - 5F27
PF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5F28 - 5F2F
PF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5F30 - 5F37
PF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5F38
PF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5F39
PF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,byte 7
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 5F40 - 5F47
PF40:
and ebx,byte 7
sub word[__dreg+ebx*4],byte 7
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 5F48 - 5F4F
PF48:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 7
sub edi,byte 8
jmp execend
; Opcodes 5F50 - 5F57
PF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 5F58 - 5F5F
PF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5F60 - 5F67
PF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5F68 - 5F6F
PF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 5F70 - 5F77
PF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 5F78
PF78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 5F79
PF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,byte 7
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 5F80 - 5F87
PF80:
and ebx,byte 7
sub dword[__dreg+ebx*4],byte 7
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 5F88 - 5F8F
PF88:
and ebx,byte 7
sub dword[__areg+ebx*4],byte 7
sub edi,byte 8
jmp execend
; Opcodes 5F90 - 5F97
PF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 5F98 - 5F9F
PF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 5FA0 - 5FA7
PFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 5FA8 - 5FAF
PFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 5FB0 - 5FB7
PFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 5FB8
PFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 5FB9
PFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,byte 7
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 5FC0 - 5FC7
PFC0:
and ebx,byte 7
xor ecx,ecx
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
sub edi,ecx
sub edi,ecx
neg cl
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes 5FC8 - 5FCF
PFC8:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
jns near r_dbra
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 5FD0 - 5FD7
PFD0:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 5FD8 - 5FDF
PFD8:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
neg cl
mov edx,[__areg+ebx*4]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 5FE0 - 5FE7
PFE0:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
neg cl
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 5FE8 - 5FEF
PFE8:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
neg cl
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 5FF0 - 5FF7
PFF0:
and ebx,byte 7
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
neg cl
call decode_ext
add edx,[__areg+ebx*4]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 5FF8
PFF8:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
neg cl
movsx edx,word[esi]
add esi,byte 2
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 5FF9
PFF9:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
sets cl
neg cl
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call writememorybyte
sub edi,byte 20
jmp execend
; Opcode 6000
Q000:
r_bra_w:
movsx ebx,word[esi]
add esi,ebx
xor ebx,ebx
sub edi,byte 10
jmp execend
; Opcodes 6001 - 60FF
Q001:
r_bra_b:
movsx ebx,bl
add esi,ebx
xor ebx,ebx
sub edi,byte 10
jmp execend
; Opcode 6100
Q100:
movsx ebx,word[esi]
mov ecx,esi
add ecx,byte 2
sub ecx,ebp
add esi,ebx
xor ebx,ebx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcodes 6101 - 61FF
Q101:
movsx ebx,bl
mov ecx,esi
sub ecx,ebp
add esi,ebx
xor ebx,ebx
mov edx,[__areg+28]
sub edx,byte 4
call writememorydword
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcode 6200
Q200:
test ah,41h
jz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6201 - 62FF
Q201:
test ah,41h
jz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6300
Q300:
test ah,41h
jnz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6301 - 63FF
Q301:
test ah,41h
jnz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6400
Q400:
test ah,1
jz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6401 - 64FF
Q401:
test ah,1
jz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6500
Q500:
test ah,1
jnz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6501 - 65FF
Q501:
test ah,1
jnz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6600
Q600:
test ah,40h
jz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6601 - 66FF
Q601:
test ah,40h
jz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6700
Q700:
test ah,40h
jnz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6701 - 67FF
Q701:
test ah,40h
jnz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6800
Q800:
test al,1
jz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6801 - 68FF
Q801:
test al,1
jz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6900
Q900:
test al,1
jnz near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6901 - 69FF
Q901:
test al,1
jnz near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6A00
QA00:
or ah,ah
jns near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6A01 - 6AFF
QA01:
or ah,ah
jns near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6B00
QB00:
or ah,ah
js near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6B01 - 6BFF
QB01:
or ah,ah
js near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6C00
QC00:
push eax
neg al
xor al,ah
pop eax
jns near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6C01 - 6CFF
QC01:
push eax
neg al
xor al,ah
pop eax
jns near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6D00
QD00:
push eax
neg al
xor al,ah
pop eax
js near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6D01 - 6DFF
QD01:
push eax
neg al
xor al,ah
pop eax
js near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6E00
QE00:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
jns near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6E01 - 6EFF
QE01:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
jns near r_bra_b
sub edi,byte 8
jmp execend
; Opcode 6F00
QF00:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
js near r_bra_w
add esi,byte 2
sub edi,byte 12
jmp execend
; Opcodes 6F01 - 6FFF
QF01:
push eax
neg al
xor al,ah
add ah,ah
or al,ah
pop eax
js near r_bra_b
sub edi,byte 8
jmp execend
; Opcodes 7000 - 70FF
R000:
movsx ecx,bl
mov [__dreg+0],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 7200 - 72FF
R200:
movsx ecx,bl
mov [__dreg+4],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 7400 - 74FF
R400:
movsx ecx,bl
mov [__dreg+8],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 7600 - 76FF
R600:
movsx ecx,bl
mov [__dreg+12],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 7800 - 78FF
R800:
movsx ecx,bl
mov [__dreg+16],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 7A00 - 7AFF
RA00:
movsx ecx,bl
mov [__dreg+20],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 7C00 - 7CFF
RC00:
movsx ecx,bl
mov [__dreg+24],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 7E00 - 7EFF
RE00:
movsx ecx,bl
mov [__dreg+28],ecx
test cl,cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8000 - 8007
S000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8010 - 8017
S010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8018 - 801F
S018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8020 - 8027
S020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8028 - 802F
S028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8030 - 8037
S030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8038
S038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8039
S039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 803A
S03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 803B
S03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 803C
S03C:
mov cx,[esi]
add esi,byte 2
or [__dreg+0],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8040 - 8047
S040:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8050 - 8057
S050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8058 - 805F
S058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8060 - 8067
S060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8068 - 806F
S068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8070 - 8077
S070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8078
S078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8079
S079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 807A
S07A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 807B
S07B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 807C
S07C:
mov cx,[esi]
add esi,byte 2
or [__dreg+0],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8080 - 8087
S080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8090 - 8097
S090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8098 - 809F
S098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 80A0 - 80A7
S0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 80A8 - 80AF
S0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 80B0 - 80B7
S0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 80B8
S0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 80B9
S0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 80BA
S0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 80BB
S0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 80BC
S0BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 80C0 - 80C7
S0C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln874
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln874:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln875
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,133
jmp execend
ln875:
mov ax,1
sub edi,133
jmp execend
; Opcodes 80D0 - 80D7
S0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln876
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln876:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln877
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,137
jmp execend
ln877:
mov ax,1
sub edi,137
jmp execend
; Opcodes 80D8 - 80DF
S0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln878
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln878:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln879
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,137
jmp execend
ln879:
mov ax,1
sub edi,137
jmp execend
; Opcodes 80E0 - 80E7
S0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln880
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln880:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln881
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,139
jmp execend
ln881:
mov ax,1
sub edi,139
jmp execend
; Opcodes 80E8 - 80EF
S0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln882
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln882:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln883
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,141
jmp execend
ln883:
mov ax,1
sub edi,141
jmp execend
; Opcodes 80F0 - 80F7
S0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln884
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln884:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln885
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,143
jmp execend
ln885:
mov ax,1
sub edi,143
jmp execend
; Opcode 80F8
S0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln886
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln886:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln887
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,141
jmp execend
ln887:
mov ax,1
sub edi,141
jmp execend
; Opcode 80F9
S0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln888
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln888:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln889
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,145
jmp execend
ln889:
mov ax,1
sub edi,145
jmp execend
; Opcode 80FA
S0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln890
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln890:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln891
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,141
jmp execend
ln891:
mov ax,1
sub edi,141
jmp execend
; Opcode 80FB
S0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln892
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln892:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln893
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,143
jmp execend
ln893:
mov ax,1
sub edi,143
jmp execend
; Opcode 80FC
S0FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln894
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln894:
and ecx,0FFFFh
mov eax,[__dreg+0]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln895
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,137
jmp execend
ln895:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8100 - 8107
S100:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+0],al
lahf
mov al,0
setc [__xflag]
jnz short ln896
or ch,0BFh
and ah,ch
ln896:
sub edi,byte 6
jmp execend
; Opcodes 8108 - 810F
S108:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln897
or ch,0BFh
and ah,ch
ln897:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+0],edx
sub edi,byte 18
jmp execend
; Opcodes 8110 - 8117
S110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8118 - 811F
S118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8120 - 8127
S120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8128 - 812F
S128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8130 - 8137
S130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8138
S138:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8139
S139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8150 - 8157
S150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8158 - 815F
S158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+0]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8160 - 8167
S160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+0]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8168 - 816F
S168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8170 - 8177
S170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8178
S178:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8179
S179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8190 - 8197
S190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8198 - 819F
S198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 81A0 - 81A7
S1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 81A8 - 81AF
S1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 81B0 - 81B7
S1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 81B8
S1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 81B9
S1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 81C0 - 81C7
S1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln898
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln898:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln900
inc ecx
jne short ln899
ln900:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,150
jmp execend
ln899:
mov ax,1
sub edi,150
jmp execend
; Opcodes 81D0 - 81D7
S1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln901
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln901:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln903
inc ecx
jne short ln902
ln903:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,154
jmp execend
ln902:
mov ax,1
sub edi,154
jmp execend
; Opcodes 81D8 - 81DF
S1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln904
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln904:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln906
inc ecx
jne short ln905
ln906:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,154
jmp execend
ln905:
mov ax,1
sub edi,154
jmp execend
; Opcodes 81E0 - 81E7
S1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln907
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln907:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln909
inc ecx
jne short ln908
ln909:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,156
jmp execend
ln908:
mov ax,1
sub edi,156
jmp execend
; Opcodes 81E8 - 81EF
S1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln910
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln910:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln912
inc ecx
jne short ln911
ln912:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,158
jmp execend
ln911:
mov ax,1
sub edi,158
jmp execend
; Opcodes 81F0 - 81F7
S1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln913
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln913:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln915
inc ecx
jne short ln914
ln915:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,160
jmp execend
ln914:
mov ax,1
sub edi,160
jmp execend
; Opcode 81F8
S1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln916
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln916:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln918
inc ecx
jne short ln917
ln918:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,158
jmp execend
ln917:
mov ax,1
sub edi,158
jmp execend
; Opcode 81F9
S1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln919
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln919:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln921
inc ecx
jne short ln920
ln921:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,162
jmp execend
ln920:
mov ax,1
sub edi,162
jmp execend
; Opcode 81FA
S1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln922
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln922:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln924
inc ecx
jne short ln923
ln924:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,158
jmp execend
ln923:
mov ax,1
sub edi,158
jmp execend
; Opcode 81FB
S1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln925
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln925:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln927
inc ecx
jne short ln926
ln927:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,160
jmp execend
ln926:
mov ax,1
sub edi,160
jmp execend
; Opcode 81FC
S1FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln928
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln928:
movsx ecx,cx
mov eax,[__dreg+0]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln930
inc ecx
jne short ln929
ln930:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+0],edx
sub edi,154
jmp execend
ln929:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8200 - 8207
S200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8210 - 8217
S210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8218 - 821F
S218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8220 - 8227
S220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8228 - 822F
S228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8230 - 8237
S230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8238
S238:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8239
S239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 823A
S23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 823B
S23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 823C
S23C:
mov cx,[esi]
add esi,byte 2
or [__dreg+4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8240 - 8247
S240:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8250 - 8257
S250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8258 - 825F
S258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8260 - 8267
S260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8268 - 826F
S268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8270 - 8277
S270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8278
S278:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8279
S279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 827A
S27A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 827B
S27B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 827C
S27C:
mov cx,[esi]
add esi,byte 2
or [__dreg+4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8280 - 8287
S280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8290 - 8297
S290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8298 - 829F
S298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 82A0 - 82A7
S2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 82A8 - 82AF
S2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 82B0 - 82B7
S2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 82B8
S2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 82B9
S2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 82BA
S2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 82BB
S2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 82BC
S2BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 82C0 - 82C7
S2C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln931
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln931:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln932
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,133
jmp execend
ln932:
mov ax,1
sub edi,133
jmp execend
; Opcodes 82D0 - 82D7
S2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln933
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln933:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln934
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,137
jmp execend
ln934:
mov ax,1
sub edi,137
jmp execend
; Opcodes 82D8 - 82DF
S2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln935
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln935:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln936
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,137
jmp execend
ln936:
mov ax,1
sub edi,137
jmp execend
; Opcodes 82E0 - 82E7
S2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln937
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln937:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln938
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,139
jmp execend
ln938:
mov ax,1
sub edi,139
jmp execend
; Opcodes 82E8 - 82EF
S2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln939
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln939:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln940
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,141
jmp execend
ln940:
mov ax,1
sub edi,141
jmp execend
; Opcodes 82F0 - 82F7
S2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln941
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln941:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln942
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,143
jmp execend
ln942:
mov ax,1
sub edi,143
jmp execend
; Opcode 82F8
S2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln943
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln943:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln944
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,141
jmp execend
ln944:
mov ax,1
sub edi,141
jmp execend
; Opcode 82F9
S2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln945
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln945:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln946
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,145
jmp execend
ln946:
mov ax,1
sub edi,145
jmp execend
; Opcode 82FA
S2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln947
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln947:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln948
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,141
jmp execend
ln948:
mov ax,1
sub edi,141
jmp execend
; Opcode 82FB
S2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln949
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln949:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln950
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,143
jmp execend
ln950:
mov ax,1
sub edi,143
jmp execend
; Opcode 82FC
S2FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln951
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln951:
and ecx,0FFFFh
mov eax,[__dreg+4]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln952
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,137
jmp execend
ln952:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8300 - 8307
S300:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+4],al
lahf
mov al,0
setc [__xflag]
jnz short ln953
or ch,0BFh
and ah,ch
ln953:
sub edi,byte 6
jmp execend
; Opcodes 8308 - 830F
S308:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln954
or ch,0BFh
and ah,ch
ln954:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+4],edx
sub edi,byte 18
jmp execend
; Opcodes 8310 - 8317
S310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8318 - 831F
S318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8320 - 8327
S320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8328 - 832F
S328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8330 - 8337
S330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8338
S338:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8339
S339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8350 - 8357
S350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8358 - 835F
S358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+4]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8360 - 8367
S360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+4]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8368 - 836F
S368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8370 - 8377
S370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8378
S378:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8379
S379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8390 - 8397
S390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8398 - 839F
S398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 83A0 - 83A7
S3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 83A8 - 83AF
S3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 83B0 - 83B7
S3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 83B8
S3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 83B9
S3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 83C0 - 83C7
S3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln955
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln955:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln957
inc ecx
jne short ln956
ln957:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,150
jmp execend
ln956:
mov ax,1
sub edi,150
jmp execend
; Opcodes 83D0 - 83D7
S3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln958
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln958:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln960
inc ecx
jne short ln959
ln960:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,154
jmp execend
ln959:
mov ax,1
sub edi,154
jmp execend
; Opcodes 83D8 - 83DF
S3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln961
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln961:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln963
inc ecx
jne short ln962
ln963:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,154
jmp execend
ln962:
mov ax,1
sub edi,154
jmp execend
; Opcodes 83E0 - 83E7
S3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln964
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln964:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln966
inc ecx
jne short ln965
ln966:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,156
jmp execend
ln965:
mov ax,1
sub edi,156
jmp execend
; Opcodes 83E8 - 83EF
S3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln967
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln967:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln969
inc ecx
jne short ln968
ln969:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,158
jmp execend
ln968:
mov ax,1
sub edi,158
jmp execend
; Opcodes 83F0 - 83F7
S3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln970
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln970:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln972
inc ecx
jne short ln971
ln972:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,160
jmp execend
ln971:
mov ax,1
sub edi,160
jmp execend
; Opcode 83F8
S3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln973
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln973:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln975
inc ecx
jne short ln974
ln975:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,158
jmp execend
ln974:
mov ax,1
sub edi,158
jmp execend
; Opcode 83F9
S3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln976
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln976:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln978
inc ecx
jne short ln977
ln978:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,162
jmp execend
ln977:
mov ax,1
sub edi,162
jmp execend
; Opcode 83FA
S3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln979
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln979:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln981
inc ecx
jne short ln980
ln981:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,158
jmp execend
ln980:
mov ax,1
sub edi,158
jmp execend
; Opcode 83FB
S3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln982
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln982:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln984
inc ecx
jne short ln983
ln984:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,160
jmp execend
ln983:
mov ax,1
sub edi,160
jmp execend
; Opcode 83FC
S3FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln985
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln985:
movsx ecx,cx
mov eax,[__dreg+4]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln987
inc ecx
jne short ln986
ln987:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+4],edx
sub edi,154
jmp execend
ln986:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8400 - 8407
S400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8410 - 8417
S410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8418 - 841F
S418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8420 - 8427
S420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8428 - 842F
S428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8430 - 8437
S430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8438
S438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8439
S439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 843A
S43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 843B
S43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 843C
S43C:
mov cx,[esi]
add esi,byte 2
or [__dreg+8],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8440 - 8447
S440:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8450 - 8457
S450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8458 - 845F
S458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8460 - 8467
S460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8468 - 846F
S468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8470 - 8477
S470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8478
S478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8479
S479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 847A
S47A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 847B
S47B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 847C
S47C:
mov cx,[esi]
add esi,byte 2
or [__dreg+8],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8480 - 8487
S480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8490 - 8497
S490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8498 - 849F
S498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 84A0 - 84A7
S4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 84A8 - 84AF
S4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 84B0 - 84B7
S4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 84B8
S4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 84B9
S4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 84BA
S4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 84BB
S4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 84BC
S4BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 84C0 - 84C7
S4C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln988
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln988:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln989
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,133
jmp execend
ln989:
mov ax,1
sub edi,133
jmp execend
; Opcodes 84D0 - 84D7
S4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln990
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln990:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln991
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,137
jmp execend
ln991:
mov ax,1
sub edi,137
jmp execend
; Opcodes 84D8 - 84DF
S4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln992
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln992:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln993
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,137
jmp execend
ln993:
mov ax,1
sub edi,137
jmp execend
; Opcodes 84E0 - 84E7
S4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln994
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln994:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln995
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,139
jmp execend
ln995:
mov ax,1
sub edi,139
jmp execend
; Opcodes 84E8 - 84EF
S4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln996
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln996:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln997
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,141
jmp execend
ln997:
mov ax,1
sub edi,141
jmp execend
; Opcodes 84F0 - 84F7
S4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln998
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln998:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln999
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,143
jmp execend
ln999:
mov ax,1
sub edi,143
jmp execend
; Opcode 84F8
S4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1000
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1000:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1001
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,141
jmp execend
ln1001:
mov ax,1
sub edi,141
jmp execend
; Opcode 84F9
S4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1002
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1002:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1003
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,145
jmp execend
ln1003:
mov ax,1
sub edi,145
jmp execend
; Opcode 84FA
S4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1004
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1004:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1005
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,141
jmp execend
ln1005:
mov ax,1
sub edi,141
jmp execend
; Opcode 84FB
S4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1006
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1006:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1007
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,143
jmp execend
ln1007:
mov ax,1
sub edi,143
jmp execend
; Opcode 84FC
S4FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1008
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1008:
and ecx,0FFFFh
mov eax,[__dreg+8]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1009
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,137
jmp execend
ln1009:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8500 - 8507
S500:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+8],al
lahf
mov al,0
setc [__xflag]
jnz short ln1010
or ch,0BFh
and ah,ch
ln1010:
sub edi,byte 6
jmp execend
; Opcodes 8508 - 850F
S508:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1011
or ch,0BFh
and ah,ch
ln1011:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+8],edx
sub edi,byte 18
jmp execend
; Opcodes 8510 - 8517
S510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8518 - 851F
S518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8520 - 8527
S520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8528 - 852F
S528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8530 - 8537
S530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8538
S538:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8539
S539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8550 - 8557
S550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8558 - 855F
S558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+8]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8560 - 8567
S560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+8]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8568 - 856F
S568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8570 - 8577
S570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8578
S578:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8579
S579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8590 - 8597
S590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8598 - 859F
S598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 85A0 - 85A7
S5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 85A8 - 85AF
S5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 85B0 - 85B7
S5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 85B8
S5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 85B9
S5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 85C0 - 85C7
S5C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1012
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1012:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1014
inc ecx
jne short ln1013
ln1014:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,150
jmp execend
ln1013:
mov ax,1
sub edi,150
jmp execend
; Opcodes 85D0 - 85D7
S5D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1015
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1015:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1017
inc ecx
jne short ln1016
ln1017:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,154
jmp execend
ln1016:
mov ax,1
sub edi,154
jmp execend
; Opcodes 85D8 - 85DF
S5D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1018
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1018:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1020
inc ecx
jne short ln1019
ln1020:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,154
jmp execend
ln1019:
mov ax,1
sub edi,154
jmp execend
; Opcodes 85E0 - 85E7
S5E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1021
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1021:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1023
inc ecx
jne short ln1022
ln1023:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,156
jmp execend
ln1022:
mov ax,1
sub edi,156
jmp execend
; Opcodes 85E8 - 85EF
S5E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1024
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1024:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1026
inc ecx
jne short ln1025
ln1026:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,158
jmp execend
ln1025:
mov ax,1
sub edi,158
jmp execend
; Opcodes 85F0 - 85F7
S5F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1027
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1027:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1029
inc ecx
jne short ln1028
ln1029:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,160
jmp execend
ln1028:
mov ax,1
sub edi,160
jmp execend
; Opcode 85F8
S5F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1030
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1030:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1032
inc ecx
jne short ln1031
ln1032:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,158
jmp execend
ln1031:
mov ax,1
sub edi,158
jmp execend
; Opcode 85F9
S5F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1033
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1033:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1035
inc ecx
jne short ln1034
ln1035:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,162
jmp execend
ln1034:
mov ax,1
sub edi,162
jmp execend
; Opcode 85FA
S5FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1036
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1036:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1038
inc ecx
jne short ln1037
ln1038:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,158
jmp execend
ln1037:
mov ax,1
sub edi,158
jmp execend
; Opcode 85FB
S5FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1039
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1039:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1041
inc ecx
jne short ln1040
ln1041:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,160
jmp execend
ln1040:
mov ax,1
sub edi,160
jmp execend
; Opcode 85FC
S5FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1042
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1042:
movsx ecx,cx
mov eax,[__dreg+8]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1044
inc ecx
jne short ln1043
ln1044:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+8],edx
sub edi,154
jmp execend
ln1043:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8600 - 8607
S600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8610 - 8617
S610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8618 - 861F
S618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8620 - 8627
S620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8628 - 862F
S628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8630 - 8637
S630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8638
S638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8639
S639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 863A
S63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 863B
S63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 863C
S63C:
mov cx,[esi]
add esi,byte 2
or [__dreg+12],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8640 - 8647
S640:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8650 - 8657
S650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8658 - 865F
S658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8660 - 8667
S660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8668 - 866F
S668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8670 - 8677
S670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8678
S678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8679
S679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 867A
S67A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 867B
S67B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 867C
S67C:
mov cx,[esi]
add esi,byte 2
or [__dreg+12],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8680 - 8687
S680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8690 - 8697
S690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8698 - 869F
S698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 86A0 - 86A7
S6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 86A8 - 86AF
S6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 86B0 - 86B7
S6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 86B8
S6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 86B9
S6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 86BA
S6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 86BB
S6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 86BC
S6BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 86C0 - 86C7
S6C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1045
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1045:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1046
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,133
jmp execend
ln1046:
mov ax,1
sub edi,133
jmp execend
; Opcodes 86D0 - 86D7
S6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1047
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1047:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1048
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,137
jmp execend
ln1048:
mov ax,1
sub edi,137
jmp execend
; Opcodes 86D8 - 86DF
S6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1049
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1049:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1050
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,137
jmp execend
ln1050:
mov ax,1
sub edi,137
jmp execend
; Opcodes 86E0 - 86E7
S6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1051
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1051:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1052
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,139
jmp execend
ln1052:
mov ax,1
sub edi,139
jmp execend
; Opcodes 86E8 - 86EF
S6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1053
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1053:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1054
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,141
jmp execend
ln1054:
mov ax,1
sub edi,141
jmp execend
; Opcodes 86F0 - 86F7
S6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1055
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1055:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1056
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,143
jmp execend
ln1056:
mov ax,1
sub edi,143
jmp execend
; Opcode 86F8
S6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1057
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1057:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1058
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,141
jmp execend
ln1058:
mov ax,1
sub edi,141
jmp execend
; Opcode 86F9
S6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1059
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1059:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1060
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,145
jmp execend
ln1060:
mov ax,1
sub edi,145
jmp execend
; Opcode 86FA
S6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1061
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1061:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1062
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,141
jmp execend
ln1062:
mov ax,1
sub edi,141
jmp execend
; Opcode 86FB
S6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1063
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1063:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1064
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,143
jmp execend
ln1064:
mov ax,1
sub edi,143
jmp execend
; Opcode 86FC
S6FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1065
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1065:
and ecx,0FFFFh
mov eax,[__dreg+12]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1066
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,137
jmp execend
ln1066:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8700 - 8707
S700:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+12],al
lahf
mov al,0
setc [__xflag]
jnz short ln1067
or ch,0BFh
and ah,ch
ln1067:
sub edi,byte 6
jmp execend
; Opcodes 8708 - 870F
S708:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1068
or ch,0BFh
and ah,ch
ln1068:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+12],edx
sub edi,byte 18
jmp execend
; Opcodes 8710 - 8717
S710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8718 - 871F
S718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8720 - 8727
S720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8728 - 872F
S728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8730 - 8737
S730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8738
S738:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8739
S739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8750 - 8757
S750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8758 - 875F
S758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+12]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8760 - 8767
S760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+12]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8768 - 876F
S768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8770 - 8777
S770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8778
S778:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8779
S779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8790 - 8797
S790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8798 - 879F
S798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 87A0 - 87A7
S7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 87A8 - 87AF
S7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 87B0 - 87B7
S7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 87B8
S7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 87B9
S7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 87C0 - 87C7
S7C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1069
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1069:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1071
inc ecx
jne short ln1070
ln1071:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,150
jmp execend
ln1070:
mov ax,1
sub edi,150
jmp execend
; Opcodes 87D0 - 87D7
S7D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1072
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1072:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1074
inc ecx
jne short ln1073
ln1074:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,154
jmp execend
ln1073:
mov ax,1
sub edi,154
jmp execend
; Opcodes 87D8 - 87DF
S7D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1075
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1075:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1077
inc ecx
jne short ln1076
ln1077:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,154
jmp execend
ln1076:
mov ax,1
sub edi,154
jmp execend
; Opcodes 87E0 - 87E7
S7E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1078
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1078:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1080
inc ecx
jne short ln1079
ln1080:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,156
jmp execend
ln1079:
mov ax,1
sub edi,156
jmp execend
; Opcodes 87E8 - 87EF
S7E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1081
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1081:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1083
inc ecx
jne short ln1082
ln1083:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,158
jmp execend
ln1082:
mov ax,1
sub edi,158
jmp execend
; Opcodes 87F0 - 87F7
S7F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1084
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1084:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1086
inc ecx
jne short ln1085
ln1086:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,160
jmp execend
ln1085:
mov ax,1
sub edi,160
jmp execend
; Opcode 87F8
S7F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1087
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1087:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1089
inc ecx
jne short ln1088
ln1089:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,158
jmp execend
ln1088:
mov ax,1
sub edi,158
jmp execend
; Opcode 87F9
S7F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1090
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1090:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1092
inc ecx
jne short ln1091
ln1092:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,162
jmp execend
ln1091:
mov ax,1
sub edi,162
jmp execend
; Opcode 87FA
S7FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1093
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1093:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1095
inc ecx
jne short ln1094
ln1095:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,158
jmp execend
ln1094:
mov ax,1
sub edi,158
jmp execend
; Opcode 87FB
S7FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1096
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1096:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1098
inc ecx
jne short ln1097
ln1098:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,160
jmp execend
ln1097:
mov ax,1
sub edi,160
jmp execend
; Opcode 87FC
S7FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1099
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1099:
movsx ecx,cx
mov eax,[__dreg+12]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1101
inc ecx
jne short ln1100
ln1101:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+12],edx
sub edi,154
jmp execend
ln1100:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8800 - 8807
S800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8810 - 8817
S810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8818 - 881F
S818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8820 - 8827
S820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8828 - 882F
S828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8830 - 8837
S830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8838
S838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8839
S839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 883A
S83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 883B
S83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 883C
S83C:
mov cx,[esi]
add esi,byte 2
or [__dreg+16],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8840 - 8847
S840:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8850 - 8857
S850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8858 - 885F
S858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8860 - 8867
S860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8868 - 886F
S868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8870 - 8877
S870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8878
S878:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8879
S879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 887A
S87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 887B
S87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 887C
S87C:
mov cx,[esi]
add esi,byte 2
or [__dreg+16],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8880 - 8887
S880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8890 - 8897
S890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8898 - 889F
S898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 88A0 - 88A7
S8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 88A8 - 88AF
S8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 88B0 - 88B7
S8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 88B8
S8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 88B9
S8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 88BA
S8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 88BB
S8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 88BC
S8BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 88C0 - 88C7
S8C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1102
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1102:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1103
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,133
jmp execend
ln1103:
mov ax,1
sub edi,133
jmp execend
; Opcodes 88D0 - 88D7
S8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1104
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1104:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1105
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,137
jmp execend
ln1105:
mov ax,1
sub edi,137
jmp execend
; Opcodes 88D8 - 88DF
S8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1106
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1106:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1107
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,137
jmp execend
ln1107:
mov ax,1
sub edi,137
jmp execend
; Opcodes 88E0 - 88E7
S8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1108
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1108:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1109
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,139
jmp execend
ln1109:
mov ax,1
sub edi,139
jmp execend
; Opcodes 88E8 - 88EF
S8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1110
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1110:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1111
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,141
jmp execend
ln1111:
mov ax,1
sub edi,141
jmp execend
; Opcodes 88F0 - 88F7
S8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1112
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1112:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1113
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,143
jmp execend
ln1113:
mov ax,1
sub edi,143
jmp execend
; Opcode 88F8
S8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1114
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1114:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1115
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,141
jmp execend
ln1115:
mov ax,1
sub edi,141
jmp execend
; Opcode 88F9
S8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1116
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1116:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1117
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,145
jmp execend
ln1117:
mov ax,1
sub edi,145
jmp execend
; Opcode 88FA
S8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1118
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1118:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1119
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,141
jmp execend
ln1119:
mov ax,1
sub edi,141
jmp execend
; Opcode 88FB
S8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1120
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1120:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1121
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,143
jmp execend
ln1121:
mov ax,1
sub edi,143
jmp execend
; Opcode 88FC
S8FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1122
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1122:
and ecx,0FFFFh
mov eax,[__dreg+16]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1123
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,137
jmp execend
ln1123:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8900 - 8907
S900:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+16],al
lahf
mov al,0
setc [__xflag]
jnz short ln1124
or ch,0BFh
and ah,ch
ln1124:
sub edi,byte 6
jmp execend
; Opcodes 8908 - 890F
S908:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1125
or ch,0BFh
and ah,ch
ln1125:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+16],edx
sub edi,byte 18
jmp execend
; Opcodes 8910 - 8917
S910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8918 - 891F
S918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8920 - 8927
S920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8928 - 892F
S928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8930 - 8937
S930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8938
S938:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8939
S939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8950 - 8957
S950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8958 - 895F
S958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+16]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8960 - 8967
S960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+16]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8968 - 896F
S968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8970 - 8977
S970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8978
S978:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8979
S979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8990 - 8997
S990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8998 - 899F
S998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 89A0 - 89A7
S9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 89A8 - 89AF
S9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 89B0 - 89B7
S9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 89B8
S9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 89B9
S9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 89C0 - 89C7
S9C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1126
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1126:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1128
inc ecx
jne short ln1127
ln1128:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,150
jmp execend
ln1127:
mov ax,1
sub edi,150
jmp execend
; Opcodes 89D0 - 89D7
S9D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1129
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1129:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1131
inc ecx
jne short ln1130
ln1131:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,154
jmp execend
ln1130:
mov ax,1
sub edi,154
jmp execend
; Opcodes 89D8 - 89DF
S9D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1132
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1132:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1134
inc ecx
jne short ln1133
ln1134:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,154
jmp execend
ln1133:
mov ax,1
sub edi,154
jmp execend
; Opcodes 89E0 - 89E7
S9E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1135
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1135:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1137
inc ecx
jne short ln1136
ln1137:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,156
jmp execend
ln1136:
mov ax,1
sub edi,156
jmp execend
; Opcodes 89E8 - 89EF
S9E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1138
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1138:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1140
inc ecx
jne short ln1139
ln1140:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,158
jmp execend
ln1139:
mov ax,1
sub edi,158
jmp execend
; Opcodes 89F0 - 89F7
S9F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1141
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1141:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1143
inc ecx
jne short ln1142
ln1143:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,160
jmp execend
ln1142:
mov ax,1
sub edi,160
jmp execend
; Opcode 89F8
S9F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1144
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1144:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1146
inc ecx
jne short ln1145
ln1146:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,158
jmp execend
ln1145:
mov ax,1
sub edi,158
jmp execend
; Opcode 89F9
S9F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1147
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1147:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1149
inc ecx
jne short ln1148
ln1149:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,162
jmp execend
ln1148:
mov ax,1
sub edi,162
jmp execend
; Opcode 89FA
S9FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1150
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1150:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1152
inc ecx
jne short ln1151
ln1152:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,158
jmp execend
ln1151:
mov ax,1
sub edi,158
jmp execend
; Opcode 89FB
S9FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1153
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1153:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1155
inc ecx
jne short ln1154
ln1155:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,160
jmp execend
ln1154:
mov ax,1
sub edi,160
jmp execend
; Opcode 89FC
S9FC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1156
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1156:
movsx ecx,cx
mov eax,[__dreg+16]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1158
inc ecx
jne short ln1157
ln1158:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+16],edx
sub edi,154
jmp execend
ln1157:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8A00 - 8A07
SA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8A10 - 8A17
SA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8A18 - 8A1F
SA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8A20 - 8A27
SA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8A28 - 8A2F
SA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8A30 - 8A37
SA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8A38
SA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8A39
SA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 8A3A
SA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8A3B
SA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8A3C
SA3C:
mov cx,[esi]
add esi,byte 2
or [__dreg+20],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8A40 - 8A47
SA40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8A50 - 8A57
SA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8A58 - 8A5F
SA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8A60 - 8A67
SA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8A68 - 8A6F
SA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8A70 - 8A77
SA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8A78
SA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8A79
SA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 8A7A
SA7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8A7B
SA7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8A7C
SA7C:
mov cx,[esi]
add esi,byte 2
or [__dreg+20],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8A80 - 8A87
SA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8A90 - 8A97
SA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8A98 - 8A9F
SA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8AA0 - 8AA7
SAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 8AA8 - 8AAF
SAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 8AB0 - 8AB7
SAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 8AB8
SAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 8AB9
SAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 8ABA
SABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 8ABB
SABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 8ABC
SABC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 8AC0 - 8AC7
SAC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1159
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1159:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1160
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,133
jmp execend
ln1160:
mov ax,1
sub edi,133
jmp execend
; Opcodes 8AD0 - 8AD7
SAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1161
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1161:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1162
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,137
jmp execend
ln1162:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8AD8 - 8ADF
SAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1163
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1163:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1164
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,137
jmp execend
ln1164:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8AE0 - 8AE7
SAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1165
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1165:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1166
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,139
jmp execend
ln1166:
mov ax,1
sub edi,139
jmp execend
; Opcodes 8AE8 - 8AEF
SAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1167
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1167:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1168
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,141
jmp execend
ln1168:
mov ax,1
sub edi,141
jmp execend
; Opcodes 8AF0 - 8AF7
SAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1169
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1169:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1170
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,143
jmp execend
ln1170:
mov ax,1
sub edi,143
jmp execend
; Opcode 8AF8
SAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1171
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1171:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1172
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,141
jmp execend
ln1172:
mov ax,1
sub edi,141
jmp execend
; Opcode 8AF9
SAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1173
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1173:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1174
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,145
jmp execend
ln1174:
mov ax,1
sub edi,145
jmp execend
; Opcode 8AFA
SAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1175
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1175:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1176
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,141
jmp execend
ln1176:
mov ax,1
sub edi,141
jmp execend
; Opcode 8AFB
SAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1177
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1177:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1178
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,143
jmp execend
ln1178:
mov ax,1
sub edi,143
jmp execend
; Opcode 8AFC
SAFC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1179
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1179:
and ecx,0FFFFh
mov eax,[__dreg+20]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1180
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,137
jmp execend
ln1180:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8B00 - 8B07
SB00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+20],al
lahf
mov al,0
setc [__xflag]
jnz short ln1181
or ch,0BFh
and ah,ch
ln1181:
sub edi,byte 6
jmp execend
; Opcodes 8B08 - 8B0F
SB08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1182
or ch,0BFh
and ah,ch
ln1182:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+20],edx
sub edi,byte 18
jmp execend
; Opcodes 8B10 - 8B17
SB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8B18 - 8B1F
SB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8B20 - 8B27
SB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8B28 - 8B2F
SB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8B30 - 8B37
SB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8B38
SB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8B39
SB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8B50 - 8B57
SB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8B58 - 8B5F
SB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+20]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8B60 - 8B67
SB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+20]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8B68 - 8B6F
SB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8B70 - 8B77
SB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8B78
SB78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8B79
SB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8B90 - 8B97
SB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8B98 - 8B9F
SB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 8BA0 - 8BA7
SBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 8BA8 - 8BAF
SBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 8BB0 - 8BB7
SBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 8BB8
SBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 8BB9
SBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 8BC0 - 8BC7
SBC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1183
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1183:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1185
inc ecx
jne short ln1184
ln1185:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,150
jmp execend
ln1184:
mov ax,1
sub edi,150
jmp execend
; Opcodes 8BD0 - 8BD7
SBD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1186
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1186:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1188
inc ecx
jne short ln1187
ln1188:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,154
jmp execend
ln1187:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8BD8 - 8BDF
SBD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1189
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1189:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1191
inc ecx
jne short ln1190
ln1191:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,154
jmp execend
ln1190:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8BE0 - 8BE7
SBE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1192
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1192:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1194
inc ecx
jne short ln1193
ln1194:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,156
jmp execend
ln1193:
mov ax,1
sub edi,156
jmp execend
; Opcodes 8BE8 - 8BEF
SBE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1195
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1195:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1197
inc ecx
jne short ln1196
ln1197:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,158
jmp execend
ln1196:
mov ax,1
sub edi,158
jmp execend
; Opcodes 8BF0 - 8BF7
SBF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1198
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1198:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1200
inc ecx
jne short ln1199
ln1200:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,160
jmp execend
ln1199:
mov ax,1
sub edi,160
jmp execend
; Opcode 8BF8
SBF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1201
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1201:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1203
inc ecx
jne short ln1202
ln1203:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,158
jmp execend
ln1202:
mov ax,1
sub edi,158
jmp execend
; Opcode 8BF9
SBF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1204
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1204:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1206
inc ecx
jne short ln1205
ln1206:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,162
jmp execend
ln1205:
mov ax,1
sub edi,162
jmp execend
; Opcode 8BFA
SBFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1207
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1207:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1209
inc ecx
jne short ln1208
ln1209:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,158
jmp execend
ln1208:
mov ax,1
sub edi,158
jmp execend
; Opcode 8BFB
SBFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1210
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1210:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1212
inc ecx
jne short ln1211
ln1212:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,160
jmp execend
ln1211:
mov ax,1
sub edi,160
jmp execend
; Opcode 8BFC
SBFC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1213
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1213:
movsx ecx,cx
mov eax,[__dreg+20]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1215
inc ecx
jne short ln1214
ln1215:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+20],edx
sub edi,154
jmp execend
ln1214:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8C00 - 8C07
SC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8C10 - 8C17
SC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8C18 - 8C1F
SC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8C20 - 8C27
SC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8C28 - 8C2F
SC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8C30 - 8C37
SC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8C38
SC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8C39
SC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 8C3A
SC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8C3B
SC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8C3C
SC3C:
mov cx,[esi]
add esi,byte 2
or [__dreg+24],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8C40 - 8C47
SC40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8C50 - 8C57
SC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8C58 - 8C5F
SC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8C60 - 8C67
SC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8C68 - 8C6F
SC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8C70 - 8C77
SC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8C78
SC78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8C79
SC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 8C7A
SC7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8C7B
SC7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8C7C
SC7C:
mov cx,[esi]
add esi,byte 2
or [__dreg+24],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8C80 - 8C87
SC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8C90 - 8C97
SC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8C98 - 8C9F
SC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8CA0 - 8CA7
SCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 8CA8 - 8CAF
SCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 8CB0 - 8CB7
SCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 8CB8
SCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 8CB9
SCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 8CBA
SCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 8CBB
SCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 8CBC
SCBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 8CC0 - 8CC7
SCC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1216
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1216:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1217
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,133
jmp execend
ln1217:
mov ax,1
sub edi,133
jmp execend
; Opcodes 8CD0 - 8CD7
SCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1218
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1218:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1219
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,137
jmp execend
ln1219:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8CD8 - 8CDF
SCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1220
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1220:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1221
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,137
jmp execend
ln1221:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8CE0 - 8CE7
SCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1222
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1222:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1223
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,139
jmp execend
ln1223:
mov ax,1
sub edi,139
jmp execend
; Opcodes 8CE8 - 8CEF
SCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1224
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1224:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1225
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,141
jmp execend
ln1225:
mov ax,1
sub edi,141
jmp execend
; Opcodes 8CF0 - 8CF7
SCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1226
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1226:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1227
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,143
jmp execend
ln1227:
mov ax,1
sub edi,143
jmp execend
; Opcode 8CF8
SCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1228
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1228:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1229
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,141
jmp execend
ln1229:
mov ax,1
sub edi,141
jmp execend
; Opcode 8CF9
SCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1230
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1230:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1231
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,145
jmp execend
ln1231:
mov ax,1
sub edi,145
jmp execend
; Opcode 8CFA
SCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1232
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1232:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1233
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,141
jmp execend
ln1233:
mov ax,1
sub edi,141
jmp execend
; Opcode 8CFB
SCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1234
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1234:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1235
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,143
jmp execend
ln1235:
mov ax,1
sub edi,143
jmp execend
; Opcode 8CFC
SCFC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1236
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1236:
and ecx,0FFFFh
mov eax,[__dreg+24]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1237
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,137
jmp execend
ln1237:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8D00 - 8D07
SD00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+24],al
lahf
mov al,0
setc [__xflag]
jnz short ln1238
or ch,0BFh
and ah,ch
ln1238:
sub edi,byte 6
jmp execend
; Opcodes 8D08 - 8D0F
SD08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1239
or ch,0BFh
and ah,ch
ln1239:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+24],edx
sub edi,byte 18
jmp execend
; Opcodes 8D10 - 8D17
SD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8D18 - 8D1F
SD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8D20 - 8D27
SD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8D28 - 8D2F
SD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8D30 - 8D37
SD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8D38
SD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8D39
SD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8D50 - 8D57
SD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8D58 - 8D5F
SD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+24]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8D60 - 8D67
SD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+24]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8D68 - 8D6F
SD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8D70 - 8D77
SD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8D78
SD78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8D79
SD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8D90 - 8D97
SD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8D98 - 8D9F
SD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 8DA0 - 8DA7
SDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 8DA8 - 8DAF
SDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 8DB0 - 8DB7
SDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 8DB8
SDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 8DB9
SDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 8DC0 - 8DC7
SDC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1240
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1240:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1242
inc ecx
jne short ln1241
ln1242:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,150
jmp execend
ln1241:
mov ax,1
sub edi,150
jmp execend
; Opcodes 8DD0 - 8DD7
SDD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1243
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1243:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1245
inc ecx
jne short ln1244
ln1245:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,154
jmp execend
ln1244:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8DD8 - 8DDF
SDD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1246
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1246:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1248
inc ecx
jne short ln1247
ln1248:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,154
jmp execend
ln1247:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8DE0 - 8DE7
SDE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1249
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1249:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1251
inc ecx
jne short ln1250
ln1251:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,156
jmp execend
ln1250:
mov ax,1
sub edi,156
jmp execend
; Opcodes 8DE8 - 8DEF
SDE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1252
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1252:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1254
inc ecx
jne short ln1253
ln1254:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,158
jmp execend
ln1253:
mov ax,1
sub edi,158
jmp execend
; Opcodes 8DF0 - 8DF7
SDF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1255
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1255:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1257
inc ecx
jne short ln1256
ln1257:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,160
jmp execend
ln1256:
mov ax,1
sub edi,160
jmp execend
; Opcode 8DF8
SDF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1258
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1258:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1260
inc ecx
jne short ln1259
ln1260:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,158
jmp execend
ln1259:
mov ax,1
sub edi,158
jmp execend
; Opcode 8DF9
SDF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1261
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1261:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1263
inc ecx
jne short ln1262
ln1263:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,162
jmp execend
ln1262:
mov ax,1
sub edi,162
jmp execend
; Opcode 8DFA
SDFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1264
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1264:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1266
inc ecx
jne short ln1265
ln1266:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,158
jmp execend
ln1265:
mov ax,1
sub edi,158
jmp execend
; Opcode 8DFB
SDFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1267
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1267:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1269
inc ecx
jne short ln1268
ln1269:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,160
jmp execend
ln1268:
mov ax,1
sub edi,160
jmp execend
; Opcode 8DFC
SDFC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1270
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1270:
movsx ecx,cx
mov eax,[__dreg+24]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1272
inc ecx
jne short ln1271
ln1272:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+24],edx
sub edi,154
jmp execend
ln1271:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8E00 - 8E07
SE00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8E10 - 8E17
SE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8E18 - 8E1F
SE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8E20 - 8E27
SE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8E28 - 8E2F
SE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8E30 - 8E37
SE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8E38
SE38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8E39
SE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 8E3A
SE3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8E3B
SE3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8E3C
SE3C:
mov cx,[esi]
add esi,byte 2
or [__dreg+28],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8E40 - 8E47
SE40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes 8E50 - 8E57
SE50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8E58 - 8E5F
SE58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8E60 - 8E67
SE60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes 8E68 - 8E6F
SE68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes 8E70 - 8E77
SE70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8E78
SE78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8E79
SE79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode 8E7A
SE7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode 8E7B
SE7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode 8E7C
SE7C:
mov cx,[esi]
add esi,byte 2
or [__dreg+28],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8E80 - 8E87
SE80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes 8E90 - 8E97
SE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8E98 - 8E9F
SE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes 8EA0 - 8EA7
SEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 8EA8 - 8EAF
SEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes 8EB0 - 8EB7
SEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 8EB8
SEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 8EB9
SEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode 8EBA
SEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode 8EBB
SEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode 8EBC
SEBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
or [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes 8EC0 - 8EC7
SEC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1273
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1273:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1274
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,133
jmp execend
ln1274:
mov ax,1
sub edi,133
jmp execend
; Opcodes 8ED0 - 8ED7
SED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1275
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1275:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1276
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,137
jmp execend
ln1276:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8ED8 - 8EDF
SED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1277
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1277:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1278
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,137
jmp execend
ln1278:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8EE0 - 8EE7
SEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1279
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1279:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1280
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,139
jmp execend
ln1280:
mov ax,1
sub edi,139
jmp execend
; Opcodes 8EE8 - 8EEF
SEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1281
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1281:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1282
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,141
jmp execend
ln1282:
mov ax,1
sub edi,141
jmp execend
; Opcodes 8EF0 - 8EF7
SEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1283
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1283:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1284
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,143
jmp execend
ln1284:
mov ax,1
sub edi,143
jmp execend
; Opcode 8EF8
SEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1285
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1285:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1286
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,141
jmp execend
ln1286:
mov ax,1
sub edi,141
jmp execend
; Opcode 8EF9
SEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1287
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1287:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1288
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,145
jmp execend
ln1288:
mov ax,1
sub edi,145
jmp execend
; Opcode 8EFA
SEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1289
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1289:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1290
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,141
jmp execend
ln1290:
mov ax,1
sub edi,141
jmp execend
; Opcode 8EFB
SEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1291
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1291:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1292
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,143
jmp execend
ln1292:
mov ax,1
sub edi,143
jmp execend
; Opcode 8EFC
SEFC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1293
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1293:
and ecx,0FFFFh
mov eax,[__dreg+28]
xor edx,edx
div ecx
test eax,0FFFF0000h
jnz short ln1294
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,137
jmp execend
ln1294:
mov ax,1
sub edi,137
jmp execend
; Opcodes 8F00 - 8F07
SF00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
sbb al,[__dreg+ebx*4]
das
mov [__dreg+28],al
lahf
mov al,0
setc [__xflag]
jnz short ln1295
or ch,0BFh
and ah,ch
ln1295:
sub edi,byte 6
jmp execend
; Opcodes 8F08 - 8F0F
SF08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 2
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
das
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1296
or ch,0BFh
and ah,ch
ln1296:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcodes 8F10 - 8F17
SF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 8F18 - 8F1F
SF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8F20 - 8F27
SF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
or cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8F28 - 8F2F
SF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 8F30 - 8F37
SF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
or cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 8F38
SF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
or cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 8F39
SF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
or cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 8F50 - 8F57
SF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 8F58 - 8F5F
SF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+28]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 8F60 - 8F67
SF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
or cx,[__dreg+28]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 8F68 - 8F6F
SF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 8F70 - 8F77
SF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
or cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 8F78
SF78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
or cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 8F79
SF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
or cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 8F90 - 8F97
SF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 8F98 - 8F9F
SF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 8FA0 - 8FA7
SFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
or ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 8FA8 - 8FAF
SFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 8FB0 - 8FB7
SFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
or ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 8FB8
SFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
or ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 8FB9
SFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
or ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 8FC0 - 8FC7
SFC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
test cx,cx
jnz short ln1297
mov edx,14h
call group_2_exception
sub edi,byte 38
jmp execend
ln1297:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1299
inc ecx
jne short ln1298
ln1299:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,150
jmp execend
ln1298:
mov ax,1
sub edi,150
jmp execend
; Opcodes 8FD0 - 8FD7
SFD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1300
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1300:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1302
inc ecx
jne short ln1301
ln1302:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,154
jmp execend
ln1301:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8FD8 - 8FDF
SFD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1303
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1303:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1305
inc ecx
jne short ln1304
ln1305:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,154
jmp execend
ln1304:
mov ax,1
sub edi,154
jmp execend
; Opcodes 8FE0 - 8FE7
SFE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
test cx,cx
jnz short ln1306
mov edx,14h
call group_2_exception
sub edi,byte 44
jmp execend
ln1306:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1308
inc ecx
jne short ln1307
ln1308:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,156
jmp execend
ln1307:
mov ax,1
sub edi,156
jmp execend
; Opcodes 8FE8 - 8FEF
SFE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1309
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1309:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1311
inc ecx
jne short ln1310
ln1311:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,158
jmp execend
ln1310:
mov ax,1
sub edi,158
jmp execend
; Opcodes 8FF0 - 8FF7
SFF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
test cx,cx
jnz short ln1312
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1312:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1314
inc ecx
jne short ln1313
ln1314:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,160
jmp execend
ln1313:
mov ax,1
sub edi,160
jmp execend
; Opcode 8FF8
SFF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1315
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1315:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1317
inc ecx
jne short ln1316
ln1317:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,158
jmp execend
ln1316:
mov ax,1
sub edi,158
jmp execend
; Opcode 8FF9
SFF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
test cx,cx
jnz short ln1318
mov edx,14h
call group_2_exception
sub edi,byte 50
jmp execend
ln1318:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1320
inc ecx
jne short ln1319
ln1320:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,162
jmp execend
ln1319:
mov ax,1
sub edi,162
jmp execend
; Opcode 8FFA
SFFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
test cx,cx
jnz short ln1321
mov edx,14h
call group_2_exception
sub edi,byte 46
jmp execend
ln1321:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1323
inc ecx
jne short ln1322
ln1323:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,158
jmp execend
ln1322:
mov ax,1
sub edi,158
jmp execend
; Opcode 8FFB
SFFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
test cx,cx
jnz short ln1324
mov edx,14h
call group_2_exception
sub edi,byte 48
jmp execend
ln1324:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1326
inc ecx
jne short ln1325
ln1326:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,160
jmp execend
ln1325:
mov ax,1
sub edi,160
jmp execend
; Opcode 8FFC
SFFC:
mov cx,[esi]
add esi,byte 2
test cx,cx
jnz short ln1327
mov edx,14h
call group_2_exception
sub edi,byte 42
jmp execend
ln1327:
movsx ecx,cx
mov eax,[__dreg+28]
mov edx,eax
sar edx,31
idiv ecx
mov ecx,eax
sar cx,15
or ecx,ecx
je short ln1329
inc ecx
jne short ln1328
ln1329:
and eax,0FFFFh
shl edx,16
mov dx,ax
test dx,dx
lahf
mov al,0
mov [__dreg+28],edx
sub edi,154
jmp execend
ln1328:
mov ax,1
sub edi,154
jmp execend
; Opcodes 9000 - 9007
T000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9010 - 9017
T010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9018 - 901F
T018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9020 - 9027
T020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9028 - 902F
T028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9030 - 9037
T030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9038
T038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9039
T039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 903A
T03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 903B
T03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 903C
T03C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9040 - 9047
T040:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9048 - 904F
T048:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9050 - 9057
T050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9058 - 905F
T058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9060 - 9067
T060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9068 - 906F
T068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9070 - 9077
T070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9078
T078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9079
T079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 907A
T07A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 907B
T07B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 907C
T07C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9080 - 9087
T080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9088 - 908F
T088:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9090 - 9097
T090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9098 - 909F
T098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 90A0 - 90A7
T0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 90A8 - 90AF
T0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 90B0 - 90B7
T0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 90B8
T0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 90B9
T0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 90BA
T0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 90BB
T0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 90BC
T0BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 90C0 - 90C7
T0C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes 90C8 - 90CF
T0C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes 90D0 - 90D7
T0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes 90D8 - 90DF
T0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes 90E0 - 90E7
T0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcodes 90E8 - 90EF
T0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcodes 90F0 - 90F7
T0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode 90F8
T0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcode 90F9
T0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+0],ecx
sub edi,byte 20
jmp execend
; Opcode 90FA
T0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcode 90FB
T0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode 90FC
T0FC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes 9100 - 9107
T100:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
sbb al,[__dreg+ebx*4]
mov [__dreg+0],al
lahf
seto al
setc [__xflag]
jnz short ln1330
or ch,0BFh
and ah,ch
ln1330:
sub edi,byte 4
jmp execend
; Opcodes 9108 - 910F
T108:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1331
or ch,0BFh
and ah,ch
ln1331:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+0],edx
sub edi,byte 18
jmp execend
; Opcodes 9110 - 9117
T110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9118 - 911F
T118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9120 - 9127
T120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9128 - 912F
T128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9130 - 9137
T130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9138
T138:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9139
T139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9140 - 9147
T140:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
sbb ax,[__dreg+ebx*4]
mov [__dreg+0],ax
lahf
seto al
setc [__xflag]
jnz short ln1332
or ch,0BFh
and ah,ch
ln1332:
sub edi,byte 4
jmp execend
; Opcodes 9148 - 914F
T148:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1333
or ch,0BFh
and ah,ch
ln1333:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+0],edx
sub edi,byte 18
jmp execend
; Opcodes 9150 - 9157
T150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9158 - 915F
T158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9160 - 9167
T160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9168 - 916F
T168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9170 - 9177
T170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9178
T178:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9179
T179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9180 - 9187
T180:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
sbb eax,[__dreg+ebx*4]
mov [__dreg+0],eax
lahf
seto al
setc [__xflag]
jnz short ln1334
or ch,0BFh
and ah,ch
ln1334:
sub edi,byte 8
jmp execend
; Opcodes 9188 - 918F
T188:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1335
or ch,0BFh
and ah,ch
ln1335:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+0],edx
sub edi,byte 30
jmp execend
; Opcodes 9190 - 9197
T190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9198 - 919F
T198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 91A0 - 91A7
T1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 91A8 - 91AF
T1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 91B0 - 91B7
T1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 91B8
T1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 91B9
T1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 91C0 - 91C7
T1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes 91C8 - 91CF
T1C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes 91D0 - 91D7
T1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcodes 91D8 - 91DF
T1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcodes 91E0 - 91E7
T1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcodes 91E8 - 91EF
T1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcodes 91F0 - 91F7
T1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+0],ecx
sub edi,byte 20
jmp execend
; Opcode 91F8
T1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode 91F9
T1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+0],ecx
sub edi,byte 22
jmp execend
; Opcode 91FA
T1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode 91FB
T1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+0],ecx
sub edi,byte 20
jmp execend
; Opcode 91FC
T1FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcodes 9200 - 9207
T200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9210 - 9217
T210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9218 - 921F
T218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9220 - 9227
T220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9228 - 922F
T228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9230 - 9237
T230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9238
T238:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9239
T239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 923A
T23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 923B
T23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 923C
T23C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9240 - 9247
T240:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9248 - 924F
T248:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9250 - 9257
T250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9258 - 925F
T258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9260 - 9267
T260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9268 - 926F
T268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9270 - 9277
T270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9278
T278:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9279
T279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 927A
T27A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 927B
T27B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 927C
T27C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9280 - 9287
T280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9288 - 928F
T288:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9290 - 9297
T290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9298 - 929F
T298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 92A0 - 92A7
T2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 92A8 - 92AF
T2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 92B0 - 92B7
T2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 92B8
T2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 92B9
T2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 92BA
T2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 92BB
T2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 92BC
T2BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 92C0 - 92C7
T2C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes 92C8 - 92CF
T2C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes 92D0 - 92D7
T2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes 92D8 - 92DF
T2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes 92E0 - 92E7
T2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcodes 92E8 - 92EF
T2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcodes 92F0 - 92F7
T2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode 92F8
T2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcode 92F9
T2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+4],ecx
sub edi,byte 20
jmp execend
; Opcode 92FA
T2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcode 92FB
T2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode 92FC
T2FC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes 9300 - 9307
T300:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
sbb al,[__dreg+ebx*4]
mov [__dreg+4],al
lahf
seto al
setc [__xflag]
jnz short ln1336
or ch,0BFh
and ah,ch
ln1336:
sub edi,byte 4
jmp execend
; Opcodes 9308 - 930F
T308:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1337
or ch,0BFh
and ah,ch
ln1337:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+4],edx
sub edi,byte 18
jmp execend
; Opcodes 9310 - 9317
T310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9318 - 931F
T318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9320 - 9327
T320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9328 - 932F
T328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9330 - 9337
T330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9338
T338:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9339
T339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9340 - 9347
T340:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
sbb ax,[__dreg+ebx*4]
mov [__dreg+4],ax
lahf
seto al
setc [__xflag]
jnz short ln1338
or ch,0BFh
and ah,ch
ln1338:
sub edi,byte 4
jmp execend
; Opcodes 9348 - 934F
T348:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1339
or ch,0BFh
and ah,ch
ln1339:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+4],edx
sub edi,byte 18
jmp execend
; Opcodes 9350 - 9357
T350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9358 - 935F
T358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9360 - 9367
T360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9368 - 936F
T368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9370 - 9377
T370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9378
T378:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9379
T379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9380 - 9387
T380:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
sbb eax,[__dreg+ebx*4]
mov [__dreg+4],eax
lahf
seto al
setc [__xflag]
jnz short ln1340
or ch,0BFh
and ah,ch
ln1340:
sub edi,byte 8
jmp execend
; Opcodes 9388 - 938F
T388:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1341
or ch,0BFh
and ah,ch
ln1341:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+4],edx
sub edi,byte 30
jmp execend
; Opcodes 9390 - 9397
T390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9398 - 939F
T398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 93A0 - 93A7
T3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 93A8 - 93AF
T3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 93B0 - 93B7
T3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 93B8
T3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 93B9
T3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 93C0 - 93C7
T3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes 93C8 - 93CF
T3C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes 93D0 - 93D7
T3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcodes 93D8 - 93DF
T3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcodes 93E0 - 93E7
T3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcodes 93E8 - 93EF
T3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcodes 93F0 - 93F7
T3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+4],ecx
sub edi,byte 20
jmp execend
; Opcode 93F8
T3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode 93F9
T3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+4],ecx
sub edi,byte 22
jmp execend
; Opcode 93FA
T3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode 93FB
T3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+4],ecx
sub edi,byte 20
jmp execend
; Opcode 93FC
T3FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcodes 9400 - 9407
T400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9410 - 9417
T410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9418 - 941F
T418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9420 - 9427
T420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9428 - 942F
T428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9430 - 9437
T430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9438
T438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9439
T439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 943A
T43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 943B
T43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 943C
T43C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9440 - 9447
T440:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9448 - 944F
T448:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9450 - 9457
T450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9458 - 945F
T458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9460 - 9467
T460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9468 - 946F
T468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9470 - 9477
T470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9478
T478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9479
T479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 947A
T47A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 947B
T47B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 947C
T47C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9480 - 9487
T480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9488 - 948F
T488:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9490 - 9497
T490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9498 - 949F
T498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 94A0 - 94A7
T4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 94A8 - 94AF
T4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 94B0 - 94B7
T4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 94B8
T4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 94B9
T4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 94BA
T4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 94BB
T4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 94BC
T4BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 94C0 - 94C7
T4C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes 94C8 - 94CF
T4C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes 94D0 - 94D7
T4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes 94D8 - 94DF
T4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes 94E0 - 94E7
T4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcodes 94E8 - 94EF
T4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcodes 94F0 - 94F7
T4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode 94F8
T4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcode 94F9
T4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+8],ecx
sub edi,byte 20
jmp execend
; Opcode 94FA
T4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcode 94FB
T4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode 94FC
T4FC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes 9500 - 9507
T500:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
sbb al,[__dreg+ebx*4]
mov [__dreg+8],al
lahf
seto al
setc [__xflag]
jnz short ln1342
or ch,0BFh
and ah,ch
ln1342:
sub edi,byte 4
jmp execend
; Opcodes 9508 - 950F
T508:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1343
or ch,0BFh
and ah,ch
ln1343:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+8],edx
sub edi,byte 18
jmp execend
; Opcodes 9510 - 9517
T510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9518 - 951F
T518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9520 - 9527
T520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9528 - 952F
T528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9530 - 9537
T530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9538
T538:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9539
T539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9540 - 9547
T540:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
sbb ax,[__dreg+ebx*4]
mov [__dreg+8],ax
lahf
seto al
setc [__xflag]
jnz short ln1344
or ch,0BFh
and ah,ch
ln1344:
sub edi,byte 4
jmp execend
; Opcodes 9548 - 954F
T548:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1345
or ch,0BFh
and ah,ch
ln1345:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+8],edx
sub edi,byte 18
jmp execend
; Opcodes 9550 - 9557
T550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9558 - 955F
T558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9560 - 9567
T560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9568 - 956F
T568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9570 - 9577
T570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9578
T578:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9579
T579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9580 - 9587
T580:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
sbb eax,[__dreg+ebx*4]
mov [__dreg+8],eax
lahf
seto al
setc [__xflag]
jnz short ln1346
or ch,0BFh
and ah,ch
ln1346:
sub edi,byte 8
jmp execend
; Opcodes 9588 - 958F
T588:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1347
or ch,0BFh
and ah,ch
ln1347:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+8],edx
sub edi,byte 30
jmp execend
; Opcodes 9590 - 9597
T590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9598 - 959F
T598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 95A0 - 95A7
T5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 95A8 - 95AF
T5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 95B0 - 95B7
T5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 95B8
T5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 95B9
T5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 95C0 - 95C7
T5C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes 95C8 - 95CF
T5C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes 95D0 - 95D7
T5D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcodes 95D8 - 95DF
T5D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcodes 95E0 - 95E7
T5E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcodes 95E8 - 95EF
T5E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcodes 95F0 - 95F7
T5F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+8],ecx
sub edi,byte 20
jmp execend
; Opcode 95F8
T5F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode 95F9
T5F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+8],ecx
sub edi,byte 22
jmp execend
; Opcode 95FA
T5FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode 95FB
T5FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+8],ecx
sub edi,byte 20
jmp execend
; Opcode 95FC
T5FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcodes 9600 - 9607
T600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9610 - 9617
T610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9618 - 961F
T618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9620 - 9627
T620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9628 - 962F
T628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9630 - 9637
T630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9638
T638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9639
T639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 963A
T63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 963B
T63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 963C
T63C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9640 - 9647
T640:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9648 - 964F
T648:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9650 - 9657
T650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9658 - 965F
T658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9660 - 9667
T660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9668 - 966F
T668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9670 - 9677
T670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9678
T678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9679
T679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 967A
T67A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 967B
T67B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 967C
T67C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9680 - 9687
T680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9688 - 968F
T688:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9690 - 9697
T690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9698 - 969F
T698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 96A0 - 96A7
T6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 96A8 - 96AF
T6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 96B0 - 96B7
T6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 96B8
T6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 96B9
T6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 96BA
T6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 96BB
T6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 96BC
T6BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 96C0 - 96C7
T6C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes 96C8 - 96CF
T6C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes 96D0 - 96D7
T6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes 96D8 - 96DF
T6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes 96E0 - 96E7
T6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcodes 96E8 - 96EF
T6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcodes 96F0 - 96F7
T6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode 96F8
T6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcode 96F9
T6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+12],ecx
sub edi,byte 20
jmp execend
; Opcode 96FA
T6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcode 96FB
T6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode 96FC
T6FC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes 9700 - 9707
T700:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
sbb al,[__dreg+ebx*4]
mov [__dreg+12],al
lahf
seto al
setc [__xflag]
jnz short ln1348
or ch,0BFh
and ah,ch
ln1348:
sub edi,byte 4
jmp execend
; Opcodes 9708 - 970F
T708:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1349
or ch,0BFh
and ah,ch
ln1349:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+12],edx
sub edi,byte 18
jmp execend
; Opcodes 9710 - 9717
T710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9718 - 971F
T718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9720 - 9727
T720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9728 - 972F
T728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9730 - 9737
T730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9738
T738:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9739
T739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9740 - 9747
T740:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
sbb ax,[__dreg+ebx*4]
mov [__dreg+12],ax
lahf
seto al
setc [__xflag]
jnz short ln1350
or ch,0BFh
and ah,ch
ln1350:
sub edi,byte 4
jmp execend
; Opcodes 9748 - 974F
T748:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1351
or ch,0BFh
and ah,ch
ln1351:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+12],edx
sub edi,byte 18
jmp execend
; Opcodes 9750 - 9757
T750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9758 - 975F
T758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9760 - 9767
T760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9768 - 976F
T768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9770 - 9777
T770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9778
T778:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9779
T779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9780 - 9787
T780:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
sbb eax,[__dreg+ebx*4]
mov [__dreg+12],eax
lahf
seto al
setc [__xflag]
jnz short ln1352
or ch,0BFh
and ah,ch
ln1352:
sub edi,byte 8
jmp execend
; Opcodes 9788 - 978F
T788:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1353
or ch,0BFh
and ah,ch
ln1353:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+12],edx
sub edi,byte 30
jmp execend
; Opcodes 9790 - 9797
T790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9798 - 979F
T798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 97A0 - 97A7
T7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 97A8 - 97AF
T7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 97B0 - 97B7
T7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 97B8
T7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 97B9
T7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 97C0 - 97C7
T7C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes 97C8 - 97CF
T7C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes 97D0 - 97D7
T7D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcodes 97D8 - 97DF
T7D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcodes 97E0 - 97E7
T7E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcodes 97E8 - 97EF
T7E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcodes 97F0 - 97F7
T7F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+12],ecx
sub edi,byte 20
jmp execend
; Opcode 97F8
T7F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode 97F9
T7F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+12],ecx
sub edi,byte 22
jmp execend
; Opcode 97FA
T7FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode 97FB
T7FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+12],ecx
sub edi,byte 20
jmp execend
; Opcode 97FC
T7FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcodes 9800 - 9807
T800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9810 - 9817
T810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9818 - 981F
T818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9820 - 9827
T820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9828 - 982F
T828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9830 - 9837
T830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9838
T838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9839
T839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 983A
T83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 983B
T83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 983C
T83C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9840 - 9847
T840:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9848 - 984F
T848:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9850 - 9857
T850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9858 - 985F
T858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9860 - 9867
T860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9868 - 986F
T868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9870 - 9877
T870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9878
T878:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9879
T879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 987A
T87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 987B
T87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 987C
T87C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9880 - 9887
T880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9888 - 988F
T888:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9890 - 9897
T890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9898 - 989F
T898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 98A0 - 98A7
T8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 98A8 - 98AF
T8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 98B0 - 98B7
T8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 98B8
T8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 98B9
T8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 98BA
T8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 98BB
T8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 98BC
T8BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 98C0 - 98C7
T8C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes 98C8 - 98CF
T8C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes 98D0 - 98D7
T8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes 98D8 - 98DF
T8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes 98E0 - 98E7
T8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcodes 98E8 - 98EF
T8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcodes 98F0 - 98F7
T8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode 98F8
T8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcode 98F9
T8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+16],ecx
sub edi,byte 20
jmp execend
; Opcode 98FA
T8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcode 98FB
T8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode 98FC
T8FC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes 9900 - 9907
T900:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
sbb al,[__dreg+ebx*4]
mov [__dreg+16],al
lahf
seto al
setc [__xflag]
jnz short ln1354
or ch,0BFh
and ah,ch
ln1354:
sub edi,byte 4
jmp execend
; Opcodes 9908 - 990F
T908:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1355
or ch,0BFh
and ah,ch
ln1355:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+16],edx
sub edi,byte 18
jmp execend
; Opcodes 9910 - 9917
T910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9918 - 991F
T918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9920 - 9927
T920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9928 - 992F
T928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9930 - 9937
T930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9938
T938:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9939
T939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9940 - 9947
T940:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
sbb ax,[__dreg+ebx*4]
mov [__dreg+16],ax
lahf
seto al
setc [__xflag]
jnz short ln1356
or ch,0BFh
and ah,ch
ln1356:
sub edi,byte 4
jmp execend
; Opcodes 9948 - 994F
T948:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1357
or ch,0BFh
and ah,ch
ln1357:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+16],edx
sub edi,byte 18
jmp execend
; Opcodes 9950 - 9957
T950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9958 - 995F
T958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9960 - 9967
T960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9968 - 996F
T968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9970 - 9977
T970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9978
T978:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9979
T979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9980 - 9987
T980:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
sbb eax,[__dreg+ebx*4]
mov [__dreg+16],eax
lahf
seto al
setc [__xflag]
jnz short ln1358
or ch,0BFh
and ah,ch
ln1358:
sub edi,byte 8
jmp execend
; Opcodes 9988 - 998F
T988:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1359
or ch,0BFh
and ah,ch
ln1359:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+16],edx
sub edi,byte 30
jmp execend
; Opcodes 9990 - 9997
T990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9998 - 999F
T998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 99A0 - 99A7
T9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 99A8 - 99AF
T9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 99B0 - 99B7
T9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 99B8
T9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 99B9
T9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 99C0 - 99C7
T9C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes 99C8 - 99CF
T9C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes 99D0 - 99D7
T9D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcodes 99D8 - 99DF
T9D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcodes 99E0 - 99E7
T9E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcodes 99E8 - 99EF
T9E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcodes 99F0 - 99F7
T9F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+16],ecx
sub edi,byte 20
jmp execend
; Opcode 99F8
T9F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode 99F9
T9F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+16],ecx
sub edi,byte 22
jmp execend
; Opcode 99FA
T9FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode 99FB
T9FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+16],ecx
sub edi,byte 20
jmp execend
; Opcode 99FC
T9FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcodes 9A00 - 9A07
TA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9A10 - 9A17
TA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A18 - 9A1F
TA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A20 - 9A27
TA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9A28 - 9A2F
TA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9A30 - 9A37
TA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9A38
TA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9A39
TA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 9A3A
TA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9A3B
TA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9A3C
TA3C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A40 - 9A47
TA40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9A48 - 9A4F
TA48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9A50 - 9A57
TA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A58 - 9A5F
TA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A60 - 9A67
TA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9A68 - 9A6F
TA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9A70 - 9A77
TA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9A78
TA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9A79
TA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 9A7A
TA7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9A7B
TA7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9A7C
TA7C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A80 - 9A87
TA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A88 - 9A8F
TA88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9A90 - 9A97
TA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9A98 - 9A9F
TA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9AA0 - 9AA7
TAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 9AA8 - 9AAF
TAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 9AB0 - 9AB7
TAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 9AB8
TAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 9AB9
TAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 9ABA
TABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 9ABB
TABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 9ABC
TABC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 9AC0 - 9AC7
TAC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes 9AC8 - 9ACF
TAC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes 9AD0 - 9AD7
TAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes 9AD8 - 9ADF
TAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes 9AE0 - 9AE7
TAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcodes 9AE8 - 9AEF
TAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcodes 9AF0 - 9AF7
TAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode 9AF8
TAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcode 9AF9
TAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+20],ecx
sub edi,byte 20
jmp execend
; Opcode 9AFA
TAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcode 9AFB
TAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode 9AFC
TAFC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes 9B00 - 9B07
TB00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
sbb al,[__dreg+ebx*4]
mov [__dreg+20],al
lahf
seto al
setc [__xflag]
jnz short ln1360
or ch,0BFh
and ah,ch
ln1360:
sub edi,byte 4
jmp execend
; Opcodes 9B08 - 9B0F
TB08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1361
or ch,0BFh
and ah,ch
ln1361:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+20],edx
sub edi,byte 18
jmp execend
; Opcodes 9B10 - 9B17
TB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9B18 - 9B1F
TB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9B20 - 9B27
TB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9B28 - 9B2F
TB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9B30 - 9B37
TB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9B38
TB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9B39
TB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9B40 - 9B47
TB40:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
sbb ax,[__dreg+ebx*4]
mov [__dreg+20],ax
lahf
seto al
setc [__xflag]
jnz short ln1362
or ch,0BFh
and ah,ch
ln1362:
sub edi,byte 4
jmp execend
; Opcodes 9B48 - 9B4F
TB48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1363
or ch,0BFh
and ah,ch
ln1363:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+20],edx
sub edi,byte 18
jmp execend
; Opcodes 9B50 - 9B57
TB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9B58 - 9B5F
TB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9B60 - 9B67
TB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9B68 - 9B6F
TB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9B70 - 9B77
TB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9B78
TB78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9B79
TB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9B80 - 9B87
TB80:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
sbb eax,[__dreg+ebx*4]
mov [__dreg+20],eax
lahf
seto al
setc [__xflag]
jnz short ln1364
or ch,0BFh
and ah,ch
ln1364:
sub edi,byte 8
jmp execend
; Opcodes 9B88 - 9B8F
TB88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1365
or ch,0BFh
and ah,ch
ln1365:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+20],edx
sub edi,byte 30
jmp execend
; Opcodes 9B90 - 9B97
TB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9B98 - 9B9F
TB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 9BA0 - 9BA7
TBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 9BA8 - 9BAF
TBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 9BB0 - 9BB7
TBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 9BB8
TBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 9BB9
TBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 9BC0 - 9BC7
TBC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes 9BC8 - 9BCF
TBC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes 9BD0 - 9BD7
TBD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcodes 9BD8 - 9BDF
TBD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcodes 9BE0 - 9BE7
TBE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcodes 9BE8 - 9BEF
TBE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcodes 9BF0 - 9BF7
TBF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+20],ecx
sub edi,byte 20
jmp execend
; Opcode 9BF8
TBF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode 9BF9
TBF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+20],ecx
sub edi,byte 22
jmp execend
; Opcode 9BFA
TBFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode 9BFB
TBFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+20],ecx
sub edi,byte 20
jmp execend
; Opcode 9BFC
TBFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcodes 9C00 - 9C07
TC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9C10 - 9C17
TC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C18 - 9C1F
TC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C20 - 9C27
TC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9C28 - 9C2F
TC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9C30 - 9C37
TC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9C38
TC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9C39
TC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 9C3A
TC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9C3B
TC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9C3C
TC3C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C40 - 9C47
TC40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9C48 - 9C4F
TC48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9C50 - 9C57
TC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C58 - 9C5F
TC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C60 - 9C67
TC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9C68 - 9C6F
TC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9C70 - 9C77
TC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9C78
TC78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9C79
TC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 9C7A
TC7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9C7B
TC7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9C7C
TC7C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C80 - 9C87
TC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C88 - 9C8F
TC88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9C90 - 9C97
TC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9C98 - 9C9F
TC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9CA0 - 9CA7
TCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 9CA8 - 9CAF
TCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 9CB0 - 9CB7
TCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 9CB8
TCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 9CB9
TCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 9CBA
TCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 9CBB
TCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 9CBC
TCBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 9CC0 - 9CC7
TCC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes 9CC8 - 9CCF
TCC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes 9CD0 - 9CD7
TCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes 9CD8 - 9CDF
TCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes 9CE0 - 9CE7
TCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcodes 9CE8 - 9CEF
TCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcodes 9CF0 - 9CF7
TCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode 9CF8
TCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcode 9CF9
TCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+24],ecx
sub edi,byte 20
jmp execend
; Opcode 9CFA
TCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcode 9CFB
TCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode 9CFC
TCFC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes 9D00 - 9D07
TD00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
sbb al,[__dreg+ebx*4]
mov [__dreg+24],al
lahf
seto al
setc [__xflag]
jnz short ln1366
or ch,0BFh
and ah,ch
ln1366:
sub edi,byte 4
jmp execend
; Opcodes 9D08 - 9D0F
TD08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1367
or ch,0BFh
and ah,ch
ln1367:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+24],edx
sub edi,byte 18
jmp execend
; Opcodes 9D10 - 9D17
TD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9D18 - 9D1F
TD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9D20 - 9D27
TD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9D28 - 9D2F
TD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9D30 - 9D37
TD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9D38
TD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9D39
TD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9D40 - 9D47
TD40:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
sbb ax,[__dreg+ebx*4]
mov [__dreg+24],ax
lahf
seto al
setc [__xflag]
jnz short ln1368
or ch,0BFh
and ah,ch
ln1368:
sub edi,byte 4
jmp execend
; Opcodes 9D48 - 9D4F
TD48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1369
or ch,0BFh
and ah,ch
ln1369:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+24],edx
sub edi,byte 18
jmp execend
; Opcodes 9D50 - 9D57
TD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9D58 - 9D5F
TD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9D60 - 9D67
TD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9D68 - 9D6F
TD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9D70 - 9D77
TD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9D78
TD78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9D79
TD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9D80 - 9D87
TD80:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
sbb eax,[__dreg+ebx*4]
mov [__dreg+24],eax
lahf
seto al
setc [__xflag]
jnz short ln1370
or ch,0BFh
and ah,ch
ln1370:
sub edi,byte 8
jmp execend
; Opcodes 9D88 - 9D8F
TD88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1371
or ch,0BFh
and ah,ch
ln1371:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+24],edx
sub edi,byte 30
jmp execend
; Opcodes 9D90 - 9D97
TD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9D98 - 9D9F
TD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 9DA0 - 9DA7
TDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 9DA8 - 9DAF
TDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 9DB0 - 9DB7
TDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 9DB8
TDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 9DB9
TDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 9DC0 - 9DC7
TDC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes 9DC8 - 9DCF
TDC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes 9DD0 - 9DD7
TDD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcodes 9DD8 - 9DDF
TDD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcodes 9DE0 - 9DE7
TDE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcodes 9DE8 - 9DEF
TDE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcodes 9DF0 - 9DF7
TDF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+24],ecx
sub edi,byte 20
jmp execend
; Opcode 9DF8
TDF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode 9DF9
TDF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+24],ecx
sub edi,byte 22
jmp execend
; Opcode 9DFA
TDFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode 9DFB
TDFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+24],ecx
sub edi,byte 20
jmp execend
; Opcode 9DFC
TDFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcodes 9E00 - 9E07
TE00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9E10 - 9E17
TE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E18 - 9E1F
TE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E20 - 9E27
TE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9E28 - 9E2F
TE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9E30 - 9E37
TE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9E38
TE38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9E39
TE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 9E3A
TE3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9E3B
TE3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9E3C
TE3C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E40 - 9E47
TE40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9E48 - 9E4F
TE48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes 9E50 - 9E57
TE50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E58 - 9E5F
TE58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E60 - 9E67
TE60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes 9E68 - 9E6F
TE68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes 9E70 - 9E77
TE70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9E78
TE78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9E79
TE79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode 9E7A
TE7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode 9E7B
TE7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode 9E7C
TE7C:
mov cx,[esi]
add esi,byte 2
sub [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E80 - 9E87
TE80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E88 - 9E8F
TE88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes 9E90 - 9E97
TE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9E98 - 9E9F
TE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes 9EA0 - 9EA7
TEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 9EA8 - 9EAF
TEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes 9EB0 - 9EB7
TEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 9EB8
TEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 9EB9
TEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode 9EBA
TEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode 9EBB
TEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode 9EBC
TEBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes 9EC0 - 9EC7
TEC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
sub [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes 9EC8 - 9ECF
TEC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
sub [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes 9ED0 - 9ED7
TED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes 9ED8 - 9EDF
TED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
sub [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes 9EE0 - 9EE7
TEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
sub [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcodes 9EE8 - 9EEF
TEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcodes 9EF0 - 9EF7
TEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
sub [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode 9EF8
TEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcode 9EF9
TEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
sub [__areg+28],ecx
sub edi,byte 20
jmp execend
; Opcode 9EFA
TEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcode 9EFB
TEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
sub [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode 9EFC
TEFC:
movsx ecx,word[esi]
add esi,byte 2
sub [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes 9F00 - 9F07
TF00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
sbb al,[__dreg+ebx*4]
mov [__dreg+28],al
lahf
seto al
setc [__xflag]
jnz short ln1372
or ch,0BFh
and ah,ch
ln1372:
sub edi,byte 4
jmp execend
; Opcodes 9F08 - 9F0F
TF08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 2
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1373
or ch,0BFh
and ah,ch
ln1373:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcodes 9F10 - 9F17
TF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes 9F18 - 9F1F
TF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9F20 - 9F27
TF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
sub cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9F28 - 9F2F
TF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes 9F30 - 9F37
TF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
sub cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode 9F38
TF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
sub cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode 9F39
TF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
sub cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes 9F40 - 9F47
TF40:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
sbb ax,[__dreg+ebx*4]
mov [__dreg+28],ax
lahf
seto al
setc [__xflag]
jnz short ln1374
or ch,0BFh
and ah,ch
ln1374:
sub edi,byte 4
jmp execend
; Opcodes 9F48 - 9F4F
TF48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1375
or ch,0BFh
and ah,ch
ln1375:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcodes 9F50 - 9F57
TF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes 9F58 - 9F5F
TF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes 9F60 - 9F67
TF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sub cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes 9F68 - 9F6F
TF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes 9F70 - 9F77
TF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sub cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode 9F78
TF78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sub cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode 9F79
TF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sub cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes 9F80 - 9F87
TF80:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
sbb eax,[__dreg+ebx*4]
mov [__dreg+28],eax
lahf
seto al
setc [__xflag]
jnz short ln1376
or ch,0BFh
and ah,ch
ln1376:
sub edi,byte 8
jmp execend
; Opcodes 9F88 - 9F8F
TF88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
sbb eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1377
or ch,0BFh
and ah,ch
ln1377:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+28],edx
sub edi,byte 30
jmp execend
; Opcodes 9F90 - 9F97
TF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes 9F98 - 9F9F
TF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes 9FA0 - 9FA7
TFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
sub ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes 9FA8 - 9FAF
TFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes 9FB0 - 9FB7
TFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode 9FB8
TFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode 9FB9
TFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes 9FC0 - 9FC7
TFC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
sub [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes 9FC8 - 9FCF
TFC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
sub [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes 9FD0 - 9FD7
TFD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcodes 9FD8 - 9FDF
TFD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcodes 9FE0 - 9FE7
TFE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
sub [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcodes 9FE8 - 9FEF
TFE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcodes 9FF0 - 9FF7
TFF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
sub [__areg+28],ecx
sub edi,byte 20
jmp execend
; Opcode 9FF8
TFF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
sub [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode 9FF9
TFF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
sub [__areg+28],ecx
sub edi,byte 22
jmp execend
; Opcode 9FFA
TFFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
sub [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode 9FFB
TFFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
sub [__areg+28],ecx
sub edi,byte 20
jmp execend
; Opcode 9FFC
TFFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
sub [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcodes A000 - AFFF
U000:
sub esi,byte 2
mov edx,28h
call group_1_exception
sub edi,byte 34
jmp execend
; Opcodes B000 - B007
V000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B010 - B017
V010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B018 - B01F
V018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B020 - B027
V020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B028 - B02F
V028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B030 - B037
V030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B038
V038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B039
V039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B03A
V03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B03B
V03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B03C
V03C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+0],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B040 - B047
V040:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B048 - B04F
V048:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B050 - B057
V050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B058 - B05F
V058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B060 - B067
V060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B068 - B06F
V068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B070 - B077
V070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B078
V078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B079
V079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B07A
V07A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B07B
V07B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B07C
V07C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+0],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B080 - B087
V080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B088 - B08F
V088:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B090 - B097
V090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B098 - B09F
V098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B0A0 - B0A7
V0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B0A8 - B0AF
V0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B0B0 - B0B7
V0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B0B8
V0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B0B9
V0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B0BA
V0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B0BB
V0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B0BC
V0BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B0C0 - B0C7
V0C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B0C8 - B0CF
V0C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B0D0 - B0D7
V0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B0D8 - B0DF
V0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B0E0 - B0E7
V0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B0E8 - B0EF
V0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B0F0 - B0F7
V0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B0F8
V0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B0F9
V0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B0FA
V0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B0FB
V0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B0FC
V0FC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B100 - B107
V100:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+0]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes B108 - B10F
V108:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+0]
call readmemorybyte
inc edx
mov [__areg+0],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B110 - B117
V110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes B118 - B11F
V118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B120 - B127
V120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B128 - B12F
V128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes B130 - B137
V130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode B138
V138:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode B139
V139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes B140 - B147
V140:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+0]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes B148 - B14F
V148:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+0]
call readmemoryword
add edx,byte 2
mov [__areg+0],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B150 - B157
V150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes B158 - B15F
V158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+0]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B160 - B167
V160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+0]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B168 - B16F
V168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes B170 - B177
V170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode B178
V178:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode B179
V179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes B180 - B187
V180:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+0]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes B188 - B18F
V188:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+0]
call readmemorydword
add edx,byte 4
mov [__areg+0],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes B190 - B197
V190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes B198 - B19F
V198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes B1A0 - B1A7
V1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes B1A8 - B1AF
V1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes B1B0 - B1B7
V1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode B1B8
V1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode B1B9
V1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes B1C0 - B1C7
V1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B1C8 - B1CF
V1C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B1D0 - B1D7
V1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B1D8 - B1DF
V1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B1E0 - B1E7
V1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B1E8 - B1EF
V1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B1F0 - B1F7
V1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B1F8
V1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B1F9
V1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B1FA
V1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B1FB
V1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B1FC
V1FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+0],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B200 - B207
V200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B210 - B217
V210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B218 - B21F
V218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B220 - B227
V220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B228 - B22F
V228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B230 - B237
V230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B238
V238:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B239
V239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B23A
V23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B23B
V23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B23C
V23C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+4],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B240 - B247
V240:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B248 - B24F
V248:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B250 - B257
V250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B258 - B25F
V258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B260 - B267
V260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B268 - B26F
V268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B270 - B277
V270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B278
V278:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B279
V279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B27A
V27A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B27B
V27B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B27C
V27C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+4],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B280 - B287
V280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B288 - B28F
V288:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B290 - B297
V290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B298 - B29F
V298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B2A0 - B2A7
V2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B2A8 - B2AF
V2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B2B0 - B2B7
V2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B2B8
V2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B2B9
V2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B2BA
V2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B2BB
V2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B2BC
V2BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B2C0 - B2C7
V2C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B2C8 - B2CF
V2C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B2D0 - B2D7
V2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B2D8 - B2DF
V2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B2E0 - B2E7
V2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B2E8 - B2EF
V2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B2F0 - B2F7
V2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B2F8
V2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B2F9
V2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B2FA
V2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B2FB
V2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B2FC
V2FC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B300 - B307
V300:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+4]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes B308 - B30F
V308:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+4]
call readmemorybyte
inc edx
mov [__areg+4],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B310 - B317
V310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes B318 - B31F
V318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B320 - B327
V320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B328 - B32F
V328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes B330 - B337
V330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode B338
V338:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode B339
V339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes B340 - B347
V340:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+4]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes B348 - B34F
V348:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+4]
call readmemoryword
add edx,byte 2
mov [__areg+4],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B350 - B357
V350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes B358 - B35F
V358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+4]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B360 - B367
V360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+4]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B368 - B36F
V368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes B370 - B377
V370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode B378
V378:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode B379
V379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes B380 - B387
V380:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+4]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes B388 - B38F
V388:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+4]
call readmemorydword
add edx,byte 4
mov [__areg+4],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes B390 - B397
V390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes B398 - B39F
V398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes B3A0 - B3A7
V3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes B3A8 - B3AF
V3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes B3B0 - B3B7
V3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode B3B8
V3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode B3B9
V3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes B3C0 - B3C7
V3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B3C8 - B3CF
V3C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B3D0 - B3D7
V3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B3D8 - B3DF
V3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B3E0 - B3E7
V3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B3E8 - B3EF
V3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B3F0 - B3F7
V3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B3F8
V3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B3F9
V3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B3FA
V3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B3FB
V3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B3FC
V3FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+4],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B400 - B407
V400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B410 - B417
V410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B418 - B41F
V418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B420 - B427
V420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B428 - B42F
V428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B430 - B437
V430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B438
V438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B439
V439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B43A
V43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B43B
V43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B43C
V43C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+8],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B440 - B447
V440:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B448 - B44F
V448:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B450 - B457
V450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B458 - B45F
V458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B460 - B467
V460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B468 - B46F
V468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B470 - B477
V470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B478
V478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B479
V479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B47A
V47A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B47B
V47B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B47C
V47C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+8],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B480 - B487
V480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B488 - B48F
V488:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B490 - B497
V490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B498 - B49F
V498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B4A0 - B4A7
V4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B4A8 - B4AF
V4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B4B0 - B4B7
V4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B4B8
V4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B4B9
V4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B4BA
V4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B4BB
V4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B4BC
V4BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B4C0 - B4C7
V4C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B4C8 - B4CF
V4C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B4D0 - B4D7
V4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B4D8 - B4DF
V4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B4E0 - B4E7
V4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B4E8 - B4EF
V4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B4F0 - B4F7
V4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B4F8
V4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B4F9
V4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B4FA
V4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B4FB
V4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B4FC
V4FC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B500 - B507
V500:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+8]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes B508 - B50F
V508:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+8]
call readmemorybyte
inc edx
mov [__areg+8],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B510 - B517
V510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes B518 - B51F
V518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B520 - B527
V520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B528 - B52F
V528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes B530 - B537
V530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode B538
V538:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode B539
V539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes B540 - B547
V540:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+8]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes B548 - B54F
V548:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+8]
call readmemoryword
add edx,byte 2
mov [__areg+8],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B550 - B557
V550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes B558 - B55F
V558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+8]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B560 - B567
V560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+8]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B568 - B56F
V568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes B570 - B577
V570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode B578
V578:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode B579
V579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes B580 - B587
V580:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+8]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes B588 - B58F
V588:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+8]
call readmemorydword
add edx,byte 4
mov [__areg+8],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes B590 - B597
V590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes B598 - B59F
V598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes B5A0 - B5A7
V5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes B5A8 - B5AF
V5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes B5B0 - B5B7
V5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode B5B8
V5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode B5B9
V5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes B5C0 - B5C7
V5C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B5C8 - B5CF
V5C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B5D0 - B5D7
V5D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B5D8 - B5DF
V5D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B5E0 - B5E7
V5E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B5E8 - B5EF
V5E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B5F0 - B5F7
V5F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B5F8
V5F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B5F9
V5F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B5FA
V5FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B5FB
V5FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B5FC
V5FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+8],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B600 - B607
V600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B610 - B617
V610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B618 - B61F
V618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B620 - B627
V620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B628 - B62F
V628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B630 - B637
V630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B638
V638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B639
V639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B63A
V63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B63B
V63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B63C
V63C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+12],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B640 - B647
V640:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B648 - B64F
V648:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B650 - B657
V650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B658 - B65F
V658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B660 - B667
V660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B668 - B66F
V668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B670 - B677
V670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B678
V678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B679
V679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B67A
V67A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B67B
V67B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B67C
V67C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+12],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B680 - B687
V680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B688 - B68F
V688:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B690 - B697
V690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B698 - B69F
V698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B6A0 - B6A7
V6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B6A8 - B6AF
V6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B6B0 - B6B7
V6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B6B8
V6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B6B9
V6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B6BA
V6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B6BB
V6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B6BC
V6BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B6C0 - B6C7
V6C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B6C8 - B6CF
V6C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B6D0 - B6D7
V6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B6D8 - B6DF
V6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B6E0 - B6E7
V6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B6E8 - B6EF
V6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B6F0 - B6F7
V6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B6F8
V6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B6F9
V6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B6FA
V6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B6FB
V6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B6FC
V6FC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B700 - B707
V700:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+12]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes B708 - B70F
V708:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+12]
call readmemorybyte
inc edx
mov [__areg+12],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B710 - B717
V710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes B718 - B71F
V718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B720 - B727
V720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B728 - B72F
V728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes B730 - B737
V730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode B738
V738:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode B739
V739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes B740 - B747
V740:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+12]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes B748 - B74F
V748:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+12]
call readmemoryword
add edx,byte 2
mov [__areg+12],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B750 - B757
V750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes B758 - B75F
V758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+12]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B760 - B767
V760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+12]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B768 - B76F
V768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes B770 - B777
V770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode B778
V778:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode B779
V779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes B780 - B787
V780:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+12]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes B788 - B78F
V788:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+12]
call readmemorydword
add edx,byte 4
mov [__areg+12],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes B790 - B797
V790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes B798 - B79F
V798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes B7A0 - B7A7
V7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes B7A8 - B7AF
V7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes B7B0 - B7B7
V7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode B7B8
V7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode B7B9
V7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes B7C0 - B7C7
V7C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B7C8 - B7CF
V7C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B7D0 - B7D7
V7D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B7D8 - B7DF
V7D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B7E0 - B7E7
V7E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B7E8 - B7EF
V7E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B7F0 - B7F7
V7F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B7F8
V7F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B7F9
V7F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B7FA
V7FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B7FB
V7FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B7FC
V7FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+12],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B800 - B807
V800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B810 - B817
V810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B818 - B81F
V818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B820 - B827
V820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B828 - B82F
V828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B830 - B837
V830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B838
V838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B839
V839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B83A
V83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B83B
V83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B83C
V83C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+16],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B840 - B847
V840:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B848 - B84F
V848:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes B850 - B857
V850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B858 - B85F
V858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B860 - B867
V860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B868 - B86F
V868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B870 - B877
V870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B878
V878:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B879
V879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B87A
V87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode B87B
V87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B87C
V87C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+16],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes B880 - B887
V880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B888 - B88F
V888:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B890 - B897
V890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B898 - B89F
V898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B8A0 - B8A7
V8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B8A8 - B8AF
V8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B8B0 - B8B7
V8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B8B8
V8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B8B9
V8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B8BA
V8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B8BB
V8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B8BC
V8BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B8C0 - B8C7
V8C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B8C8 - B8CF
V8C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B8D0 - B8D7
V8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B8D8 - B8DF
V8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B8E0 - B8E7
V8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B8E8 - B8EF
V8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B8F0 - B8F7
V8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B8F8
V8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B8F9
V8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B8FA
V8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode B8FB
V8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode B8FC
V8FC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes B900 - B907
V900:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+16]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes B908 - B90F
V908:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+16]
call readmemorybyte
inc edx
mov [__areg+16],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B910 - B917
V910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes B918 - B91F
V918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B920 - B927
V920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B928 - B92F
V928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes B930 - B937
V930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode B938
V938:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode B939
V939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes B940 - B947
V940:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+16]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes B948 - B94F
V948:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+16]
call readmemoryword
add edx,byte 2
mov [__areg+16],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes B950 - B957
V950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes B958 - B95F
V958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+16]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes B960 - B967
V960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+16]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes B968 - B96F
V968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes B970 - B977
V970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode B978
V978:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode B979
V979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes B980 - B987
V980:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+16]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes B988 - B98F
V988:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+16]
call readmemorydword
add edx,byte 4
mov [__areg+16],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes B990 - B997
V990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes B998 - B99F
V998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes B9A0 - B9A7
V9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes B9A8 - B9AF
V9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes B9B0 - B9B7
V9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode B9B8
V9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode B9B9
V9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes B9C0 - B9C7
V9C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B9C8 - B9CF
V9C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes B9D0 - B9D7
V9D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B9D8 - B9DF
V9D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes B9E0 - B9E7
V9E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes B9E8 - B9EF
V9E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes B9F0 - B9F7
V9F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B9F8
V9F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B9F9
V9F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode B9FA
V9FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode B9FB
V9FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode B9FC
V9FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+16],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BA00 - BA07
VA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BA10 - BA17
VA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BA18 - BA1F
VA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BA20 - BA27
VA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BA28 - BA2F
VA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BA30 - BA37
VA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BA38
VA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BA39
VA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BA3A
VA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BA3B
VA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BA3C
VA3C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+20],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BA40 - BA47
VA40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BA48 - BA4F
VA48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BA50 - BA57
VA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BA58 - BA5F
VA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BA60 - BA67
VA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BA68 - BA6F
VA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BA70 - BA77
VA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BA78
VA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BA79
VA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BA7A
VA7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BA7B
VA7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BA7C
VA7C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+20],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BA80 - BA87
VA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BA88 - BA8F
VA88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BA90 - BA97
VA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BA98 - BA9F
VA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BAA0 - BAA7
VAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes BAA8 - BAAF
VAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes BAB0 - BAB7
VAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BAB8
VAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BAB9
VAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode BABA
VABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BABB
VABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BABC
VABC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BAC0 - BAC7
VAC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BAC8 - BACF
VAC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BAD0 - BAD7
VAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BAD8 - BADF
VAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BAE0 - BAE7
VAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BAE8 - BAEF
VAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BAF0 - BAF7
VAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BAF8
VAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BAF9
VAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BAFA
VAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BAFB
VAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BAFC
VAFC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BB00 - BB07
VB00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+20]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes BB08 - BB0F
VB08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+20]
call readmemorybyte
inc edx
mov [__areg+20],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BB10 - BB17
VB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes BB18 - BB1F
VB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes BB20 - BB27
VB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes BB28 - BB2F
VB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes BB30 - BB37
VB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode BB38
VB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode BB39
VB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes BB40 - BB47
VB40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+20]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes BB48 - BB4F
VB48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+20]
call readmemoryword
add edx,byte 2
mov [__areg+20],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BB50 - BB57
VB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes BB58 - BB5F
VB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+20]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes BB60 - BB67
VB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+20]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes BB68 - BB6F
VB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes BB70 - BB77
VB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode BB78
VB78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode BB79
VB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes BB80 - BB87
VB80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+20]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes BB88 - BB8F
VB88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+20]
call readmemorydword
add edx,byte 4
mov [__areg+20],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes BB90 - BB97
VB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes BB98 - BB9F
VB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes BBA0 - BBA7
VBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes BBA8 - BBAF
VBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes BBB0 - BBB7
VBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode BBB8
VBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode BBB9
VBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes BBC0 - BBC7
VBC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BBC8 - BBCF
VBC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BBD0 - BBD7
VBD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BBD8 - BBDF
VBD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BBE0 - BBE7
VBE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes BBE8 - BBEF
VBE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes BBF0 - BBF7
VBF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BBF8
VBF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BBF9
VBF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode BBFA
VBFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BBFB
VBFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BBFC
VBFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+20],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BC00 - BC07
VC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BC10 - BC17
VC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BC18 - BC1F
VC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BC20 - BC27
VC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BC28 - BC2F
VC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BC30 - BC37
VC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BC38
VC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BC39
VC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BC3A
VC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BC3B
VC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BC3C
VC3C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+24],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BC40 - BC47
VC40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BC48 - BC4F
VC48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BC50 - BC57
VC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BC58 - BC5F
VC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BC60 - BC67
VC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BC68 - BC6F
VC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BC70 - BC77
VC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BC78
VC78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BC79
VC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BC7A
VC7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BC7B
VC7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BC7C
VC7C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+24],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BC80 - BC87
VC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BC88 - BC8F
VC88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BC90 - BC97
VC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BC98 - BC9F
VC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BCA0 - BCA7
VCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes BCA8 - BCAF
VCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes BCB0 - BCB7
VCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BCB8
VCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BCB9
VCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode BCBA
VCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BCBB
VCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BCBC
VCBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BCC0 - BCC7
VCC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BCC8 - BCCF
VCC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BCD0 - BCD7
VCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BCD8 - BCDF
VCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BCE0 - BCE7
VCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BCE8 - BCEF
VCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BCF0 - BCF7
VCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BCF8
VCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BCF9
VCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BCFA
VCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BCFB
VCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BCFC
VCFC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BD00 - BD07
VD00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+24]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes BD08 - BD0F
VD08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+24]
call readmemorybyte
inc edx
mov [__areg+24],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BD10 - BD17
VD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes BD18 - BD1F
VD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes BD20 - BD27
VD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes BD28 - BD2F
VD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes BD30 - BD37
VD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode BD38
VD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode BD39
VD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes BD40 - BD47
VD40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+24]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes BD48 - BD4F
VD48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+24]
call readmemoryword
add edx,byte 2
mov [__areg+24],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BD50 - BD57
VD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes BD58 - BD5F
VD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+24]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes BD60 - BD67
VD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+24]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes BD68 - BD6F
VD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes BD70 - BD77
VD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode BD78
VD78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode BD79
VD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes BD80 - BD87
VD80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+24]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes BD88 - BD8F
VD88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+24]
call readmemorydword
add edx,byte 4
mov [__areg+24],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes BD90 - BD97
VD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes BD98 - BD9F
VD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes BDA0 - BDA7
VDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes BDA8 - BDAF
VDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes BDB0 - BDB7
VDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode BDB8
VDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode BDB9
VDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes BDC0 - BDC7
VDC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BDC8 - BDCF
VDC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BDD0 - BDD7
VDD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BDD8 - BDDF
VDD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BDE0 - BDE7
VDE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes BDE8 - BDEF
VDE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes BDF0 - BDF7
VDF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BDF8
VDF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BDF9
VDF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode BDFA
VDFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BDFB
VDFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BDFC
VDFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+24],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BE00 - BE07
VE00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BE10 - BE17
VE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BE18 - BE1F
VE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BE20 - BE27
VE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BE28 - BE2F
VE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BE30 - BE37
VE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BE38
VE38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BE39
VE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BE3A
VE3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BE3B
VE3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BE3C
VE3C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+28],cl
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BE40 - BE47
VE40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BE48 - BE4F
VE48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 4
jmp execend
; Opcodes BE50 - BE57
VE50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BE58 - BE5F
VE58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BE60 - BE67
VE60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BE68 - BE6F
VE68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BE70 - BE77
VE70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BE78
VE78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BE79
VE79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BE7A
VE7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcode BE7B
VE7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BE7C
VE7C:
mov cx,[esi]
add esi,byte 2
cmp [__dreg+28],cx
lahf
seto al
sub edi,byte 8
jmp execend
; Opcodes BE80 - BE87
VE80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BE88 - BE8F
VE88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BE90 - BE97
VE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BE98 - BE9F
VE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BEA0 - BEA7
VEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes BEA8 - BEAF
VEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes BEB0 - BEB7
VEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BEB8
VEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BEB9
VEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode BEBA
VEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BEBB
VEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BEBC
VEBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__dreg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BEC0 - BEC7
VEC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BEC8 - BECF
VEC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BED0 - BED7
VED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BED8 - BEDF
VED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BEE0 - BEE7
VEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BEE8 - BEEF
VEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BEF0 - BEF7
VEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BEF8
VEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BEF9
VEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BEFA
VEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcode BEFB
VEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcode BEFC
VEFC:
movsx ecx,word[esi]
add esi,byte 2
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 10
jmp execend
; Opcodes BF00 - BF07
VF00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cl,[__dreg+28]
lahf
mov al,0
mov [__dreg+ebx*4],cl
sub edi,byte 4
jmp execend
; Opcodes BF08 - BF0F
VF08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+28]
call readmemorybyte
add edx,byte 2
mov [__areg+28],edx
cmp cl,al
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BF10 - BF17
VF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes BF18 - BF1F
VF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes BF20 - BF27
VF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
xor cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes BF28 - BF2F
VF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes BF30 - BF37
VF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
xor cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode BF38
VF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
xor cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode BF39
VF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
xor cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes BF40 - BF47
VF40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor cx,[__dreg+28]
lahf
mov al,0
mov [__dreg+ebx*4],cx
sub edi,byte 4
jmp execend
; Opcodes BF48 - BF4F
VF48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+28]
call readmemoryword
add edx,byte 2
mov [__areg+28],edx
cmp cx,ax
lahf
seto al
sub edi,byte 12
jmp execend
; Opcodes BF50 - BF57
VF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes BF58 - BF5F
VF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+28]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes BF60 - BF67
VF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
xor cx,[__dreg+28]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes BF68 - BF6F
VF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes BF70 - BF77
VF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
xor cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode BF78
VF78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
xor cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode BF79
VF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
xor cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes BF80 - BF87
VF80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
xor ecx,[__dreg+28]
lahf
mov al,0
mov [__dreg+ebx*4],ecx
sub edi,byte 8
jmp execend
; Opcodes BF88 - BF8F
VF88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
mov eax,ecx
mov edx,[__areg+28]
call readmemorydword
add edx,byte 4
mov [__areg+28],edx
cmp ecx,eax
lahf
seto al
sub edi,byte 20
jmp execend
; Opcodes BF90 - BF97
VF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes BF98 - BF9F
VF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes BFA0 - BFA7
VFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
xor ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes BFA8 - BFAF
VFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes BFB0 - BFB7
VFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
xor ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode BFB8
VFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
xor ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode BFB9
VFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
xor ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes BFC0 - BFC7
VFC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BFC8 - BFCF
VFC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 6
jmp execend
; Opcodes BFD0 - BFD7
VFD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BFD8 - BFDF
VFD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes BFE0 - BFE7
VFE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 16
jmp execend
; Opcodes BFE8 - BFEF
VFE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcodes BFF0 - BFF7
VFF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BFF8
VFF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BFF9
VFF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 22
jmp execend
; Opcode BFFA
VFFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 18
jmp execend
; Opcode BFFB
VFFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 20
jmp execend
; Opcode BFFC
VFFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
cmp [__areg+28],ecx
lahf
seto al
sub edi,byte 14
jmp execend
; Opcodes C000 - C007
W000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C010 - C017
W010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C018 - C01F
W018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C020 - C027
W020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C028 - C02F
W028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C030 - C037
W030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C038
W038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C039
W039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C03A
W03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C03B
W03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C03C
W03C:
mov cx,[esi]
add esi,byte 2
and [__dreg+0],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C040 - C047
W040:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C050 - C057
W050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C058 - C05F
W058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C060 - C067
W060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C068 - C06F
W068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C070 - C077
W070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C078
W078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C079
W079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C07A
W07A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C07B
W07B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C07C
W07C:
mov cx,[esi]
add esi,byte 2
and [__dreg+0],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C080 - C087
W080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C090 - C097
W090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C098 - C09F
W098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C0A0 - C0A7
W0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C0A8 - C0AF
W0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes C0B0 - C0B7
W0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C0B8
W0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C0B9
W0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode C0BA
W0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C0BB
W0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C0BC
W0BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+0],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C0C0 - C0C7
W0C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1378:
add cx,cx
adc dl,0
dec bl
jnz ln1378
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 38
jmp execend
; Opcodes C0D0 - C0D7
W0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1379:
add cx,cx
adc dl,0
dec bl
jnz ln1379
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 42
jmp execend
; Opcodes C0D8 - C0DF
W0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1380:
add cx,cx
adc dl,0
dec bl
jnz ln1380
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 42
jmp execend
; Opcodes C0E0 - C0E7
W0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1381:
add cx,cx
adc dl,0
dec bl
jnz ln1381
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 44
jmp execend
; Opcodes C0E8 - C0EF
W0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1382:
add cx,cx
adc dl,0
dec bl
jnz ln1382
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 46
jmp execend
; Opcodes C0F0 - C0F7
W0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1383:
add cx,cx
adc dl,0
dec bl
jnz ln1383
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 48
jmp execend
; Opcode C0F8
W0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1384:
add cx,cx
adc dl,0
dec bl
jnz ln1384
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 46
jmp execend
; Opcode C0F9
W0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1385:
add cx,cx
adc dl,0
dec bl
jnz ln1385
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 50
jmp execend
; Opcode C0FA
W0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1386:
add cx,cx
adc dl,0
dec bl
jnz ln1386
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 46
jmp execend
; Opcode C0FB
W0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1387:
add cx,cx
adc dl,0
dec bl
jnz ln1387
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 48
jmp execend
; Opcode C0FC
W0FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1388:
add cx,cx
adc dl,0
dec bl
jnz ln1388
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 42
jmp execend
; Opcodes C100 - C107
W100:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+0],al
lahf
mov al,0
setc [__xflag]
jnz short ln1389
or ch,0BFh
and ah,ch
ln1389:
sub edi,byte 6
jmp execend
; Opcodes C108 - C10F
W108:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1390
or ch,0BFh
and ah,ch
ln1390:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+0],edx
sub edi,byte 18
jmp execend
; Opcodes C110 - C117
W110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes C118 - C11F
W118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C120 - C127
W120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C128 - C12F
W128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes C130 - C137
W130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode C138
W138:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode C139
W139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+0]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes C140 - C147
W140:
and ebx,byte 7
mov ecx,[__reg+0]
mov edx,[__reg+0+ebx*4]
mov [__reg+0],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C148 - C14F
W148:
and ebx,byte 7
mov ecx,[__reg+32]
mov edx,[__reg+32+ebx*4]
mov [__reg+32],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C150 - C157
W150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes C158 - C15F
W158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+0]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C160 - C167
W160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+0]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C168 - C16F
W168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes C170 - C177
W170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode C178
W178:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode C179
W179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+0]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes C188 - C18F
W188:
and ebx,byte 7
mov ecx,[__reg+0]
mov edx,[__reg+32+ebx*4]
mov [__reg+0],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C190 - C197
W190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes C198 - C19F
W198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes C1A0 - C1A7
W1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes C1A8 - C1AF
W1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes C1B0 - C1B7
W1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode C1B8
W1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode C1B9
W1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+0]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes C1C0 - C1C7
W1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1391:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1391
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 38
jmp execend
; Opcodes C1D0 - C1D7
W1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1392:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1392
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 42
jmp execend
; Opcodes C1D8 - C1DF
W1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1393:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1393
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 42
jmp execend
; Opcodes C1E0 - C1E7
W1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1394:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1394
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 44
jmp execend
; Opcodes C1E8 - C1EF
W1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1395:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1395
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 46
jmp execend
; Opcodes C1F0 - C1F7
W1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1396:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1396
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 48
jmp execend
; Opcode C1F8
W1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1397:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1397
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 46
jmp execend
; Opcode C1F9
W1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1398:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1398
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 50
jmp execend
; Opcode C1FA
W1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1399:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1399
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 46
jmp execend
; Opcode C1FB
W1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1400:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1400
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 48
jmp execend
; Opcode C1FC
W1FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1401:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1401
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+0]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+0],ecx
sub edi,byte 42
jmp execend
; Opcodes C200 - C207
W200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C210 - C217
W210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C218 - C21F
W218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C220 - C227
W220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C228 - C22F
W228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C230 - C237
W230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C238
W238:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C239
W239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C23A
W23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C23B
W23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C23C
W23C:
mov cx,[esi]
add esi,byte 2
and [__dreg+4],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C240 - C247
W240:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C250 - C257
W250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C258 - C25F
W258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C260 - C267
W260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C268 - C26F
W268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C270 - C277
W270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C278
W278:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C279
W279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C27A
W27A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C27B
W27B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C27C
W27C:
mov cx,[esi]
add esi,byte 2
and [__dreg+4],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C280 - C287
W280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C290 - C297
W290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C298 - C29F
W298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C2A0 - C2A7
W2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C2A8 - C2AF
W2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes C2B0 - C2B7
W2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C2B8
W2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C2B9
W2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode C2BA
W2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C2BB
W2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C2BC
W2BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+4],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C2C0 - C2C7
W2C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1402:
add cx,cx
adc dl,0
dec bl
jnz ln1402
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 38
jmp execend
; Opcodes C2D0 - C2D7
W2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1403:
add cx,cx
adc dl,0
dec bl
jnz ln1403
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 42
jmp execend
; Opcodes C2D8 - C2DF
W2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1404:
add cx,cx
adc dl,0
dec bl
jnz ln1404
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 42
jmp execend
; Opcodes C2E0 - C2E7
W2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1405:
add cx,cx
adc dl,0
dec bl
jnz ln1405
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 44
jmp execend
; Opcodes C2E8 - C2EF
W2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1406:
add cx,cx
adc dl,0
dec bl
jnz ln1406
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 46
jmp execend
; Opcodes C2F0 - C2F7
W2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1407:
add cx,cx
adc dl,0
dec bl
jnz ln1407
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 48
jmp execend
; Opcode C2F8
W2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1408:
add cx,cx
adc dl,0
dec bl
jnz ln1408
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 46
jmp execend
; Opcode C2F9
W2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1409:
add cx,cx
adc dl,0
dec bl
jnz ln1409
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 50
jmp execend
; Opcode C2FA
W2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1410:
add cx,cx
adc dl,0
dec bl
jnz ln1410
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 46
jmp execend
; Opcode C2FB
W2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1411:
add cx,cx
adc dl,0
dec bl
jnz ln1411
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 48
jmp execend
; Opcode C2FC
W2FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1412:
add cx,cx
adc dl,0
dec bl
jnz ln1412
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 42
jmp execend
; Opcodes C300 - C307
W300:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+4],al
lahf
mov al,0
setc [__xflag]
jnz short ln1413
or ch,0BFh
and ah,ch
ln1413:
sub edi,byte 6
jmp execend
; Opcodes C308 - C30F
W308:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1414
or ch,0BFh
and ah,ch
ln1414:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+4],edx
sub edi,byte 18
jmp execend
; Opcodes C310 - C317
W310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes C318 - C31F
W318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C320 - C327
W320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C328 - C32F
W328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes C330 - C337
W330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode C338
W338:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode C339
W339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+4]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes C340 - C347
W340:
and ebx,byte 7
mov ecx,[__reg+4]
mov edx,[__reg+0+ebx*4]
mov [__reg+4],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C348 - C34F
W348:
and ebx,byte 7
mov ecx,[__reg+36]
mov edx,[__reg+32+ebx*4]
mov [__reg+36],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C350 - C357
W350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes C358 - C35F
W358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+4]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C360 - C367
W360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+4]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C368 - C36F
W368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes C370 - C377
W370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode C378
W378:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode C379
W379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+4]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes C388 - C38F
W388:
and ebx,byte 7
mov ecx,[__reg+4]
mov edx,[__reg+32+ebx*4]
mov [__reg+4],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C390 - C397
W390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes C398 - C39F
W398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes C3A0 - C3A7
W3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes C3A8 - C3AF
W3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes C3B0 - C3B7
W3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode C3B8
W3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode C3B9
W3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+4]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes C3C0 - C3C7
W3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1415:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1415
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 38
jmp execend
; Opcodes C3D0 - C3D7
W3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1416:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1416
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 42
jmp execend
; Opcodes C3D8 - C3DF
W3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1417:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1417
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 42
jmp execend
; Opcodes C3E0 - C3E7
W3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1418:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1418
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 44
jmp execend
; Opcodes C3E8 - C3EF
W3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1419:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1419
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 46
jmp execend
; Opcodes C3F0 - C3F7
W3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1420:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1420
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 48
jmp execend
; Opcode C3F8
W3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1421:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1421
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 46
jmp execend
; Opcode C3F9
W3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1422:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1422
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 50
jmp execend
; Opcode C3FA
W3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1423:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1423
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 46
jmp execend
; Opcode C3FB
W3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1424:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1424
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 48
jmp execend
; Opcode C3FC
W3FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1425:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1425
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+4]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+4],ecx
sub edi,byte 42
jmp execend
; Opcodes C400 - C407
W400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C410 - C417
W410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C418 - C41F
W418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C420 - C427
W420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C428 - C42F
W428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C430 - C437
W430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C438
W438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C439
W439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C43A
W43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C43B
W43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C43C
W43C:
mov cx,[esi]
add esi,byte 2
and [__dreg+8],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C440 - C447
W440:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C450 - C457
W450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C458 - C45F
W458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C460 - C467
W460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C468 - C46F
W468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C470 - C477
W470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C478
W478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C479
W479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C47A
W47A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C47B
W47B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C47C
W47C:
mov cx,[esi]
add esi,byte 2
and [__dreg+8],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C480 - C487
W480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C490 - C497
W490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C498 - C49F
W498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C4A0 - C4A7
W4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C4A8 - C4AF
W4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes C4B0 - C4B7
W4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C4B8
W4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C4B9
W4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode C4BA
W4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C4BB
W4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C4BC
W4BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+8],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C4C0 - C4C7
W4C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1426:
add cx,cx
adc dl,0
dec bl
jnz ln1426
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 38
jmp execend
; Opcodes C4D0 - C4D7
W4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1427:
add cx,cx
adc dl,0
dec bl
jnz ln1427
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 42
jmp execend
; Opcodes C4D8 - C4DF
W4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1428:
add cx,cx
adc dl,0
dec bl
jnz ln1428
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 42
jmp execend
; Opcodes C4E0 - C4E7
W4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1429:
add cx,cx
adc dl,0
dec bl
jnz ln1429
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 44
jmp execend
; Opcodes C4E8 - C4EF
W4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1430:
add cx,cx
adc dl,0
dec bl
jnz ln1430
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 46
jmp execend
; Opcodes C4F0 - C4F7
W4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1431:
add cx,cx
adc dl,0
dec bl
jnz ln1431
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 48
jmp execend
; Opcode C4F8
W4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1432:
add cx,cx
adc dl,0
dec bl
jnz ln1432
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 46
jmp execend
; Opcode C4F9
W4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1433:
add cx,cx
adc dl,0
dec bl
jnz ln1433
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 50
jmp execend
; Opcode C4FA
W4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1434:
add cx,cx
adc dl,0
dec bl
jnz ln1434
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 46
jmp execend
; Opcode C4FB
W4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1435:
add cx,cx
adc dl,0
dec bl
jnz ln1435
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 48
jmp execend
; Opcode C4FC
W4FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1436:
add cx,cx
adc dl,0
dec bl
jnz ln1436
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 42
jmp execend
; Opcodes C500 - C507
W500:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+8],al
lahf
mov al,0
setc [__xflag]
jnz short ln1437
or ch,0BFh
and ah,ch
ln1437:
sub edi,byte 6
jmp execend
; Opcodes C508 - C50F
W508:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1438
or ch,0BFh
and ah,ch
ln1438:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+8],edx
sub edi,byte 18
jmp execend
; Opcodes C510 - C517
W510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes C518 - C51F
W518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C520 - C527
W520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C528 - C52F
W528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes C530 - C537
W530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode C538
W538:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode C539
W539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+8]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes C540 - C547
W540:
and ebx,byte 7
mov ecx,[__reg+8]
mov edx,[__reg+0+ebx*4]
mov [__reg+8],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C548 - C54F
W548:
and ebx,byte 7
mov ecx,[__reg+40]
mov edx,[__reg+32+ebx*4]
mov [__reg+40],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C550 - C557
W550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes C558 - C55F
W558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+8]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C560 - C567
W560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+8]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C568 - C56F
W568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes C570 - C577
W570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode C578
W578:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode C579
W579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+8]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes C588 - C58F
W588:
and ebx,byte 7
mov ecx,[__reg+8]
mov edx,[__reg+32+ebx*4]
mov [__reg+8],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C590 - C597
W590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes C598 - C59F
W598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes C5A0 - C5A7
W5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes C5A8 - C5AF
W5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes C5B0 - C5B7
W5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode C5B8
W5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode C5B9
W5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+8]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes C5C0 - C5C7
W5C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1439:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1439
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 38
jmp execend
; Opcodes C5D0 - C5D7
W5D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1440:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1440
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 42
jmp execend
; Opcodes C5D8 - C5DF
W5D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1441:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1441
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 42
jmp execend
; Opcodes C5E0 - C5E7
W5E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1442:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1442
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 44
jmp execend
; Opcodes C5E8 - C5EF
W5E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1443:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1443
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 46
jmp execend
; Opcodes C5F0 - C5F7
W5F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1444:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1444
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 48
jmp execend
; Opcode C5F8
W5F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1445:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1445
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 46
jmp execend
; Opcode C5F9
W5F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1446:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1446
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 50
jmp execend
; Opcode C5FA
W5FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1447:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1447
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 46
jmp execend
; Opcode C5FB
W5FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1448:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1448
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 48
jmp execend
; Opcode C5FC
W5FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1449:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1449
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+8]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+8],ecx
sub edi,byte 42
jmp execend
; Opcodes C600 - C607
W600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C610 - C617
W610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C618 - C61F
W618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C620 - C627
W620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C628 - C62F
W628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C630 - C637
W630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C638
W638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C639
W639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C63A
W63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C63B
W63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C63C
W63C:
mov cx,[esi]
add esi,byte 2
and [__dreg+12],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C640 - C647
W640:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C650 - C657
W650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C658 - C65F
W658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C660 - C667
W660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C668 - C66F
W668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C670 - C677
W670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C678
W678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C679
W679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C67A
W67A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C67B
W67B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C67C
W67C:
mov cx,[esi]
add esi,byte 2
and [__dreg+12],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C680 - C687
W680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C690 - C697
W690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C698 - C69F
W698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C6A0 - C6A7
W6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C6A8 - C6AF
W6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes C6B0 - C6B7
W6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C6B8
W6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C6B9
W6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode C6BA
W6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C6BB
W6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C6BC
W6BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+12],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C6C0 - C6C7
W6C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1450:
add cx,cx
adc dl,0
dec bl
jnz ln1450
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 38
jmp execend
; Opcodes C6D0 - C6D7
W6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1451:
add cx,cx
adc dl,0
dec bl
jnz ln1451
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 42
jmp execend
; Opcodes C6D8 - C6DF
W6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1452:
add cx,cx
adc dl,0
dec bl
jnz ln1452
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 42
jmp execend
; Opcodes C6E0 - C6E7
W6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1453:
add cx,cx
adc dl,0
dec bl
jnz ln1453
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 44
jmp execend
; Opcodes C6E8 - C6EF
W6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1454:
add cx,cx
adc dl,0
dec bl
jnz ln1454
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 46
jmp execend
; Opcodes C6F0 - C6F7
W6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1455:
add cx,cx
adc dl,0
dec bl
jnz ln1455
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 48
jmp execend
; Opcode C6F8
W6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1456:
add cx,cx
adc dl,0
dec bl
jnz ln1456
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 46
jmp execend
; Opcode C6F9
W6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1457:
add cx,cx
adc dl,0
dec bl
jnz ln1457
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 50
jmp execend
; Opcode C6FA
W6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1458:
add cx,cx
adc dl,0
dec bl
jnz ln1458
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 46
jmp execend
; Opcode C6FB
W6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1459:
add cx,cx
adc dl,0
dec bl
jnz ln1459
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 48
jmp execend
; Opcode C6FC
W6FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1460:
add cx,cx
adc dl,0
dec bl
jnz ln1460
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 42
jmp execend
; Opcodes C700 - C707
W700:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+12],al
lahf
mov al,0
setc [__xflag]
jnz short ln1461
or ch,0BFh
and ah,ch
ln1461:
sub edi,byte 6
jmp execend
; Opcodes C708 - C70F
W708:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1462
or ch,0BFh
and ah,ch
ln1462:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+12],edx
sub edi,byte 18
jmp execend
; Opcodes C710 - C717
W710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes C718 - C71F
W718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C720 - C727
W720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C728 - C72F
W728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes C730 - C737
W730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode C738
W738:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode C739
W739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+12]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes C740 - C747
W740:
and ebx,byte 7
mov ecx,[__reg+12]
mov edx,[__reg+0+ebx*4]
mov [__reg+12],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C748 - C74F
W748:
and ebx,byte 7
mov ecx,[__reg+44]
mov edx,[__reg+32+ebx*4]
mov [__reg+44],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C750 - C757
W750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes C758 - C75F
W758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+12]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C760 - C767
W760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+12]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C768 - C76F
W768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes C770 - C777
W770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode C778
W778:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode C779
W779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+12]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes C788 - C78F
W788:
and ebx,byte 7
mov ecx,[__reg+12]
mov edx,[__reg+32+ebx*4]
mov [__reg+12],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C790 - C797
W790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes C798 - C79F
W798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes C7A0 - C7A7
W7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes C7A8 - C7AF
W7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes C7B0 - C7B7
W7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode C7B8
W7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode C7B9
W7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+12]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes C7C0 - C7C7
W7C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1463:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1463
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 38
jmp execend
; Opcodes C7D0 - C7D7
W7D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1464:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1464
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 42
jmp execend
; Opcodes C7D8 - C7DF
W7D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1465:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1465
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 42
jmp execend
; Opcodes C7E0 - C7E7
W7E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1466:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1466
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 44
jmp execend
; Opcodes C7E8 - C7EF
W7E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1467:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1467
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 46
jmp execend
; Opcodes C7F0 - C7F7
W7F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1468:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1468
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 48
jmp execend
; Opcode C7F8
W7F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1469:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1469
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 46
jmp execend
; Opcode C7F9
W7F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1470:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1470
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 50
jmp execend
; Opcode C7FA
W7FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1471:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1471
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 46
jmp execend
; Opcode C7FB
W7FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1472:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1472
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 48
jmp execend
; Opcode C7FC
W7FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1473:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1473
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+12]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+12],ecx
sub edi,byte 42
jmp execend
; Opcodes C800 - C807
W800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C810 - C817
W810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C818 - C81F
W818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C820 - C827
W820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C828 - C82F
W828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C830 - C837
W830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C838
W838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C839
W839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C83A
W83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C83B
W83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C83C
W83C:
mov cx,[esi]
add esi,byte 2
and [__dreg+16],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C840 - C847
W840:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes C850 - C857
W850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C858 - C85F
W858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C860 - C867
W860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes C868 - C86F
W868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes C870 - C877
W870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C878
W878:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C879
W879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode C87A
W87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode C87B
W87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode C87C
W87C:
mov cx,[esi]
add esi,byte 2
and [__dreg+16],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C880 - C887
W880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes C890 - C897
W890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C898 - C89F
W898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes C8A0 - C8A7
W8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C8A8 - C8AF
W8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes C8B0 - C8B7
W8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C8B8
W8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C8B9
W8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode C8BA
W8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode C8BB
W8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode C8BC
W8BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+16],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes C8C0 - C8C7
W8C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1474:
add cx,cx
adc dl,0
dec bl
jnz ln1474
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 38
jmp execend
; Opcodes C8D0 - C8D7
W8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1475:
add cx,cx
adc dl,0
dec bl
jnz ln1475
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 42
jmp execend
; Opcodes C8D8 - C8DF
W8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1476:
add cx,cx
adc dl,0
dec bl
jnz ln1476
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 42
jmp execend
; Opcodes C8E0 - C8E7
W8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1477:
add cx,cx
adc dl,0
dec bl
jnz ln1477
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 44
jmp execend
; Opcodes C8E8 - C8EF
W8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1478:
add cx,cx
adc dl,0
dec bl
jnz ln1478
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 46
jmp execend
; Opcodes C8F0 - C8F7
W8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1479:
add cx,cx
adc dl,0
dec bl
jnz ln1479
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 48
jmp execend
; Opcode C8F8
W8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1480:
add cx,cx
adc dl,0
dec bl
jnz ln1480
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 46
jmp execend
; Opcode C8F9
W8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1481:
add cx,cx
adc dl,0
dec bl
jnz ln1481
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 50
jmp execend
; Opcode C8FA
W8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1482:
add cx,cx
adc dl,0
dec bl
jnz ln1482
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 46
jmp execend
; Opcode C8FB
W8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1483:
add cx,cx
adc dl,0
dec bl
jnz ln1483
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 48
jmp execend
; Opcode C8FC
W8FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1484:
add cx,cx
adc dl,0
dec bl
jnz ln1484
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 42
jmp execend
; Opcodes C900 - C907
W900:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+16],al
lahf
mov al,0
setc [__xflag]
jnz short ln1485
or ch,0BFh
and ah,ch
ln1485:
sub edi,byte 6
jmp execend
; Opcodes C908 - C90F
W908:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1486
or ch,0BFh
and ah,ch
ln1486:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+16],edx
sub edi,byte 18
jmp execend
; Opcodes C910 - C917
W910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes C918 - C91F
W918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C920 - C927
W920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C928 - C92F
W928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes C930 - C937
W930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode C938
W938:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode C939
W939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+16]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes C940 - C947
W940:
and ebx,byte 7
mov ecx,[__reg+16]
mov edx,[__reg+0+ebx*4]
mov [__reg+16],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C948 - C94F
W948:
and ebx,byte 7
mov ecx,[__reg+48]
mov edx,[__reg+32+ebx*4]
mov [__reg+48],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C950 - C957
W950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes C958 - C95F
W958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+16]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes C960 - C967
W960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+16]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes C968 - C96F
W968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes C970 - C977
W970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode C978
W978:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode C979
W979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+16]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes C988 - C98F
W988:
and ebx,byte 7
mov ecx,[__reg+16]
mov edx,[__reg+32+ebx*4]
mov [__reg+16],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes C990 - C997
W990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes C998 - C99F
W998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes C9A0 - C9A7
W9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes C9A8 - C9AF
W9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes C9B0 - C9B7
W9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode C9B8
W9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode C9B9
W9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+16]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes C9C0 - C9C7
W9C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1487:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1487
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 38
jmp execend
; Opcodes C9D0 - C9D7
W9D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1488:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1488
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 42
jmp execend
; Opcodes C9D8 - C9DF
W9D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1489:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1489
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 42
jmp execend
; Opcodes C9E0 - C9E7
W9E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1490:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1490
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 44
jmp execend
; Opcodes C9E8 - C9EF
W9E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1491:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1491
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 46
jmp execend
; Opcodes C9F0 - C9F7
W9F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1492:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1492
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 48
jmp execend
; Opcode C9F8
W9F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1493:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1493
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 46
jmp execend
; Opcode C9F9
W9F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1494:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1494
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 50
jmp execend
; Opcode C9FA
W9FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1495:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1495
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 46
jmp execend
; Opcode C9FB
W9FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1496:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1496
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 48
jmp execend
; Opcode C9FC
W9FC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1497:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1497
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+16]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+16],ecx
sub edi,byte 42
jmp execend
; Opcodes CA00 - CA07
WA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes CA10 - CA17
WA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CA18 - CA1F
WA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CA20 - CA27
WA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes CA28 - CA2F
WA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes CA30 - CA37
WA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CA38
WA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CA39
WA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode CA3A
WA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CA3B
WA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CA3C
WA3C:
mov cx,[esi]
add esi,byte 2
and [__dreg+20],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CA40 - CA47
WA40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes CA50 - CA57
WA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CA58 - CA5F
WA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CA60 - CA67
WA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes CA68 - CA6F
WA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes CA70 - CA77
WA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CA78
WA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CA79
WA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode CA7A
WA7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CA7B
WA7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CA7C
WA7C:
mov cx,[esi]
add esi,byte 2
and [__dreg+20],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CA80 - CA87
WA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CA90 - CA97
WA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes CA98 - CA9F
WA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes CAA0 - CAA7
WAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes CAA8 - CAAF
WAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes CAB0 - CAB7
WAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode CAB8
WAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode CAB9
WAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode CABA
WABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode CABB
WABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode CABC
WABC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+20],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes CAC0 - CAC7
WAC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1498:
add cx,cx
adc dl,0
dec bl
jnz ln1498
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 38
jmp execend
; Opcodes CAD0 - CAD7
WAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1499:
add cx,cx
adc dl,0
dec bl
jnz ln1499
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 42
jmp execend
; Opcodes CAD8 - CADF
WAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1500:
add cx,cx
adc dl,0
dec bl
jnz ln1500
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 42
jmp execend
; Opcodes CAE0 - CAE7
WAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1501:
add cx,cx
adc dl,0
dec bl
jnz ln1501
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 44
jmp execend
; Opcodes CAE8 - CAEF
WAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1502:
add cx,cx
adc dl,0
dec bl
jnz ln1502
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 46
jmp execend
; Opcodes CAF0 - CAF7
WAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1503:
add cx,cx
adc dl,0
dec bl
jnz ln1503
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 48
jmp execend
; Opcode CAF8
WAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1504:
add cx,cx
adc dl,0
dec bl
jnz ln1504
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 46
jmp execend
; Opcode CAF9
WAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1505:
add cx,cx
adc dl,0
dec bl
jnz ln1505
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 50
jmp execend
; Opcode CAFA
WAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1506:
add cx,cx
adc dl,0
dec bl
jnz ln1506
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 46
jmp execend
; Opcode CAFB
WAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1507:
add cx,cx
adc dl,0
dec bl
jnz ln1507
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 48
jmp execend
; Opcode CAFC
WAFC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1508:
add cx,cx
adc dl,0
dec bl
jnz ln1508
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 42
jmp execend
; Opcodes CB00 - CB07
WB00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+20],al
lahf
mov al,0
setc [__xflag]
jnz short ln1509
or ch,0BFh
and ah,ch
ln1509:
sub edi,byte 6
jmp execend
; Opcodes CB08 - CB0F
WB08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1510
or ch,0BFh
and ah,ch
ln1510:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+20],edx
sub edi,byte 18
jmp execend
; Opcodes CB10 - CB17
WB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes CB18 - CB1F
WB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes CB20 - CB27
WB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes CB28 - CB2F
WB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes CB30 - CB37
WB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode CB38
WB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode CB39
WB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+20]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes CB40 - CB47
WB40:
and ebx,byte 7
mov ecx,[__reg+20]
mov edx,[__reg+0+ebx*4]
mov [__reg+20],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CB48 - CB4F
WB48:
and ebx,byte 7
mov ecx,[__reg+52]
mov edx,[__reg+32+ebx*4]
mov [__reg+52],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CB50 - CB57
WB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes CB58 - CB5F
WB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+20]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes CB60 - CB67
WB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+20]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes CB68 - CB6F
WB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes CB70 - CB77
WB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode CB78
WB78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode CB79
WB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+20]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes CB88 - CB8F
WB88:
and ebx,byte 7
mov ecx,[__reg+20]
mov edx,[__reg+32+ebx*4]
mov [__reg+20],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CB90 - CB97
WB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes CB98 - CB9F
WB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes CBA0 - CBA7
WBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes CBA8 - CBAF
WBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes CBB0 - CBB7
WBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode CBB8
WBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode CBB9
WBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+20]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes CBC0 - CBC7
WBC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1511:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1511
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 38
jmp execend
; Opcodes CBD0 - CBD7
WBD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1512:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1512
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 42
jmp execend
; Opcodes CBD8 - CBDF
WBD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1513:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1513
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 42
jmp execend
; Opcodes CBE0 - CBE7
WBE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1514:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1514
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 44
jmp execend
; Opcodes CBE8 - CBEF
WBE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1515:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1515
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 46
jmp execend
; Opcodes CBF0 - CBF7
WBF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1516:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1516
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 48
jmp execend
; Opcode CBF8
WBF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1517:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1517
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 46
jmp execend
; Opcode CBF9
WBF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1518:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1518
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 50
jmp execend
; Opcode CBFA
WBFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1519:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1519
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 46
jmp execend
; Opcode CBFB
WBFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1520:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1520
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 48
jmp execend
; Opcode CBFC
WBFC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1521:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1521
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+20]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+20],ecx
sub edi,byte 42
jmp execend
; Opcodes CC00 - CC07
WC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes CC10 - CC17
WC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CC18 - CC1F
WC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CC20 - CC27
WC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes CC28 - CC2F
WC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes CC30 - CC37
WC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CC38
WC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CC39
WC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode CC3A
WC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CC3B
WC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CC3C
WC3C:
mov cx,[esi]
add esi,byte 2
and [__dreg+24],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CC40 - CC47
WC40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes CC50 - CC57
WC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CC58 - CC5F
WC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CC60 - CC67
WC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes CC68 - CC6F
WC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes CC70 - CC77
WC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CC78
WC78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CC79
WC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode CC7A
WC7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CC7B
WC7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CC7C
WC7C:
mov cx,[esi]
add esi,byte 2
and [__dreg+24],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CC80 - CC87
WC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CC90 - CC97
WC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes CC98 - CC9F
WC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes CCA0 - CCA7
WCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes CCA8 - CCAF
WCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes CCB0 - CCB7
WCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode CCB8
WCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode CCB9
WCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode CCBA
WCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode CCBB
WCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode CCBC
WCBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+24],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes CCC0 - CCC7
WCC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1522:
add cx,cx
adc dl,0
dec bl
jnz ln1522
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 38
jmp execend
; Opcodes CCD0 - CCD7
WCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1523:
add cx,cx
adc dl,0
dec bl
jnz ln1523
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 42
jmp execend
; Opcodes CCD8 - CCDF
WCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1524:
add cx,cx
adc dl,0
dec bl
jnz ln1524
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 42
jmp execend
; Opcodes CCE0 - CCE7
WCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1525:
add cx,cx
adc dl,0
dec bl
jnz ln1525
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 44
jmp execend
; Opcodes CCE8 - CCEF
WCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1526:
add cx,cx
adc dl,0
dec bl
jnz ln1526
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 46
jmp execend
; Opcodes CCF0 - CCF7
WCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1527:
add cx,cx
adc dl,0
dec bl
jnz ln1527
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 48
jmp execend
; Opcode CCF8
WCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1528:
add cx,cx
adc dl,0
dec bl
jnz ln1528
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 46
jmp execend
; Opcode CCF9
WCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1529:
add cx,cx
adc dl,0
dec bl
jnz ln1529
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 50
jmp execend
; Opcode CCFA
WCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1530:
add cx,cx
adc dl,0
dec bl
jnz ln1530
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 46
jmp execend
; Opcode CCFB
WCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1531:
add cx,cx
adc dl,0
dec bl
jnz ln1531
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 48
jmp execend
; Opcode CCFC
WCFC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1532:
add cx,cx
adc dl,0
dec bl
jnz ln1532
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 42
jmp execend
; Opcodes CD00 - CD07
WD00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+24],al
lahf
mov al,0
setc [__xflag]
jnz short ln1533
or ch,0BFh
and ah,ch
ln1533:
sub edi,byte 6
jmp execend
; Opcodes CD08 - CD0F
WD08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1534
or ch,0BFh
and ah,ch
ln1534:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+24],edx
sub edi,byte 18
jmp execend
; Opcodes CD10 - CD17
WD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes CD18 - CD1F
WD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes CD20 - CD27
WD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes CD28 - CD2F
WD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes CD30 - CD37
WD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode CD38
WD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode CD39
WD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+24]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes CD40 - CD47
WD40:
and ebx,byte 7
mov ecx,[__reg+24]
mov edx,[__reg+0+ebx*4]
mov [__reg+24],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CD48 - CD4F
WD48:
and ebx,byte 7
mov ecx,[__reg+56]
mov edx,[__reg+32+ebx*4]
mov [__reg+56],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CD50 - CD57
WD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes CD58 - CD5F
WD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+24]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes CD60 - CD67
WD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+24]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes CD68 - CD6F
WD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes CD70 - CD77
WD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode CD78
WD78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode CD79
WD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+24]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes CD88 - CD8F
WD88:
and ebx,byte 7
mov ecx,[__reg+24]
mov edx,[__reg+32+ebx*4]
mov [__reg+24],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CD90 - CD97
WD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes CD98 - CD9F
WD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes CDA0 - CDA7
WDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes CDA8 - CDAF
WDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes CDB0 - CDB7
WDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode CDB8
WDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode CDB9
WDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+24]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes CDC0 - CDC7
WDC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1535:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1535
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 38
jmp execend
; Opcodes CDD0 - CDD7
WDD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1536:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1536
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 42
jmp execend
; Opcodes CDD8 - CDDF
WDD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1537:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1537
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 42
jmp execend
; Opcodes CDE0 - CDE7
WDE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1538:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1538
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 44
jmp execend
; Opcodes CDE8 - CDEF
WDE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1539:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1539
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 46
jmp execend
; Opcodes CDF0 - CDF7
WDF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1540:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1540
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 48
jmp execend
; Opcode CDF8
WDF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1541:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1541
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 46
jmp execend
; Opcode CDF9
WDF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1542:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1542
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 50
jmp execend
; Opcode CDFA
WDFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1543:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1543
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 46
jmp execend
; Opcode CDFB
WDFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1544:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1544
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 48
jmp execend
; Opcode CDFC
WDFC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1545:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1545
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+24]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+24],ecx
sub edi,byte 42
jmp execend
; Opcodes CE00 - CE07
WE00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes CE10 - CE17
WE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CE18 - CE1F
WE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CE20 - CE27
WE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes CE28 - CE2F
WE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes CE30 - CE37
WE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CE38
WE38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CE39
WE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode CE3A
WE3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CE3B
WE3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CE3C
WE3C:
mov cx,[esi]
add esi,byte 2
and [__dreg+28],cl
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CE40 - CE47
WE40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 4
jmp execend
; Opcodes CE50 - CE57
WE50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CE58 - CE5F
WE58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CE60 - CE67
WE60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 10
jmp execend
; Opcodes CE68 - CE6F
WE68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcodes CE70 - CE77
WE70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CE78
WE78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CE79
WE79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcode CE7A
WE7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 12
jmp execend
; Opcode CE7B
WE7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcode CE7C
WE7C:
mov cx,[esi]
add esi,byte 2
and [__dreg+28],cx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CE80 - CE87
WE80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
; Opcodes CE90 - CE97
WE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes CE98 - CE9F
WE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 14
jmp execend
; Opcodes CEA0 - CEA7
WEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes CEA8 - CEAF
WEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcodes CEB0 - CEB7
WEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode CEB8
WEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode CEB9
WEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 22
jmp execend
; Opcode CEBA
WEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 18
jmp execend
; Opcode CEBB
WEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 20
jmp execend
; Opcode CEBC
WEBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
and [__dreg+28],ecx
lahf
mov al,0
sub edi,byte 16
jmp execend
; Opcodes CEC0 - CEC7
WEC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1546:
add cx,cx
adc dl,0
dec bl
jnz ln1546
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 38
jmp execend
; Opcodes CED0 - CED7
WED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1547:
add cx,cx
adc dl,0
dec bl
jnz ln1547
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 42
jmp execend
; Opcodes CED8 - CEDF
WED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1548:
add cx,cx
adc dl,0
dec bl
jnz ln1548
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 42
jmp execend
; Opcodes CEE0 - CEE7
WEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1549:
add cx,cx
adc dl,0
dec bl
jnz ln1549
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 44
jmp execend
; Opcodes CEE8 - CEEF
WEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1550:
add cx,cx
adc dl,0
dec bl
jnz ln1550
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 46
jmp execend
; Opcodes CEF0 - CEF7
WEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1551:
add cx,cx
adc dl,0
dec bl
jnz ln1551
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 48
jmp execend
; Opcode CEF8
WEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1552:
add cx,cx
adc dl,0
dec bl
jnz ln1552
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 46
jmp execend
; Opcode CEF9
WEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1553:
add cx,cx
adc dl,0
dec bl
jnz ln1553
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 50
jmp execend
; Opcode CEFA
WEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1554:
add cx,cx
adc dl,0
dec bl
jnz ln1554
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 46
jmp execend
; Opcode CEFB
WEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1555:
add cx,cx
adc dl,0
dec bl
jnz ln1555
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 48
jmp execend
; Opcode CEFC
WEFC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1556:
add cx,cx
adc dl,0
dec bl
jnz ln1556
and edx,byte 127
sub edi,edx
sub edi,edx
mul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 42
jmp execend
; Opcodes CF00 - CF07
WF00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
adc al,[__dreg+ebx*4]
daa
mov [__dreg+28],al
lahf
mov al,0
setc [__xflag]
jnz short ln1557
or ch,0BFh
and ah,ch
ln1557:
sub edi,byte 6
jmp execend
; Opcodes CF08 - CF0F
WF08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 2
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
daa
mov ebx,eax
lahf
mov al,0
setc [__xflag]
jnz short ln1558
or ch,0BFh
and ah,ch
ln1558:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcodes CF10 - CF17
WF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes CF18 - CF1F
WF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes CF20 - CF27
WF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
and cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes CF28 - CF2F
WF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes CF30 - CF37
WF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
and cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode CF38
WF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
and cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode CF39
WF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
and cl,[__dreg+28]
lahf
mov al,0
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes CF40 - CF47
WF40:
and ebx,byte 7
mov ecx,[__reg+28]
mov edx,[__reg+0+ebx*4]
mov [__reg+28],edx
mov [__reg+0+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CF48 - CF4F
WF48:
and ebx,byte 7
mov ecx,[__reg+60]
mov edx,[__reg+32+ebx*4]
mov [__reg+60],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CF50 - CF57
WF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes CF58 - CF5F
WF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+28]
lahf
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes CF60 - CF67
WF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
and cx,[__dreg+28]
lahf
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes CF68 - CF6F
WF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes CF70 - CF77
WF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
and cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode CF78
WF78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
and cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode CF79
WF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
and cx,[__dreg+28]
lahf
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes CF88 - CF8F
WF88:
and ebx,byte 7
mov ecx,[__reg+28]
mov edx,[__reg+32+ebx*4]
mov [__reg+28],edx
mov [__reg+32+ebx*4],ecx
sub edi,byte 6
jmp execend
; Opcodes CF90 - CF97
WF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes CF98 - CF9F
WF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes CFA0 - CFA7
WFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
and ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes CFA8 - CFAF
WFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes CFB0 - CFB7
WFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
and ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 26
jmp execend
; Opcode CFB8
WFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
and ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 24
jmp execend
; Opcode CFB9
WFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
and ecx,[__dreg+28]
lahf
mov al,0
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes CFC0 - CFC7
WFC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
mov eax,ecx
mov dl,0
mov bl,16
ln1559:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1559
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 38
jmp execend
; Opcodes CFD0 - CFD7
WFD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1560:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1560
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 42
jmp execend
; Opcodes CFD8 - CFDF
WFD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1561:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1561
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 42
jmp execend
; Opcodes CFE0 - CFE7
WFE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov eax,ecx
mov dl,0
mov bl,16
ln1562:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1562
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 44
jmp execend
; Opcodes CFE8 - CFEF
WFE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1563:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1563
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 46
jmp execend
; Opcodes CFF0 - CFF7
WFF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1564:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1564
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 48
jmp execend
; Opcode CFF8
WFF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1565:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1565
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 46
jmp execend
; Opcode CFF9
WFF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1566:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1566
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 50
jmp execend
; Opcode CFFA
WFFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1567:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1567
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 46
jmp execend
; Opcode CFFB
WFFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
mov eax,ecx
mov dl,0
mov bl,16
ln1568:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1568
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 48
jmp execend
; Opcode CFFC
WFFC:
mov cx,[esi]
add esi,byte 2
mov eax,ecx
mov dl,0
mov bl,16
ln1569:
add cx,cx
seto dh
add dl,dh
dec bl
jnz ln1569
and edx,byte 127
sub edi,edx
sub edi,edx
imul word[__dreg+28]
shl edx,16
and eax,0FFFFh
mov ecx,edx
or ecx,eax
lahf
mov al,0
mov [__dreg+28],ecx
sub edi,byte 42
jmp execend
; Opcodes D000 - D007
X000:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D010 - D017
X010:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D018 - D01F
X018:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D020 - D027
X020:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D028 - D02F
X028:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D030 - D037
X030:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D038
X038:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D039
X039:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D03A
X03A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D03B
X03B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D03C
X03C:
mov cx,[esi]
add esi,byte 2
add [__dreg+0],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D040 - D047
X040:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D048 - D04F
X048:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D050 - D057
X050:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D058 - D05F
X058:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D060 - D067
X060:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D068 - D06F
X068:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D070 - D077
X070:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D078
X078:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D079
X079:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D07A
X07A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D07B
X07B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D07C
X07C:
mov cx,[esi]
add esi,byte 2
add [__dreg+0],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D080 - D087
X080:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D088 - D08F
X088:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D090 - D097
X090:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D098 - D09F
X098:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D0A0 - D0A7
X0A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D0A8 - D0AF
X0A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes D0B0 - D0B7
X0B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D0B8
X0B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D0B9
X0B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode D0BA
X0BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D0BB
X0BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D0BC
X0BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+0],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D0C0 - D0C7
X0C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes D0C8 - D0CF
X0C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes D0D0 - D0D7
X0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes D0D8 - D0DF
X0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes D0E0 - D0E7
X0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcodes D0E8 - D0EF
X0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcodes D0F0 - D0F7
X0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode D0F8
X0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcode D0F9
X0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+0],ecx
sub edi,byte 20
jmp execend
; Opcode D0FA
X0FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcode D0FB
X0FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode D0FC
X0FC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+0],ecx
sub edi,byte 12
jmp execend
; Opcodes D100 - D107
X100:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
adc al,[__dreg+ebx*4]
mov [__dreg+0],al
lahf
seto al
setc [__xflag]
jnz short ln1570
or ch,0BFh
and ah,ch
ln1570:
sub edi,byte 4
jmp execend
; Opcodes D108 - D10F
X108:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1571
or ch,0BFh
and ah,ch
ln1571:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+0],edx
sub edi,byte 18
jmp execend
; Opcodes D110 - D117
X110:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes D118 - D11F
X118:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D120 - D127
X120:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D128 - D12F
X128:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes D130 - D137
X130:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode D138
X138:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode D139
X139:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes D140 - D147
X140:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
adc ax,[__dreg+ebx*4]
mov [__dreg+0],ax
lahf
seto al
setc [__xflag]
jnz short ln1572
or ch,0BFh
and ah,ch
ln1572:
sub edi,byte 4
jmp execend
; Opcodes D148 - D14F
X148:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1573
or ch,0BFh
and ah,ch
ln1573:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+0],edx
sub edi,byte 18
jmp execend
; Opcodes D150 - D157
X150:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes D158 - D15F
X158:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D160 - D167
X160:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D168 - D16F
X168:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes D170 - D177
X170:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode D178
X178:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode D179
X179:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes D180 - D187
X180:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+0]
adc eax,[__dreg+ebx*4]
mov [__dreg+0],eax
lahf
seto al
setc [__xflag]
jnz short ln1574
or ch,0BFh
and ah,ch
ln1574:
sub edi,byte 8
jmp execend
; Opcodes D188 - D18F
X188:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+0]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1575
or ch,0BFh
and ah,ch
ln1575:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+0],edx
sub edi,byte 30
jmp execend
; Opcodes D190 - D197
X190:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes D198 - D19F
X198:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes D1A0 - D1A7
X1A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes D1A8 - D1AF
X1A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes D1B0 - D1B7
X1B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode D1B8
X1B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode D1B9
X1B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+0]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes D1C0 - D1C7
X1C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes D1C8 - D1CF
X1C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+0],ecx
sub edi,byte 8
jmp execend
; Opcodes D1D0 - D1D7
X1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcodes D1D8 - D1DF
X1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+0],ecx
sub edi,byte 14
jmp execend
; Opcodes D1E0 - D1E7
X1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcodes D1E8 - D1EF
X1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcodes D1F0 - D1F7
X1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+0],ecx
sub edi,byte 20
jmp execend
; Opcode D1F8
X1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode D1F9
X1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+0],ecx
sub edi,byte 22
jmp execend
; Opcode D1FA
X1FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+0],ecx
sub edi,byte 18
jmp execend
; Opcode D1FB
X1FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+0],ecx
sub edi,byte 20
jmp execend
; Opcode D1FC
X1FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+0],ecx
sub edi,byte 16
jmp execend
; Opcodes D200 - D207
X200:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D210 - D217
X210:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D218 - D21F
X218:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D220 - D227
X220:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D228 - D22F
X228:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D230 - D237
X230:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D238
X238:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D239
X239:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D23A
X23A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D23B
X23B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D23C
X23C:
mov cx,[esi]
add esi,byte 2
add [__dreg+4],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D240 - D247
X240:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D248 - D24F
X248:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D250 - D257
X250:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D258 - D25F
X258:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D260 - D267
X260:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D268 - D26F
X268:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D270 - D277
X270:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D278
X278:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D279
X279:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D27A
X27A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D27B
X27B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D27C
X27C:
mov cx,[esi]
add esi,byte 2
add [__dreg+4],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D280 - D287
X280:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D288 - D28F
X288:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D290 - D297
X290:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D298 - D29F
X298:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D2A0 - D2A7
X2A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D2A8 - D2AF
X2A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes D2B0 - D2B7
X2B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D2B8
X2B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D2B9
X2B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode D2BA
X2BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D2BB
X2BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D2BC
X2BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+4],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D2C0 - D2C7
X2C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes D2C8 - D2CF
X2C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes D2D0 - D2D7
X2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes D2D8 - D2DF
X2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes D2E0 - D2E7
X2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcodes D2E8 - D2EF
X2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcodes D2F0 - D2F7
X2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode D2F8
X2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcode D2F9
X2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+4],ecx
sub edi,byte 20
jmp execend
; Opcode D2FA
X2FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcode D2FB
X2FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode D2FC
X2FC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+4],ecx
sub edi,byte 12
jmp execend
; Opcodes D300 - D307
X300:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
adc al,[__dreg+ebx*4]
mov [__dreg+4],al
lahf
seto al
setc [__xflag]
jnz short ln1576
or ch,0BFh
and ah,ch
ln1576:
sub edi,byte 4
jmp execend
; Opcodes D308 - D30F
X308:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1577
or ch,0BFh
and ah,ch
ln1577:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+4],edx
sub edi,byte 18
jmp execend
; Opcodes D310 - D317
X310:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes D318 - D31F
X318:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D320 - D327
X320:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D328 - D32F
X328:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes D330 - D337
X330:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode D338
X338:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode D339
X339:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes D340 - D347
X340:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
adc ax,[__dreg+ebx*4]
mov [__dreg+4],ax
lahf
seto al
setc [__xflag]
jnz short ln1578
or ch,0BFh
and ah,ch
ln1578:
sub edi,byte 4
jmp execend
; Opcodes D348 - D34F
X348:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1579
or ch,0BFh
and ah,ch
ln1579:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+4],edx
sub edi,byte 18
jmp execend
; Opcodes D350 - D357
X350:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes D358 - D35F
X358:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D360 - D367
X360:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D368 - D36F
X368:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes D370 - D377
X370:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode D378
X378:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode D379
X379:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes D380 - D387
X380:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+4]
adc eax,[__dreg+ebx*4]
mov [__dreg+4],eax
lahf
seto al
setc [__xflag]
jnz short ln1580
or ch,0BFh
and ah,ch
ln1580:
sub edi,byte 8
jmp execend
; Opcodes D388 - D38F
X388:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+4]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1581
or ch,0BFh
and ah,ch
ln1581:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+4],edx
sub edi,byte 30
jmp execend
; Opcodes D390 - D397
X390:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes D398 - D39F
X398:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes D3A0 - D3A7
X3A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes D3A8 - D3AF
X3A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes D3B0 - D3B7
X3B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode D3B8
X3B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode D3B9
X3B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+4]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes D3C0 - D3C7
X3C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes D3C8 - D3CF
X3C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+4],ecx
sub edi,byte 8
jmp execend
; Opcodes D3D0 - D3D7
X3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcodes D3D8 - D3DF
X3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+4],ecx
sub edi,byte 14
jmp execend
; Opcodes D3E0 - D3E7
X3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcodes D3E8 - D3EF
X3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcodes D3F0 - D3F7
X3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+4],ecx
sub edi,byte 20
jmp execend
; Opcode D3F8
X3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode D3F9
X3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+4],ecx
sub edi,byte 22
jmp execend
; Opcode D3FA
X3FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+4],ecx
sub edi,byte 18
jmp execend
; Opcode D3FB
X3FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+4],ecx
sub edi,byte 20
jmp execend
; Opcode D3FC
X3FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+4],ecx
sub edi,byte 16
jmp execend
; Opcodes D400 - D407
X400:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D410 - D417
X410:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D418 - D41F
X418:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D420 - D427
X420:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D428 - D42F
X428:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D430 - D437
X430:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D438
X438:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D439
X439:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D43A
X43A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D43B
X43B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D43C
X43C:
mov cx,[esi]
add esi,byte 2
add [__dreg+8],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D440 - D447
X440:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D448 - D44F
X448:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D450 - D457
X450:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D458 - D45F
X458:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D460 - D467
X460:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D468 - D46F
X468:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D470 - D477
X470:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D478
X478:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D479
X479:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D47A
X47A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D47B
X47B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D47C
X47C:
mov cx,[esi]
add esi,byte 2
add [__dreg+8],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D480 - D487
X480:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D488 - D48F
X488:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D490 - D497
X490:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D498 - D49F
X498:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D4A0 - D4A7
X4A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D4A8 - D4AF
X4A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes D4B0 - D4B7
X4B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D4B8
X4B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D4B9
X4B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode D4BA
X4BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D4BB
X4BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D4BC
X4BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+8],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D4C0 - D4C7
X4C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes D4C8 - D4CF
X4C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes D4D0 - D4D7
X4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes D4D8 - D4DF
X4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes D4E0 - D4E7
X4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcodes D4E8 - D4EF
X4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcodes D4F0 - D4F7
X4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode D4F8
X4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcode D4F9
X4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+8],ecx
sub edi,byte 20
jmp execend
; Opcode D4FA
X4FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcode D4FB
X4FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode D4FC
X4FC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+8],ecx
sub edi,byte 12
jmp execend
; Opcodes D500 - D507
X500:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
adc al,[__dreg+ebx*4]
mov [__dreg+8],al
lahf
seto al
setc [__xflag]
jnz short ln1582
or ch,0BFh
and ah,ch
ln1582:
sub edi,byte 4
jmp execend
; Opcodes D508 - D50F
X508:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1583
or ch,0BFh
and ah,ch
ln1583:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+8],edx
sub edi,byte 18
jmp execend
; Opcodes D510 - D517
X510:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes D518 - D51F
X518:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D520 - D527
X520:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D528 - D52F
X528:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes D530 - D537
X530:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode D538
X538:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode D539
X539:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes D540 - D547
X540:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
adc ax,[__dreg+ebx*4]
mov [__dreg+8],ax
lahf
seto al
setc [__xflag]
jnz short ln1584
or ch,0BFh
and ah,ch
ln1584:
sub edi,byte 4
jmp execend
; Opcodes D548 - D54F
X548:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1585
or ch,0BFh
and ah,ch
ln1585:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+8],edx
sub edi,byte 18
jmp execend
; Opcodes D550 - D557
X550:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes D558 - D55F
X558:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D560 - D567
X560:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D568 - D56F
X568:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes D570 - D577
X570:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode D578
X578:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode D579
X579:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes D580 - D587
X580:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+8]
adc eax,[__dreg+ebx*4]
mov [__dreg+8],eax
lahf
seto al
setc [__xflag]
jnz short ln1586
or ch,0BFh
and ah,ch
ln1586:
sub edi,byte 8
jmp execend
; Opcodes D588 - D58F
X588:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+8]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1587
or ch,0BFh
and ah,ch
ln1587:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+8],edx
sub edi,byte 30
jmp execend
; Opcodes D590 - D597
X590:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes D598 - D59F
X598:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes D5A0 - D5A7
X5A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes D5A8 - D5AF
X5A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes D5B0 - D5B7
X5B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode D5B8
X5B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode D5B9
X5B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+8]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes D5C0 - D5C7
X5C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes D5C8 - D5CF
X5C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+8],ecx
sub edi,byte 8
jmp execend
; Opcodes D5D0 - D5D7
X5D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcodes D5D8 - D5DF
X5D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+8],ecx
sub edi,byte 14
jmp execend
; Opcodes D5E0 - D5E7
X5E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcodes D5E8 - D5EF
X5E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcodes D5F0 - D5F7
X5F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+8],ecx
sub edi,byte 20
jmp execend
; Opcode D5F8
X5F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode D5F9
X5F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+8],ecx
sub edi,byte 22
jmp execend
; Opcode D5FA
X5FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+8],ecx
sub edi,byte 18
jmp execend
; Opcode D5FB
X5FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+8],ecx
sub edi,byte 20
jmp execend
; Opcode D5FC
X5FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+8],ecx
sub edi,byte 16
jmp execend
; Opcodes D600 - D607
X600:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D610 - D617
X610:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D618 - D61F
X618:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D620 - D627
X620:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D628 - D62F
X628:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D630 - D637
X630:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D638
X638:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D639
X639:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D63A
X63A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D63B
X63B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D63C
X63C:
mov cx,[esi]
add esi,byte 2
add [__dreg+12],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D640 - D647
X640:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D648 - D64F
X648:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D650 - D657
X650:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D658 - D65F
X658:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D660 - D667
X660:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D668 - D66F
X668:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D670 - D677
X670:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D678
X678:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D679
X679:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D67A
X67A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D67B
X67B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D67C
X67C:
mov cx,[esi]
add esi,byte 2
add [__dreg+12],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D680 - D687
X680:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D688 - D68F
X688:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D690 - D697
X690:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D698 - D69F
X698:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D6A0 - D6A7
X6A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D6A8 - D6AF
X6A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes D6B0 - D6B7
X6B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D6B8
X6B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D6B9
X6B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode D6BA
X6BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D6BB
X6BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D6BC
X6BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+12],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D6C0 - D6C7
X6C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes D6C8 - D6CF
X6C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes D6D0 - D6D7
X6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes D6D8 - D6DF
X6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes D6E0 - D6E7
X6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcodes D6E8 - D6EF
X6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcodes D6F0 - D6F7
X6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode D6F8
X6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcode D6F9
X6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+12],ecx
sub edi,byte 20
jmp execend
; Opcode D6FA
X6FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcode D6FB
X6FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode D6FC
X6FC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+12],ecx
sub edi,byte 12
jmp execend
; Opcodes D700 - D707
X700:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
adc al,[__dreg+ebx*4]
mov [__dreg+12],al
lahf
seto al
setc [__xflag]
jnz short ln1588
or ch,0BFh
and ah,ch
ln1588:
sub edi,byte 4
jmp execend
; Opcodes D708 - D70F
X708:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1589
or ch,0BFh
and ah,ch
ln1589:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+12],edx
sub edi,byte 18
jmp execend
; Opcodes D710 - D717
X710:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes D718 - D71F
X718:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D720 - D727
X720:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D728 - D72F
X728:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes D730 - D737
X730:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode D738
X738:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode D739
X739:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes D740 - D747
X740:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
adc ax,[__dreg+ebx*4]
mov [__dreg+12],ax
lahf
seto al
setc [__xflag]
jnz short ln1590
or ch,0BFh
and ah,ch
ln1590:
sub edi,byte 4
jmp execend
; Opcodes D748 - D74F
X748:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1591
or ch,0BFh
and ah,ch
ln1591:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+12],edx
sub edi,byte 18
jmp execend
; Opcodes D750 - D757
X750:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes D758 - D75F
X758:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D760 - D767
X760:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D768 - D76F
X768:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes D770 - D777
X770:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode D778
X778:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode D779
X779:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes D780 - D787
X780:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+12]
adc eax,[__dreg+ebx*4]
mov [__dreg+12],eax
lahf
seto al
setc [__xflag]
jnz short ln1592
or ch,0BFh
and ah,ch
ln1592:
sub edi,byte 8
jmp execend
; Opcodes D788 - D78F
X788:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+12]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1593
or ch,0BFh
and ah,ch
ln1593:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+12],edx
sub edi,byte 30
jmp execend
; Opcodes D790 - D797
X790:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes D798 - D79F
X798:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes D7A0 - D7A7
X7A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes D7A8 - D7AF
X7A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes D7B0 - D7B7
X7B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode D7B8
X7B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode D7B9
X7B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+12]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes D7C0 - D7C7
X7C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes D7C8 - D7CF
X7C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+12],ecx
sub edi,byte 8
jmp execend
; Opcodes D7D0 - D7D7
X7D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcodes D7D8 - D7DF
X7D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+12],ecx
sub edi,byte 14
jmp execend
; Opcodes D7E0 - D7E7
X7E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcodes D7E8 - D7EF
X7E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcodes D7F0 - D7F7
X7F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+12],ecx
sub edi,byte 20
jmp execend
; Opcode D7F8
X7F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode D7F9
X7F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+12],ecx
sub edi,byte 22
jmp execend
; Opcode D7FA
X7FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+12],ecx
sub edi,byte 18
jmp execend
; Opcode D7FB
X7FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+12],ecx
sub edi,byte 20
jmp execend
; Opcode D7FC
X7FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+12],ecx
sub edi,byte 16
jmp execend
; Opcodes D800 - D807
X800:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D810 - D817
X810:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D818 - D81F
X818:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D820 - D827
X820:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D828 - D82F
X828:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D830 - D837
X830:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D838
X838:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D839
X839:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D83A
X83A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D83B
X83B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D83C
X83C:
mov cx,[esi]
add esi,byte 2
add [__dreg+16],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D840 - D847
X840:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D848 - D84F
X848:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes D850 - D857
X850:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D858 - D85F
X858:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D860 - D867
X860:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes D868 - D86F
X868:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes D870 - D877
X870:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D878
X878:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D879
X879:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode D87A
X87A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode D87B
X87B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode D87C
X87C:
mov cx,[esi]
add esi,byte 2
add [__dreg+16],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D880 - D887
X880:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D888 - D88F
X888:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes D890 - D897
X890:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D898 - D89F
X898:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes D8A0 - D8A7
X8A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D8A8 - D8AF
X8A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes D8B0 - D8B7
X8B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D8B8
X8B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D8B9
X8B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode D8BA
X8BA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode D8BB
X8BB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode D8BC
X8BC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+16],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes D8C0 - D8C7
X8C0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes D8C8 - D8CF
X8C8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes D8D0 - D8D7
X8D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes D8D8 - D8DF
X8D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes D8E0 - D8E7
X8E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcodes D8E8 - D8EF
X8E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcodes D8F0 - D8F7
X8F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode D8F8
X8F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcode D8F9
X8F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+16],ecx
sub edi,byte 20
jmp execend
; Opcode D8FA
X8FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcode D8FB
X8FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode D8FC
X8FC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+16],ecx
sub edi,byte 12
jmp execend
; Opcodes D900 - D907
X900:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
adc al,[__dreg+ebx*4]
mov [__dreg+16],al
lahf
seto al
setc [__xflag]
jnz short ln1594
or ch,0BFh
and ah,ch
ln1594:
sub edi,byte 4
jmp execend
; Opcodes D908 - D90F
X908:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1595
or ch,0BFh
and ah,ch
ln1595:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+16],edx
sub edi,byte 18
jmp execend
; Opcodes D910 - D917
X910:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes D918 - D91F
X918:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D920 - D927
X920:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D928 - D92F
X928:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes D930 - D937
X930:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode D938
X938:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode D939
X939:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes D940 - D947
X940:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
adc ax,[__dreg+ebx*4]
mov [__dreg+16],ax
lahf
seto al
setc [__xflag]
jnz short ln1596
or ch,0BFh
and ah,ch
ln1596:
sub edi,byte 4
jmp execend
; Opcodes D948 - D94F
X948:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1597
or ch,0BFh
and ah,ch
ln1597:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+16],edx
sub edi,byte 18
jmp execend
; Opcodes D950 - D957
X950:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes D958 - D95F
X958:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes D960 - D967
X960:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes D968 - D96F
X968:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes D970 - D977
X970:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode D978
X978:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode D979
X979:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes D980 - D987
X980:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+16]
adc eax,[__dreg+ebx*4]
mov [__dreg+16],eax
lahf
seto al
setc [__xflag]
jnz short ln1598
or ch,0BFh
and ah,ch
ln1598:
sub edi,byte 8
jmp execend
; Opcodes D988 - D98F
X988:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+16]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1599
or ch,0BFh
and ah,ch
ln1599:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+16],edx
sub edi,byte 30
jmp execend
; Opcodes D990 - D997
X990:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes D998 - D99F
X998:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes D9A0 - D9A7
X9A0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes D9A8 - D9AF
X9A8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes D9B0 - D9B7
X9B0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode D9B8
X9B8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode D9B9
X9B9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+16]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes D9C0 - D9C7
X9C0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes D9C8 - D9CF
X9C8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+16],ecx
sub edi,byte 8
jmp execend
; Opcodes D9D0 - D9D7
X9D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcodes D9D8 - D9DF
X9D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+16],ecx
sub edi,byte 14
jmp execend
; Opcodes D9E0 - D9E7
X9E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcodes D9E8 - D9EF
X9E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcodes D9F0 - D9F7
X9F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+16],ecx
sub edi,byte 20
jmp execend
; Opcode D9F8
X9F8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode D9F9
X9F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+16],ecx
sub edi,byte 22
jmp execend
; Opcode D9FA
X9FA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+16],ecx
sub edi,byte 18
jmp execend
; Opcode D9FB
X9FB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+16],ecx
sub edi,byte 20
jmp execend
; Opcode D9FC
X9FC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+16],ecx
sub edi,byte 16
jmp execend
; Opcodes DA00 - DA07
XA00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DA10 - DA17
XA10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA18 - DA1F
XA18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA20 - DA27
XA20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes DA28 - DA2F
XA28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes DA30 - DA37
XA30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DA38
XA38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DA39
XA39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode DA3A
XA3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DA3B
XA3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DA3C
XA3C:
mov cx,[esi]
add esi,byte 2
add [__dreg+20],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA40 - DA47
XA40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DA48 - DA4F
XA48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DA50 - DA57
XA50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA58 - DA5F
XA58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA60 - DA67
XA60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes DA68 - DA6F
XA68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes DA70 - DA77
XA70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DA78
XA78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DA79
XA79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode DA7A
XA7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DA7B
XA7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DA7C
XA7C:
mov cx,[esi]
add esi,byte 2
add [__dreg+20],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA80 - DA87
XA80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA88 - DA8F
XA88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DA90 - DA97
XA90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes DA98 - DA9F
XA98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes DAA0 - DAA7
XAA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes DAA8 - DAAF
XAA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes DAB0 - DAB7
XAB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode DAB8
XAB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode DAB9
XAB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode DABA
XABA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode DABB
XABB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode DABC
XABC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+20],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes DAC0 - DAC7
XAC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes DAC8 - DACF
XAC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes DAD0 - DAD7
XAD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes DAD8 - DADF
XAD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes DAE0 - DAE7
XAE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcodes DAE8 - DAEF
XAE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcodes DAF0 - DAF7
XAF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode DAF8
XAF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcode DAF9
XAF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+20],ecx
sub edi,byte 20
jmp execend
; Opcode DAFA
XAFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcode DAFB
XAFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode DAFC
XAFC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+20],ecx
sub edi,byte 12
jmp execend
; Opcodes DB00 - DB07
XB00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
adc al,[__dreg+ebx*4]
mov [__dreg+20],al
lahf
seto al
setc [__xflag]
jnz short ln1600
or ch,0BFh
and ah,ch
ln1600:
sub edi,byte 4
jmp execend
; Opcodes DB08 - DB0F
XB08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1601
or ch,0BFh
and ah,ch
ln1601:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+20],edx
sub edi,byte 18
jmp execend
; Opcodes DB10 - DB17
XB10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes DB18 - DB1F
XB18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes DB20 - DB27
XB20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes DB28 - DB2F
XB28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes DB30 - DB37
XB30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode DB38
XB38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode DB39
XB39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes DB40 - DB47
XB40:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
adc ax,[__dreg+ebx*4]
mov [__dreg+20],ax
lahf
seto al
setc [__xflag]
jnz short ln1602
or ch,0BFh
and ah,ch
ln1602:
sub edi,byte 4
jmp execend
; Opcodes DB48 - DB4F
XB48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1603
or ch,0BFh
and ah,ch
ln1603:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+20],edx
sub edi,byte 18
jmp execend
; Opcodes DB50 - DB57
XB50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes DB58 - DB5F
XB58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes DB60 - DB67
XB60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes DB68 - DB6F
XB68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes DB70 - DB77
XB70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode DB78
XB78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode DB79
XB79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes DB80 - DB87
XB80:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+20]
adc eax,[__dreg+ebx*4]
mov [__dreg+20],eax
lahf
seto al
setc [__xflag]
jnz short ln1604
or ch,0BFh
and ah,ch
ln1604:
sub edi,byte 8
jmp execend
; Opcodes DB88 - DB8F
XB88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+20]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1605
or ch,0BFh
and ah,ch
ln1605:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+20],edx
sub edi,byte 30
jmp execend
; Opcodes DB90 - DB97
XB90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes DB98 - DB9F
XB98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes DBA0 - DBA7
XBA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes DBA8 - DBAF
XBA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes DBB0 - DBB7
XBB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode DBB8
XBB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode DBB9
XBB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+20]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes DBC0 - DBC7
XBC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes DBC8 - DBCF
XBC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+20],ecx
sub edi,byte 8
jmp execend
; Opcodes DBD0 - DBD7
XBD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcodes DBD8 - DBDF
XBD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+20],ecx
sub edi,byte 14
jmp execend
; Opcodes DBE0 - DBE7
XBE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcodes DBE8 - DBEF
XBE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcodes DBF0 - DBF7
XBF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+20],ecx
sub edi,byte 20
jmp execend
; Opcode DBF8
XBF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode DBF9
XBF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+20],ecx
sub edi,byte 22
jmp execend
; Opcode DBFA
XBFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+20],ecx
sub edi,byte 18
jmp execend
; Opcode DBFB
XBFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+20],ecx
sub edi,byte 20
jmp execend
; Opcode DBFC
XBFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+20],ecx
sub edi,byte 16
jmp execend
; Opcodes DC00 - DC07
XC00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DC10 - DC17
XC10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC18 - DC1F
XC18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC20 - DC27
XC20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes DC28 - DC2F
XC28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes DC30 - DC37
XC30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DC38
XC38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DC39
XC39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode DC3A
XC3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DC3B
XC3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DC3C
XC3C:
mov cx,[esi]
add esi,byte 2
add [__dreg+24],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC40 - DC47
XC40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DC48 - DC4F
XC48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DC50 - DC57
XC50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC58 - DC5F
XC58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC60 - DC67
XC60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes DC68 - DC6F
XC68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes DC70 - DC77
XC70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DC78
XC78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DC79
XC79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode DC7A
XC7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DC7B
XC7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DC7C
XC7C:
mov cx,[esi]
add esi,byte 2
add [__dreg+24],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC80 - DC87
XC80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC88 - DC8F
XC88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DC90 - DC97
XC90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes DC98 - DC9F
XC98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes DCA0 - DCA7
XCA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes DCA8 - DCAF
XCA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes DCB0 - DCB7
XCB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode DCB8
XCB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode DCB9
XCB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode DCBA
XCBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode DCBB
XCBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode DCBC
XCBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+24],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes DCC0 - DCC7
XCC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes DCC8 - DCCF
XCC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes DCD0 - DCD7
XCD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes DCD8 - DCDF
XCD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes DCE0 - DCE7
XCE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcodes DCE8 - DCEF
XCE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcodes DCF0 - DCF7
XCF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode DCF8
XCF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcode DCF9
XCF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+24],ecx
sub edi,byte 20
jmp execend
; Opcode DCFA
XCFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcode DCFB
XCFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode DCFC
XCFC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+24],ecx
sub edi,byte 12
jmp execend
; Opcodes DD00 - DD07
XD00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
adc al,[__dreg+ebx*4]
mov [__dreg+24],al
lahf
seto al
setc [__xflag]
jnz short ln1606
or ch,0BFh
and ah,ch
ln1606:
sub edi,byte 4
jmp execend
; Opcodes DD08 - DD0F
XD08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
dec edx
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1607
or ch,0BFh
and ah,ch
ln1607:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+24],edx
sub edi,byte 18
jmp execend
; Opcodes DD10 - DD17
XD10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes DD18 - DD1F
XD18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes DD20 - DD27
XD20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes DD28 - DD2F
XD28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes DD30 - DD37
XD30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode DD38
XD38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode DD39
XD39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes DD40 - DD47
XD40:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
adc ax,[__dreg+ebx*4]
mov [__dreg+24],ax
lahf
seto al
setc [__xflag]
jnz short ln1608
or ch,0BFh
and ah,ch
ln1608:
sub edi,byte 4
jmp execend
; Opcodes DD48 - DD4F
XD48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1609
or ch,0BFh
and ah,ch
ln1609:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+24],edx
sub edi,byte 18
jmp execend
; Opcodes DD50 - DD57
XD50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes DD58 - DD5F
XD58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes DD60 - DD67
XD60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes DD68 - DD6F
XD68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes DD70 - DD77
XD70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode DD78
XD78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode DD79
XD79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes DD80 - DD87
XD80:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+24]
adc eax,[__dreg+ebx*4]
mov [__dreg+24],eax
lahf
seto al
setc [__xflag]
jnz short ln1610
or ch,0BFh
and ah,ch
ln1610:
sub edi,byte 8
jmp execend
; Opcodes DD88 - DD8F
XD88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+24]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1611
or ch,0BFh
and ah,ch
ln1611:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+24],edx
sub edi,byte 30
jmp execend
; Opcodes DD90 - DD97
XD90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes DD98 - DD9F
XD98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes DDA0 - DDA7
XDA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes DDA8 - DDAF
XDA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes DDB0 - DDB7
XDB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode DDB8
XDB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode DDB9
XDB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+24]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes DDC0 - DDC7
XDC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes DDC8 - DDCF
XDC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+24],ecx
sub edi,byte 8
jmp execend
; Opcodes DDD0 - DDD7
XDD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcodes DDD8 - DDDF
XDD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+24],ecx
sub edi,byte 14
jmp execend
; Opcodes DDE0 - DDE7
XDE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcodes DDE8 - DDEF
XDE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcodes DDF0 - DDF7
XDF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+24],ecx
sub edi,byte 20
jmp execend
; Opcode DDF8
XDF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode DDF9
XDF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+24],ecx
sub edi,byte 22
jmp execend
; Opcode DDFA
XDFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+24],ecx
sub edi,byte 18
jmp execend
; Opcode DDFB
XDFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+24],ecx
sub edi,byte 20
jmp execend
; Opcode DDFC
XDFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+24],ecx
sub edi,byte 16
jmp execend
; Opcodes DE00 - DE07
XE00:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DE10 - DE17
XE10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE18 - DE1F
XE18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE20 - DE27
XE20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes DE28 - DE2F
XE28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes DE30 - DE37
XE30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DE38
XE38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DE39
XE39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode DE3A
XE3A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorybyte
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DE3B
XE3B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorybyte
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DE3C
XE3C:
mov cx,[esi]
add esi,byte 2
add [__dreg+28],cl
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE40 - DE47
XE40:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DE48 - DE4F
XE48:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 4
jmp execend
; Opcodes DE50 - DE57
XE50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE58 - DE5F
XE58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add edx,byte 2
mov [__areg+ebx*4],edx
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE60 - DE67
XE60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes DE68 - DE6F
XE68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes DE70 - DE77
XE70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DE78
XE78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DE79
XE79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcode DE7A
XE7A:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcode DE7B
XE7B:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcode DE7C
XE7C:
mov cx,[esi]
add esi,byte 2
add [__dreg+28],cx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE80 - DE87
XE80:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE88 - DE8F
XE88:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes DE90 - DE97
XE90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes DE98 - DE9F
XE98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes DEA0 - DEA7
XEA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes DEA8 - DEAF
XEA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes DEB0 - DEB7
XEB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode DEB8
XEB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode DEB9
XEB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcode DEBA
XEBA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcode DEBB
XEBB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcode DEBC
XEBC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__dreg+28],ecx
lahf
seto al
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes DEC0 - DEC7
XEC0:
and ebx,byte 7
movsx ecx,word[__dreg+ebx*4]
add [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes DEC8 - DECF
XEC8:
and ebx,byte 7
movsx ecx,word[__areg+ebx*4]
add [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes DED0 - DED7
XED0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes DED8 - DEDF
XED8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add edx,byte 2
mov [__areg+ebx*4],edx
add [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes DEE0 - DEE7
XEE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
movsx ecx,cx
mov [__areg+ebx*4],edx
add [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcodes DEE8 - DEEF
XEE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcodes DEF0 - DEF7
XEF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
movsx ecx,cx
add [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode DEF8
XEF8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcode DEF9
XEF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
movsx ecx,cx
add [__areg+28],ecx
sub edi,byte 20
jmp execend
; Opcode DEFA
XEFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcode DEFB
XEFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemoryword
movsx ecx,cx
add [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode DEFC
XEFC:
movsx ecx,word[esi]
add esi,byte 2
add [__areg+28],ecx
sub edi,byte 12
jmp execend
; Opcodes DF00 - DF07
XF00:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
adc al,[__dreg+ebx*4]
mov [__dreg+28],al
lahf
seto al
setc [__xflag]
jnz short ln1612
or ch,0BFh
and ah,ch
ln1612:
sub edi,byte 4
jmp execend
; Opcodes DF08 - DF0F
XF08:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 2
call readmemorybyte
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc al,bl
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1613
or ch,0BFh
and ah,ch
ln1613:
mov ecx,ebx
xor ebx,ebx
call writememorybyte
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcodes DF10 - DF17
XF10:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 12
jmp execend
; Opcodes DF18 - DF1F
XF18:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
cmp bl,7
sbb edx,byte -2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes DF20 - DF27
XF20:
and ebx,byte 7
mov edx,[__areg+ebx*4]
cmp bl,7
adc edx,byte -2
call readmemorybyte
add cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes DF28 - DF2F
XF28:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcodes DF30 - DF37
XF30:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorybyte
add cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 18
jmp execend
; Opcode DF38
XF38:
movsx edx,word[esi]
add esi,byte 2
call readmemorybyte
add cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 16
jmp execend
; Opcode DF39
XF39:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorybyte
add cl,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorybyte
sub edi,byte 20
jmp execend
; Opcodes DF40 - DF47
XF40:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
adc ax,[__dreg+ebx*4]
mov [__dreg+28],ax
lahf
seto al
setc [__xflag]
jnz short ln1614
or ch,0BFh
and ah,ch
ln1614:
sub edi,byte 4
jmp execend
; Opcodes DF48 - DF4F
XF48:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 2
call readmemoryword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc ax,bx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1615
or ch,0BFh
and ah,ch
ln1615:
mov ecx,ebx
xor ebx,ebx
call writememoryword
mov [__areg+28],edx
sub edi,byte 18
jmp execend
; Opcodes DF50 - DF57
XF50:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes DF58 - DF5F
XF58:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes DF60 - DF67
XF60:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
add cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes DF68 - DF6F
XF68:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes DF70 - DF77
XF70:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
add cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode DF78
XF78:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
add cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode DF79
XF79:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
add cx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes DF80 - DF87
XF80:
and ebx,byte 7
mov ch,ah
mov cl,[__xflag]
shr cl,1
mov eax,[__dreg+28]
adc eax,[__dreg+ebx*4]
mov [__dreg+28],eax
lahf
seto al
setc [__xflag]
jnz short ln1616
or ch,0BFh
and ah,ch
ln1616:
sub edi,byte 8
jmp execend
; Opcodes DF88 - DF8F
XF88:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
mov ebx,ecx
mov edx,[__areg+28]
sub edx,byte 4
call readmemorydword
xchg ecx,eax
mov cl,[__xflag]
shr cl,1
adc eax,ebx
mov ebx,eax
lahf
seto al
setc [__xflag]
jnz short ln1617
or ch,0BFh
and ah,ch
ln1617:
mov ecx,ebx
xor ebx,ebx
call writememorydword
mov [__areg+28],edx
sub edi,byte 30
jmp execend
; Opcodes DF90 - DF97
XF90:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 20
jmp execend
; Opcodes DF98 - DF9F
XF98:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
add edx,byte 4
mov [__areg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes DFA0 - DFA7
XFA0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
add ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
mov [__areg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes DFA8 - DFAF
XFA8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcodes DFB0 - DFB7
XFB0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 26
jmp execend
; Opcode DFB8
XFB8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 24
jmp execend
; Opcode DFB9
XFB9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add ecx,[__dreg+28]
lahf
seto al
setc [__xflag]
call writememorydword
sub edi,byte 28
jmp execend
; Opcodes DFC0 - DFC7
XFC0:
and ebx,byte 7
mov ecx,[__dreg+ebx*4]
add [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes DFC8 - DFCF
XFC8:
and ebx,byte 7
mov ecx,[__areg+ebx*4]
add [__areg+28],ecx
sub edi,byte 8
jmp execend
; Opcodes DFD0 - DFD7
XFD0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcodes DFD8 - DFDF
XFD8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemorydword
add edx,byte 4
mov [__areg+ebx*4],edx
add [__areg+28],ecx
sub edi,byte 14
jmp execend
; Opcodes DFE0 - DFE7
XFE0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 4
call readmemorydword
mov [__areg+ebx*4],edx
add [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcodes DFE8 - DFEF
XFE8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcodes DFF0 - DFF7
XFF0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemorydword
add [__areg+28],ecx
sub edi,byte 20
jmp execend
; Opcode DFF8
XFF8:
movsx edx,word[esi]
add esi,byte 2
call readmemorydword
add [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode DFF9
XFF9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemorydword
add [__areg+28],ecx
sub edi,byte 22
jmp execend
; Opcode DFFA
XFFA:
movsx edx,word[esi]
add edx,esi
sub edx,ebp
add esi,byte 2
call readmemorydword
add [__areg+28],ecx
sub edi,byte 18
jmp execend
; Opcode DFFB
XFFB:
call decode_ext
add edx,esi
sub edx,ebp
sub edx,byte 2
call readmemorydword
add [__areg+28],ecx
sub edi,byte 20
jmp execend
; Opcode DFFC
XFFC:
mov ecx,[esi]
add esi,byte 4
rol ecx,16
add [__areg+28],ecx
sub edi,byte 16
jmp execend
; Opcodes E000 - E007
Y000:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes E008 - E00F
Y008:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes E010 - E017
Y010:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,8
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 22
jmp execend
; Opcodes E018 - E01F
Y018:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,8
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 22
jmp execend
; Opcodes E020 - E027
Y020:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1618
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1618:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1619
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln1620
ln1619:
sar byte[__dreg+ebx*4],cl
ln1620:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E028 - E02F
Y028:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1621
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1621:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1622
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln1623
ln1622:
shr byte[__dreg+ebx*4],cl
ln1623:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E030 - E037
Y030:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1624
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1624:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1625
rcr dl, 16
sub cl, 31
rcr dl, 15
ln1625:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E038 - E03F
Y038:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1626
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1626:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1627
ror dl, 16
sub cl, 31
ror dl, 15
ln1627:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E040 - E047
Y040:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes E048 - E04F
Y048:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes E050 - E057
Y050:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,8
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 22
jmp execend
; Opcodes E058 - E05F
Y058:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,8
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 22
jmp execend
; Opcodes E060 - E067
Y060:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1628
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1628:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1629
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln1630
ln1629:
sar word[__dreg+ebx*4],cl
ln1630:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E068 - E06F
Y068:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1631
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1631:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1632
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln1633
ln1632:
shr word[__dreg+ebx*4],cl
ln1633:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E070 - E077
Y070:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1634
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1634:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1635
rcr dx, 16
sub cl, 31
rcr dx, 15
ln1635:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E078 - E07F
Y078:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1636
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1636:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1637
ror dx, 16
sub cl, 31
ror dx, 15
ln1637:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E080 - E087
Y080:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 24
jmp execend
; Opcodes E088 - E08F
Y088:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 24
jmp execend
; Opcodes E090 - E097
Y090:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,8
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 24
jmp execend
; Opcodes E098 - E09F
Y098:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,8
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 24
jmp execend
; Opcodes E0A0 - E0A7
Y0A0:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1638
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1638:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1639
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln1640
ln1639:
sar dword[__dreg+ebx*4],cl
ln1640:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E0A8 - E0AF
Y0A8:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1641
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1641:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1642
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln1643
ln1642:
shr dword[__dreg+ebx*4],cl
ln1643:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E0B0 - E0B7
Y0B0:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1644
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1644:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1645
rcr edx, 16
sub cl, 31
rcr edx, 15
ln1645:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E0B8 - E0BF
Y0B8:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1646
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1646:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1647
ror edx, 16
sub cl, 31
ror edx, 15
ln1647:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E0D0 - E0D7
Y0D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sar cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E0D8 - E0DF
Y0D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sar cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E0E0 - E0E7
Y0E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sar cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E0E8 - E0EF
Y0E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sar cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E0F0 - E0F7
Y0F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sar cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E0F8
Y0F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sar cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E0F9
Y0F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sar cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E100 - E107
Y100:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 22
jmp execend
; Opcodes E108 - E10F
Y108:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes E110 - E117
Y110:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,8
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 22
jmp execend
; Opcodes E118 - E11F
Y118:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,8
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 22
jmp execend
; Opcodes E120 - E127
Y120:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1648
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1648:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1649:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln1649
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E128 - E12F
Y128:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1650
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1650:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1651
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln1652
ln1651:
shl byte[__dreg+ebx*4],cl
ln1652:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E130 - E137
Y130:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1653
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1653:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1654
rcl dl, 16
sub cl, 31
rcl dl, 15
ln1654:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E138 - E13F
Y138:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1655
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1655:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1656
rol dl, 16
sub cl, 31
rol dl, 15
ln1656:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E140 - E147
Y140:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 22
jmp execend
; Opcodes E148 - E14F
Y148:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes E150 - E157
Y150:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,8
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 22
jmp execend
; Opcodes E158 - E15F
Y158:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,8
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 22
jmp execend
; Opcodes E160 - E167
Y160:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1657
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1657:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1658:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln1658
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E168 - E16F
Y168:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1659
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1659:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1660
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln1661
ln1660:
shl word[__dreg+ebx*4],cl
ln1661:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E170 - E177
Y170:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1662
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1662:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1663
rcl dx, 16
sub cl, 31
rcl dx, 15
ln1663:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E178 - E17F
Y178:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1664
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1664:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1665
rol dx, 16
sub cl, 31
rol dx, 15
ln1665:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E180 - E187
Y180:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 24
jmp execend
; Opcodes E188 - E18F
Y188:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],8
lahf
setc [__xflag]
sub edi,byte 24
jmp execend
; Opcodes E190 - E197
Y190:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,8
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 24
jmp execend
; Opcodes E198 - E19F
Y198:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,8
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 24
jmp execend
; Opcodes E1A0 - E1A7
Y1A0:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1666
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1666:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1667:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln1667
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes E1A8 - E1AF
Y1A8:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1668
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1668:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1669
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln1670
ln1669:
shl dword[__dreg+ebx*4],cl
ln1670:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E1B0 - E1B7
Y1B0:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1671
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1671:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1672
rcl edx, 16
sub cl, 31
rcl edx, 15
ln1672:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E1B8 - E1BF
Y1B8:
and ebx,byte 7
mov ecx,[__dreg+0]
and ecx,byte 63
jnz short ln1673
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1673:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1674
rol edx, 16
sub cl, 31
rol edx, 15
ln1674:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E1D0 - E1D7
Y1D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sal cx,1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E1D8 - E1DF
Y1D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
sal cx,1
lahf
seto al
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E1E0 - E1E7
Y1E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
sal cx,1
lahf
seto al
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E1E8 - E1EF
Y1E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
sal cx,1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E1F0 - E1F7
Y1F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
sal cx,1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E1F8
Y1F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
sal cx,1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E1F9
Y1F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
sal cx,1
lahf
seto al
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E200 - E207
Y200:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E208 - E20F
Y208:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E210 - E217
Y210:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,1
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 8
jmp execend
; Opcodes E218 - E21F
Y218:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,1
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 8
jmp execend
; Opcodes E220 - E227
Y220:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1675
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1675:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1676
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln1677
ln1676:
sar byte[__dreg+ebx*4],cl
ln1677:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E228 - E22F
Y228:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1678
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1678:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1679
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln1680
ln1679:
shr byte[__dreg+ebx*4],cl
ln1680:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E230 - E237
Y230:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1681
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1681:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1682
rcr dl, 16
sub cl, 31
rcr dl, 15
ln1682:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E238 - E23F
Y238:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1683
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1683:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1684
ror dl, 16
sub cl, 31
ror dl, 15
ln1684:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E240 - E247
Y240:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E248 - E24F
Y248:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E250 - E257
Y250:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,1
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 8
jmp execend
; Opcodes E258 - E25F
Y258:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,1
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 8
jmp execend
; Opcodes E260 - E267
Y260:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1685
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1685:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1686
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln1687
ln1686:
sar word[__dreg+ebx*4],cl
ln1687:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E268 - E26F
Y268:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1688
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1688:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1689
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln1690
ln1689:
shr word[__dreg+ebx*4],cl
ln1690:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E270 - E277
Y270:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1691
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1691:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1692
rcr dx, 16
sub cl, 31
rcr dx, 15
ln1692:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E278 - E27F
Y278:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1693
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1693:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1694
ror dx, 16
sub cl, 31
ror dx, 15
ln1694:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E280 - E287
Y280:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E288 - E28F
Y288:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E290 - E297
Y290:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,1
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 10
jmp execend
; Opcodes E298 - E29F
Y298:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,1
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 10
jmp execend
; Opcodes E2A0 - E2A7
Y2A0:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1695
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1695:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1696
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln1697
ln1696:
sar dword[__dreg+ebx*4],cl
ln1697:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E2A8 - E2AF
Y2A8:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1698
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1698:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1699
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln1700
ln1699:
shr dword[__dreg+ebx*4],cl
ln1700:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E2B0 - E2B7
Y2B0:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1701
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1701:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1702
rcr edx, 16
sub cl, 31
rcr edx, 15
ln1702:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E2B8 - E2BF
Y2B8:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1703
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1703:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1704
ror edx, 16
sub cl, 31
ror edx, 15
ln1704:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E2D0 - E2D7
Y2D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
shr cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E2D8 - E2DF
Y2D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
shr cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E2E0 - E2E7
Y2E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
shr cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E2E8 - E2EF
Y2E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
shr cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E2F0 - E2F7
Y2F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
shr cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E2F8
Y2F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
shr cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E2F9
Y2F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
shr cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E300 - E307
Y300:
and ebx,byte 7
sal byte[__dreg+ebx*4],1
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E308 - E30F
Y308:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E310 - E317
Y310:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,1
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 8
jmp execend
; Opcodes E318 - E31F
Y318:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,1
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 8
jmp execend
; Opcodes E320 - E327
Y320:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1705
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1705:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1706:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln1706
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E328 - E32F
Y328:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1707
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1707:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1708
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln1709
ln1708:
shl byte[__dreg+ebx*4],cl
ln1709:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E330 - E337
Y330:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1710
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1710:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1711
rcl dl, 16
sub cl, 31
rcl dl, 15
ln1711:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E338 - E33F
Y338:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1712
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1712:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1713
rol dl, 16
sub cl, 31
rol dl, 15
ln1713:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E340 - E347
Y340:
and ebx,byte 7
sal word[__dreg+ebx*4],1
lahf
seto al
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E348 - E34F
Y348:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E350 - E357
Y350:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,1
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 8
jmp execend
; Opcodes E358 - E35F
Y358:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,1
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 8
jmp execend
; Opcodes E360 - E367
Y360:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1714
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1714:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1715:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln1715
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E368 - E36F
Y368:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1716
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1716:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1717
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln1718
ln1717:
shl word[__dreg+ebx*4],cl
ln1718:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E370 - E377
Y370:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1719
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1719:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1720
rcl dx, 16
sub cl, 31
rcl dx, 15
ln1720:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E378 - E37F
Y378:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1721
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1721:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1722
rol dx, 16
sub cl, 31
rol dx, 15
ln1722:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E380 - E387
Y380:
and ebx,byte 7
sal dword[__dreg+ebx*4],1
lahf
seto al
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E388 - E38F
Y388:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],1
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E390 - E397
Y390:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,1
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 10
jmp execend
; Opcodes E398 - E39F
Y398:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,1
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 10
jmp execend
; Opcodes E3A0 - E3A7
Y3A0:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1723
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1723:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1724:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln1724
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes E3A8 - E3AF
Y3A8:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1725
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1725:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1726
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln1727
ln1726:
shl dword[__dreg+ebx*4],cl
ln1727:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E3B0 - E3B7
Y3B0:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1728
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1728:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1729
rcl edx, 16
sub cl, 31
rcl edx, 15
ln1729:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E3B8 - E3BF
Y3B8:
and ebx,byte 7
mov ecx,[__dreg+4]
and ecx,byte 63
jnz short ln1730
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1730:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1731
rol edx, 16
sub cl, 31
rol edx, 15
ln1731:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E3D0 - E3D7
Y3D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
shl cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E3D8 - E3DF
Y3D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
shl cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E3E0 - E3E7
Y3E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
shl cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E3E8 - E3EF
Y3E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
shl cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E3F0 - E3F7
Y3F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
shl cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E3F8
Y3F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
shl cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E3F9
Y3F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
shl cx,1
lahf
mov al,0
setc [__xflag]
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E400 - E407
Y400:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E408 - E40F
Y408:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E410 - E417
Y410:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,2
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 10
jmp execend
; Opcodes E418 - E41F
Y418:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,2
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 10
jmp execend
; Opcodes E420 - E427
Y420:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1732
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1732:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1733
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln1734
ln1733:
sar byte[__dreg+ebx*4],cl
ln1734:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E428 - E42F
Y428:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1735
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1735:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1736
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln1737
ln1736:
shr byte[__dreg+ebx*4],cl
ln1737:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E430 - E437
Y430:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1738
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1738:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1739
rcr dl, 16
sub cl, 31
rcr dl, 15
ln1739:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E438 - E43F
Y438:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1740
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1740:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1741
ror dl, 16
sub cl, 31
ror dl, 15
ln1741:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E440 - E447
Y440:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E448 - E44F
Y448:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E450 - E457
Y450:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,2
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 10
jmp execend
; Opcodes E458 - E45F
Y458:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,2
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 10
jmp execend
; Opcodes E460 - E467
Y460:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1742
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1742:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1743
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln1744
ln1743:
sar word[__dreg+ebx*4],cl
ln1744:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E468 - E46F
Y468:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1745
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1745:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1746
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln1747
ln1746:
shr word[__dreg+ebx*4],cl
ln1747:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E470 - E477
Y470:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1748
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1748:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1749
rcr dx, 16
sub cl, 31
rcr dx, 15
ln1749:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E478 - E47F
Y478:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1750
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1750:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1751
ror dx, 16
sub cl, 31
ror dx, 15
ln1751:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E480 - E487
Y480:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E488 - E48F
Y488:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E490 - E497
Y490:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,2
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E498 - E49F
Y498:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,2
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E4A0 - E4A7
Y4A0:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1752
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1752:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1753
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln1754
ln1753:
sar dword[__dreg+ebx*4],cl
ln1754:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E4A8 - E4AF
Y4A8:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1755
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1755:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1756
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln1757
ln1756:
shr dword[__dreg+ebx*4],cl
ln1757:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E4B0 - E4B7
Y4B0:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1758
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1758:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1759
rcr edx, 16
sub cl, 31
rcr edx, 15
ln1759:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E4B8 - E4BF
Y4B8:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1760
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1760:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1761
ror edx, 16
sub cl, 31
ror edx, 15
ln1761:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E4D0 - E4D7
Y4D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcr cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E4D8 - E4DF
Y4D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcr cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E4E0 - E4E7
Y4E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov al,[__xflag]
shr al,1
rcr cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E4E8 - E4EF
Y4E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcr cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E4F0 - E4F7
Y4F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcr cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E4F8
Y4F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov al,[__xflag]
shr al,1
rcr cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E4F9
Y4F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov al,[__xflag]
shr al,1
rcr cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E500 - E507
Y500:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dl,dl
seto ch
or al,ch
add dl,dl
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 10
jmp execend
; Opcodes E508 - E50F
Y508:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E510 - E517
Y510:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,2
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 10
jmp execend
; Opcodes E518 - E51F
Y518:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,2
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 10
jmp execend
; Opcodes E520 - E527
Y520:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1762
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1762:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1763:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln1763
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E528 - E52F
Y528:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1764
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1764:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1765
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln1766
ln1765:
shl byte[__dreg+ebx*4],cl
ln1766:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E530 - E537
Y530:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1767
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1767:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1768
rcl dl, 16
sub cl, 31
rcl dl, 15
ln1768:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E538 - E53F
Y538:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1769
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1769:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1770
rol dl, 16
sub cl, 31
rol dl, 15
ln1770:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E540 - E547
Y540:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dx,dx
seto ch
or al,ch
add dx,dx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 10
jmp execend
; Opcodes E548 - E54F
Y548:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 10
jmp execend
; Opcodes E550 - E557
Y550:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,2
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 10
jmp execend
; Opcodes E558 - E55F
Y558:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,2
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 10
jmp execend
; Opcodes E560 - E567
Y560:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1771
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1771:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1772:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln1772
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E568 - E56F
Y568:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1773
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1773:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1774
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln1775
ln1774:
shl word[__dreg+ebx*4],cl
ln1775:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E570 - E577
Y570:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1776
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1776:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1777
rcl dx, 16
sub cl, 31
rcl dx, 15
ln1777:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E578 - E57F
Y578:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1778
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1778:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1779
rol dx, 16
sub cl, 31
rol dx, 15
ln1779:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E580 - E587
Y580:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add edx,edx
seto ch
or al,ch
add edx,edx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 12
jmp execend
; Opcodes E588 - E58F
Y588:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],2
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E590 - E597
Y590:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,2
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E598 - E59F
Y598:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,2
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E5A0 - E5A7
Y5A0:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1780
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1780:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1781:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln1781
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes E5A8 - E5AF
Y5A8:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1782
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1782:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1783
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln1784
ln1783:
shl dword[__dreg+ebx*4],cl
ln1784:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E5B0 - E5B7
Y5B0:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1785
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1785:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1786
rcl edx, 16
sub cl, 31
rcl edx, 15
ln1786:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E5B8 - E5BF
Y5B8:
and ebx,byte 7
mov ecx,[__dreg+8]
and ecx,byte 63
jnz short ln1787
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1787:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1788
rol edx, 16
sub cl, 31
rol edx, 15
ln1788:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E5D0 - E5D7
Y5D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcl cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E5D8 - E5DF
Y5D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcl cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E5E0 - E5E7
Y5E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov al,[__xflag]
shr al,1
rcl cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E5E8 - E5EF
Y5E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcl cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E5F0 - E5F7
Y5F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov al,[__xflag]
shr al,1
rcl cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E5F8
Y5F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov al,[__xflag]
shr al,1
rcl cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E5F9
Y5F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov al,[__xflag]
shr al,1
rcl cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov [__xflag],al
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E600 - E607
Y600:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E608 - E60F
Y608:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E610 - E617
Y610:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,3
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 12
jmp execend
; Opcodes E618 - E61F
Y618:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,3
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 12
jmp execend
; Opcodes E620 - E627
Y620:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1789
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1789:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1790
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln1791
ln1790:
sar byte[__dreg+ebx*4],cl
ln1791:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E628 - E62F
Y628:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1792
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1792:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1793
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln1794
ln1793:
shr byte[__dreg+ebx*4],cl
ln1794:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E630 - E637
Y630:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1795
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1795:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1796
rcr dl, 16
sub cl, 31
rcr dl, 15
ln1796:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E638 - E63F
Y638:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1797
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1797:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1798
ror dl, 16
sub cl, 31
ror dl, 15
ln1798:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E640 - E647
Y640:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E648 - E64F
Y648:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E650 - E657
Y650:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,3
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 12
jmp execend
; Opcodes E658 - E65F
Y658:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,3
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 12
jmp execend
; Opcodes E660 - E667
Y660:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1799
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1799:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1800
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln1801
ln1800:
sar word[__dreg+ebx*4],cl
ln1801:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E668 - E66F
Y668:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1802
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1802:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1803
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln1804
ln1803:
shr word[__dreg+ebx*4],cl
ln1804:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E670 - E677
Y670:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1805
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1805:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1806
rcr dx, 16
sub cl, 31
rcr dx, 15
ln1806:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E678 - E67F
Y678:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1807
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1807:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1808
ror dx, 16
sub cl, 31
ror dx, 15
ln1808:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E680 - E687
Y680:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E688 - E68F
Y688:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E690 - E697
Y690:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,3
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E698 - E69F
Y698:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,3
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E6A0 - E6A7
Y6A0:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1809
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1809:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1810
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln1811
ln1810:
sar dword[__dreg+ebx*4],cl
ln1811:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E6A8 - E6AF
Y6A8:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1812
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1812:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1813
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln1814
ln1813:
shr dword[__dreg+ebx*4],cl
ln1814:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E6B0 - E6B7
Y6B0:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1815
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1815:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1816
rcr edx, 16
sub cl, 31
rcr edx, 15
ln1816:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E6B8 - E6BF
Y6B8:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1817
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1817:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1818
ror edx, 16
sub cl, 31
ror edx, 15
ln1818:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E6D0 - E6D7
Y6D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,0
ror cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E6D8 - E6DF
Y6D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,0
ror cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E6E0 - E6E7
Y6E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov al,0
ror cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E6E8 - E6EF
Y6E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov al,0
ror cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E6F0 - E6F7
Y6F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov al,0
ror cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E6F8
Y6F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov al,0
ror cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E6F9
Y6F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov al,0
ror cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E700 - E707
Y700:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 12
jmp execend
; Opcodes E708 - E70F
Y708:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E710 - E717
Y710:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,3
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 12
jmp execend
; Opcodes E718 - E71F
Y718:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,3
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 12
jmp execend
; Opcodes E720 - E727
Y720:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1819
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1819:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1820:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln1820
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E728 - E72F
Y728:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1821
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1821:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1822
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln1823
ln1822:
shl byte[__dreg+ebx*4],cl
ln1823:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E730 - E737
Y730:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1824
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1824:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1825
rcl dl, 16
sub cl, 31
rcl dl, 15
ln1825:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E738 - E73F
Y738:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1826
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1826:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1827
rol dl, 16
sub cl, 31
rol dl, 15
ln1827:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E740 - E747
Y740:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 12
jmp execend
; Opcodes E748 - E74F
Y748:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 12
jmp execend
; Opcodes E750 - E757
Y750:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,3
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 12
jmp execend
; Opcodes E758 - E75F
Y758:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,3
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 12
jmp execend
; Opcodes E760 - E767
Y760:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1828
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1828:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1829:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln1829
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E768 - E76F
Y768:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1830
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1830:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1831
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln1832
ln1831:
shl word[__dreg+ebx*4],cl
ln1832:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E770 - E777
Y770:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1833
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1833:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1834
rcl dx, 16
sub cl, 31
rcl dx, 15
ln1834:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E778 - E77F
Y778:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1835
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1835:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1836
rol dx, 16
sub cl, 31
rol dx, 15
ln1836:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E780 - E787
Y780:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 14
jmp execend
; Opcodes E788 - E78F
Y788:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],3
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E790 - E797
Y790:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,3
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E798 - E79F
Y798:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,3
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E7A0 - E7A7
Y7A0:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1837
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1837:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1838:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln1838
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes E7A8 - E7AF
Y7A8:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1839
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1839:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1840
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln1841
ln1840:
shl dword[__dreg+ebx*4],cl
ln1841:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E7B0 - E7B7
Y7B0:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1842
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1842:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1843
rcl edx, 16
sub cl, 31
rcl edx, 15
ln1843:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E7B8 - E7BF
Y7B8:
and ebx,byte 7
mov ecx,[__dreg+12]
and ecx,byte 63
jnz short ln1844
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1844:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1845
rol edx, 16
sub cl, 31
rol edx, 15
ln1845:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E7D0 - E7D7
Y7D0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,0
rol cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 12
jmp execend
; Opcodes E7D8 - E7DF
Y7D8:
and ebx,byte 7
mov edx,[__areg+ebx*4]
call readmemoryword
mov al,0
rol cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
add edx,byte 2
mov [__areg+ebx*4],edx
sub edi,byte 12
jmp execend
; Opcodes E7E0 - E7E7
Y7E0:
and ebx,byte 7
mov edx,[__areg+ebx*4]
sub edx,byte 2
call readmemoryword
mov al,0
rol cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
mov [__areg+ebx*4],edx
sub edi,byte 14
jmp execend
; Opcodes E7E8 - E7EF
Y7E8:
and ebx,byte 7
movsx edx,word[esi]
add esi,byte 2
add edx,[__areg+ebx*4]
call readmemoryword
mov al,0
rol cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcodes E7F0 - E7F7
Y7F0:
and ebx,byte 7
call decode_ext
add edx,[__areg+ebx*4]
call readmemoryword
mov al,0
rol cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 18
jmp execend
; Opcode E7F8
Y7F8:
movsx edx,word[esi]
add esi,byte 2
call readmemoryword
mov al,0
rol cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 16
jmp execend
; Opcode E7F9
Y7F9:
mov edx,dword[esi]
add esi,byte 4
rol edx,16
call readmemoryword
mov al,0
rol cx,1
adc al,al
test cx,cx
lahf
or ah,al
mov al,0
call writememoryword
sub edi,byte 20
jmp execend
; Opcodes E800 - E807
Y800:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E808 - E80F
Y808:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E810 - E817
Y810:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,4
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 14
jmp execend
; Opcodes E818 - E81F
Y818:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,4
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 14
jmp execend
; Opcodes E820 - E827
Y820:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1846
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1846:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1847
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln1848
ln1847:
sar byte[__dreg+ebx*4],cl
ln1848:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E828 - E82F
Y828:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1849
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1849:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1850
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln1851
ln1850:
shr byte[__dreg+ebx*4],cl
ln1851:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E830 - E837
Y830:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1852
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1852:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1853
rcr dl, 16
sub cl, 31
rcr dl, 15
ln1853:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E838 - E83F
Y838:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1854
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1854:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1855
ror dl, 16
sub cl, 31
ror dl, 15
ln1855:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E840 - E847
Y840:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E848 - E84F
Y848:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E850 - E857
Y850:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,4
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 14
jmp execend
; Opcodes E858 - E85F
Y858:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,4
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 14
jmp execend
; Opcodes E860 - E867
Y860:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1856
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1856:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1857
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln1858
ln1857:
sar word[__dreg+ebx*4],cl
ln1858:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E868 - E86F
Y868:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1859
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1859:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1860
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln1861
ln1860:
shr word[__dreg+ebx*4],cl
ln1861:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E870 - E877
Y870:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1862
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1862:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1863
rcr dx, 16
sub cl, 31
rcr dx, 15
ln1863:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E878 - E87F
Y878:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1864
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1864:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1865
ror dx, 16
sub cl, 31
ror dx, 15
ln1865:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E880 - E887
Y880:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes E888 - E88F
Y888:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes E890 - E897
Y890:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,4
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes E898 - E89F
Y898:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,4
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes E8A0 - E8A7
Y8A0:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1866
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1866:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1867
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln1868
ln1867:
sar dword[__dreg+ebx*4],cl
ln1868:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E8A8 - E8AF
Y8A8:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1869
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1869:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1870
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln1871
ln1870:
shr dword[__dreg+ebx*4],cl
ln1871:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E8B0 - E8B7
Y8B0:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1872
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1872:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1873
rcr edx, 16
sub cl, 31
rcr edx, 15
ln1873:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E8B8 - E8BF
Y8B8:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1874
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1874:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1875
ror edx, 16
sub cl, 31
ror edx, 15
ln1875:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E900 - E907
Y900:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 14
jmp execend
; Opcodes E908 - E90F
Y908:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E910 - E917
Y910:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,4
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 14
jmp execend
; Opcodes E918 - E91F
Y918:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,4
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 14
jmp execend
; Opcodes E920 - E927
Y920:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1876
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1876:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1877:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln1877
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E928 - E92F
Y928:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1878
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1878:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1879
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln1880
ln1879:
shl byte[__dreg+ebx*4],cl
ln1880:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E930 - E937
Y930:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1881
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1881:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1882
rcl dl, 16
sub cl, 31
rcl dl, 15
ln1882:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E938 - E93F
Y938:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1883
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1883:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1884
rol dl, 16
sub cl, 31
rol dl, 15
ln1884:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes E940 - E947
Y940:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 14
jmp execend
; Opcodes E948 - E94F
Y948:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 14
jmp execend
; Opcodes E950 - E957
Y950:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,4
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 14
jmp execend
; Opcodes E958 - E95F
Y958:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,4
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 14
jmp execend
; Opcodes E960 - E967
Y960:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1885
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1885:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1886:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln1886
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes E968 - E96F
Y968:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1887
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1887:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1888
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln1889
ln1888:
shl word[__dreg+ebx*4],cl
ln1889:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes E970 - E977
Y970:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1890
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1890:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1891
rcl dx, 16
sub cl, 31
rcl dx, 15
ln1891:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E978 - E97F
Y978:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1892
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1892:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1893
rol dx, 16
sub cl, 31
rol dx, 15
ln1893:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes E980 - E987
Y980:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 16
jmp execend
; Opcodes E988 - E98F
Y988:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],4
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes E990 - E997
Y990:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,4
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes E998 - E99F
Y998:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,4
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 16
jmp execend
; Opcodes E9A0 - E9A7
Y9A0:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1894
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1894:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1895:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln1895
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes E9A8 - E9AF
Y9A8:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1896
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1896:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1897
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln1898
ln1897:
shl dword[__dreg+ebx*4],cl
ln1898:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes E9B0 - E9B7
Y9B0:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1899
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1899:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1900
rcl edx, 16
sub cl, 31
rcl edx, 15
ln1900:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes E9B8 - E9BF
Y9B8:
and ebx,byte 7
mov ecx,[__dreg+16]
and ecx,byte 63
jnz short ln1901
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1901:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1902
rol edx, 16
sub cl, 31
rol edx, 15
ln1902:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EA00 - EA07
YA00:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes EA08 - EA0F
YA08:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes EA10 - EA17
YA10:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,5
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 16
jmp execend
; Opcodes EA18 - EA1F
YA18:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,5
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 16
jmp execend
; Opcodes EA20 - EA27
YA20:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1903
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1903:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1904
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln1905
ln1904:
sar byte[__dreg+ebx*4],cl
ln1905:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EA28 - EA2F
YA28:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1906
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1906:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1907
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln1908
ln1907:
shr byte[__dreg+ebx*4],cl
ln1908:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EA30 - EA37
YA30:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1909
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1909:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1910
rcr dl, 16
sub cl, 31
rcr dl, 15
ln1910:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EA38 - EA3F
YA38:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1911
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1911:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1912
ror dl, 16
sub cl, 31
ror dl, 15
ln1912:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EA40 - EA47
YA40:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes EA48 - EA4F
YA48:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes EA50 - EA57
YA50:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,5
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 16
jmp execend
; Opcodes EA58 - EA5F
YA58:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,5
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 16
jmp execend
; Opcodes EA60 - EA67
YA60:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1913
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1913:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1914
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln1915
ln1914:
sar word[__dreg+ebx*4],cl
ln1915:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EA68 - EA6F
YA68:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1916
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1916:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1917
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln1918
ln1917:
shr word[__dreg+ebx*4],cl
ln1918:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EA70 - EA77
YA70:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1919
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1919:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1920
rcr dx, 16
sub cl, 31
rcr dx, 15
ln1920:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EA78 - EA7F
YA78:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1921
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1921:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1922
ror dx, 16
sub cl, 31
ror dx, 15
ln1922:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EA80 - EA87
YA80:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes EA88 - EA8F
YA88:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes EA90 - EA97
YA90:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,5
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes EA98 - EA9F
YA98:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,5
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes EAA0 - EAA7
YAA0:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1923
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1923:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1924
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln1925
ln1924:
sar dword[__dreg+ebx*4],cl
ln1925:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes EAA8 - EAAF
YAA8:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1926
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1926:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1927
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln1928
ln1927:
shr dword[__dreg+ebx*4],cl
ln1928:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes EAB0 - EAB7
YAB0:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1929
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1929:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1930
rcr edx, 16
sub cl, 31
rcr edx, 15
ln1930:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EAB8 - EABF
YAB8:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1931
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1931:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1932
ror edx, 16
sub cl, 31
ror edx, 15
ln1932:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EB00 - EB07
YB00:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 16
jmp execend
; Opcodes EB08 - EB0F
YB08:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes EB10 - EB17
YB10:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,5
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 16
jmp execend
; Opcodes EB18 - EB1F
YB18:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,5
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 16
jmp execend
; Opcodes EB20 - EB27
YB20:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1933
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1933:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1934:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln1934
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes EB28 - EB2F
YB28:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1935
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1935:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1936
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln1937
ln1936:
shl byte[__dreg+ebx*4],cl
ln1937:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EB30 - EB37
YB30:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1938
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1938:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1939
rcl dl, 16
sub cl, 31
rcl dl, 15
ln1939:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EB38 - EB3F
YB38:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1940
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1940:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1941
rol dl, 16
sub cl, 31
rol dl, 15
ln1941:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EB40 - EB47
YB40:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 16
jmp execend
; Opcodes EB48 - EB4F
YB48:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 16
jmp execend
; Opcodes EB50 - EB57
YB50:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,5
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 16
jmp execend
; Opcodes EB58 - EB5F
YB58:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,5
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 16
jmp execend
; Opcodes EB60 - EB67
YB60:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1942
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1942:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1943:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln1943
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes EB68 - EB6F
YB68:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1944
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1944:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1945
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln1946
ln1945:
shl word[__dreg+ebx*4],cl
ln1946:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EB70 - EB77
YB70:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1947
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1947:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1948
rcl dx, 16
sub cl, 31
rcl dx, 15
ln1948:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EB78 - EB7F
YB78:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1949
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1949:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1950
rol dx, 16
sub cl, 31
rol dx, 15
ln1950:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EB80 - EB87
YB80:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 18
jmp execend
; Opcodes EB88 - EB8F
YB88:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],5
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes EB90 - EB97
YB90:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,5
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes EB98 - EB9F
YB98:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,5
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 18
jmp execend
; Opcodes EBA0 - EBA7
YBA0:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1951
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1951:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1952:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln1952
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes EBA8 - EBAF
YBA8:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1953
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1953:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1954
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln1955
ln1954:
shl dword[__dreg+ebx*4],cl
ln1955:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes EBB0 - EBB7
YBB0:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1956
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1956:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1957
rcl edx, 16
sub cl, 31
rcl edx, 15
ln1957:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EBB8 - EBBF
YBB8:
and ebx,byte 7
mov ecx,[__dreg+20]
and ecx,byte 63
jnz short ln1958
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1958:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1959
rol edx, 16
sub cl, 31
rol edx, 15
ln1959:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EC00 - EC07
YC00:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes EC08 - EC0F
YC08:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes EC10 - EC17
YC10:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,6
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 18
jmp execend
; Opcodes EC18 - EC1F
YC18:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,6
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 18
jmp execend
; Opcodes EC20 - EC27
YC20:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1960
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1960:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1961
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln1962
ln1961:
sar byte[__dreg+ebx*4],cl
ln1962:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EC28 - EC2F
YC28:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1963
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1963:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1964
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln1965
ln1964:
shr byte[__dreg+ebx*4],cl
ln1965:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EC30 - EC37
YC30:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1966
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1966:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1967
rcr dl, 16
sub cl, 31
rcr dl, 15
ln1967:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EC38 - EC3F
YC38:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1968
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1968:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1969
ror dl, 16
sub cl, 31
ror dl, 15
ln1969:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EC40 - EC47
YC40:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes EC48 - EC4F
YC48:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes EC50 - EC57
YC50:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,6
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 18
jmp execend
; Opcodes EC58 - EC5F
YC58:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,6
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 18
jmp execend
; Opcodes EC60 - EC67
YC60:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1970
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1970:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1971
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln1972
ln1971:
sar word[__dreg+ebx*4],cl
ln1972:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EC68 - EC6F
YC68:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1973
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1973:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1974
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln1975
ln1974:
shr word[__dreg+ebx*4],cl
ln1975:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EC70 - EC77
YC70:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1976
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1976:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1977
rcr dx, 16
sub cl, 31
rcr dx, 15
ln1977:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EC78 - EC7F
YC78:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1978
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1978:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1979
ror dx, 16
sub cl, 31
ror dx, 15
ln1979:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EC80 - EC87
YC80:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EC88 - EC8F
YC88:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EC90 - EC97
YC90:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,6
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes EC98 - EC9F
YC98:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,6
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes ECA0 - ECA7
YCA0:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1980
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1980:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1981
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln1982
ln1981:
sar dword[__dreg+ebx*4],cl
ln1982:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes ECA8 - ECAF
YCA8:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1983
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1983:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1984
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln1985
ln1984:
shr dword[__dreg+ebx*4],cl
ln1985:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes ECB0 - ECB7
YCB0:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1986
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln1986:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1987
rcr edx, 16
sub cl, 31
rcr edx, 15
ln1987:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes ECB8 - ECBF
YCB8:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1988
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln1988:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1989
ror edx, 16
sub cl, 31
ror edx, 15
ln1989:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes ED00 - ED07
YD00:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 18
jmp execend
; Opcodes ED08 - ED0F
YD08:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes ED10 - ED17
YD10:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,6
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 18
jmp execend
; Opcodes ED18 - ED1F
YD18:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,6
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 18
jmp execend
; Opcodes ED20 - ED27
YD20:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1990
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1990:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln1991:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln1991
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes ED28 - ED2F
YD28:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1992
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1992:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln1993
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln1994
ln1993:
shl byte[__dreg+ebx*4],cl
ln1994:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes ED30 - ED37
YD30:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1995
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln1995:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln1996
rcl dl, 16
sub cl, 31
rcl dl, 15
ln1996:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes ED38 - ED3F
YD38:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1997
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1997:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln1998
rol dl, 16
sub cl, 31
rol dl, 15
ln1998:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes ED40 - ED47
YD40:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 18
jmp execend
; Opcodes ED48 - ED4F
YD48:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 18
jmp execend
; Opcodes ED50 - ED57
YD50:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,6
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 18
jmp execend
; Opcodes ED58 - ED5F
YD58:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,6
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 18
jmp execend
; Opcodes ED60 - ED67
YD60:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln1999
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln1999:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln2000:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln2000
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes ED68 - ED6F
YD68:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln2001
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2001:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2002
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln2003
ln2002:
shl word[__dreg+ebx*4],cl
ln2003:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes ED70 - ED77
YD70:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln2004
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln2004:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2005
rcl dx, 16
sub cl, 31
rcl dx, 15
ln2005:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes ED78 - ED7F
YD78:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln2006
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2006:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2007
rol dx, 16
sub cl, 31
rol dx, 15
ln2007:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes ED80 - ED87
YD80:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 20
jmp execend
; Opcodes ED88 - ED8F
YD88:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],6
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes ED90 - ED97
YD90:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,6
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes ED98 - ED9F
YD98:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,6
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 20
jmp execend
; Opcodes EDA0 - EDA7
YDA0:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln2008
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2008:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln2009:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln2009
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes EDA8 - EDAF
YDA8:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln2010
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2010:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2011
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln2012
ln2011:
shl dword[__dreg+ebx*4],cl
ln2012:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes EDB0 - EDB7
YDB0:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln2013
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln2013:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2014
rcl edx, 16
sub cl, 31
rcl edx, 15
ln2014:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EDB8 - EDBF
YDB8:
and ebx,byte 7
mov ecx,[__dreg+24]
and ecx,byte 63
jnz short ln2015
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2015:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2016
rol edx, 16
sub cl, 31
rol edx, 15
ln2016:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EE00 - EE07
YE00:
and ebx,byte 7
mov al,0
sar byte[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EE08 - EE0F
YE08:
and ebx,byte 7
mov al,0
shr byte[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EE10 - EE17
YE10:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dl,7
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 20
jmp execend
; Opcodes EE18 - EE1F
YE18:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dl,7
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 20
jmp execend
; Opcodes EE20 - EE27
YE20:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2017
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2017:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2018
sub cl, 31
sar byte[__dreg+ebx*4], 31
jmp short ln2019
ln2018:
sar byte[__dreg+ebx*4],cl
ln2019:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EE28 - EE2F
YE28:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2020
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2020:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2021
sub cl, 31
shr byte[__dreg+ebx*4], 31
jmp short ln2022
ln2021:
shr byte[__dreg+ebx*4],cl
ln2022:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EE30 - EE37
YE30:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2023
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln2023:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2024
rcr dl, 16
sub cl, 31
rcr dl, 15
ln2024:
rcr dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EE38 - EE3F
YE38:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2025
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2025:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2026
ror dl, 16
sub cl, 31
ror dl, 15
ln2026:
ror dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EE40 - EE47
YE40:
and ebx,byte 7
mov al,0
sar word[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EE48 - EE4F
YE48:
and ebx,byte 7
mov al,0
shr word[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EE50 - EE57
YE50:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr dx,7
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 20
jmp execend
; Opcodes EE58 - EE5F
YE58:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror dx,7
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 20
jmp execend
; Opcodes EE60 - EE67
YE60:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2027
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2027:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2028
sub cl, 31
sar word[__dreg+ebx*4], 31
jmp short ln2029
ln2028:
sar word[__dreg+ebx*4],cl
ln2029:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EE68 - EE6F
YE68:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2030
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2030:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2031
sub cl, 31
shr word[__dreg+ebx*4], 31
jmp short ln2032
ln2031:
shr word[__dreg+ebx*4],cl
ln2032:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EE70 - EE77
YE70:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2033
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln2033:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2034
rcr dx, 16
sub cl, 31
rcr dx, 15
ln2034:
rcr dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EE78 - EE7F
YE78:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2035
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2035:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2036
ror dx, 16
sub cl, 31
ror dx, 15
ln2036:
ror dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EE80 - EE87
YE80:
and ebx,byte 7
mov al,0
sar dword[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes EE88 - EE8F
YE88:
and ebx,byte 7
mov al,0
shr dword[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes EE90 - EE97
YE90:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcr edx,7
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes EE98 - EE9F
YE98:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
ror edx,7
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes EEA0 - EEA7
YEA0:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2037
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2037:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2038
sub cl, 31
sar dword[__dreg+ebx*4], 31
jmp short ln2039
ln2038:
sar dword[__dreg+ebx*4],cl
ln2039:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes EEA8 - EEAF
YEA8:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2040
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2040:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2041
sub cl, 31
shr dword[__dreg+ebx*4], 31
jmp short ln2042
ln2041:
shr dword[__dreg+ebx*4],cl
ln2042:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes EEB0 - EEB7
YEB0:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2043
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln2043:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2044
rcr edx, 16
sub cl, 31
rcr edx, 15
ln2044:
rcr edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EEB8 - EEBF
YEB8:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2045
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2045:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2046
ror edx, 16
sub cl, 31
ror edx, 15
ln2046:
ror edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EF00 - EF07
YF00:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
seto ch
or al,ch
add dl,dl
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 20
jmp execend
; Opcodes EF08 - EF0F
YF08:
and ebx,byte 7
mov al,0
shl byte[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EF10 - EF17
YF10:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dl,7
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 20
jmp execend
; Opcodes EF18 - EF1F
YF18:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dl,7
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 20
jmp execend
; Opcodes EF20 - EF27
YF20:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2047
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2047:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln2048:
add dl,dl
lahf
seto ch
or al,ch
dec cl
jnz short ln2048
mov [__dreg+ebx*4],dl
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes EF28 - EF2F
YF28:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2049
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2049:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2050
sub cl, 31
shl byte[__dreg+ebx*4], 31
jmp short ln2051
ln2050:
shl byte[__dreg+ebx*4],cl
ln2051:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EF30 - EF37
YF30:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2052
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln2052:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2053
rcl dl, 16
sub cl, 31
rcl dl, 15
ln2053:
rcl dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EF38 - EF3F
YF38:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2054
mov ecx,[__dreg+ebx*4]
test cl,cl
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2054:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2055
rol dl, 16
sub cl, 31
rol dl, 15
ln2055:
rol dl,cl
adc al,al
or dl,dl
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dl
sub edi,byte 6
jmp execend
; Opcodes EF40 - EF47
YF40:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
seto ch
or al,ch
add dx,dx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 20
jmp execend
; Opcodes EF48 - EF4F
YF48:
and ebx,byte 7
mov al,0
shl word[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 20
jmp execend
; Opcodes EF50 - EF57
YF50:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl dx,7
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 20
jmp execend
; Opcodes EF58 - EF5F
YF58:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol dx,7
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 20
jmp execend
; Opcodes EF60 - EF67
YF60:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2056
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2056:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln2057:
add dx,dx
lahf
seto ch
or al,ch
dec cl
jnz short ln2057
mov [__dreg+ebx*4],dx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 6
jmp execend
; Opcodes EF68 - EF6F
YF68:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2058
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2058:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2059
sub cl, 31
shl word[__dreg+ebx*4], 31
jmp short ln2060
ln2059:
shl word[__dreg+ebx*4],cl
ln2060:
lahf
setc [__xflag]
sub edi,byte 6
jmp execend
; Opcodes EF70 - EF77
YF70:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2061
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 6
jmp execend
ln2061:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2062
rcl dx, 16
sub cl, 31
rcl dx, 15
ln2062:
rcl dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EF78 - EF7F
YF78:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2063
mov ecx,[__dreg+ebx*4]
test cx,cx
lahf
mov al,0
sub edi,byte 6
jmp execend
ln2063:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2064
rol dx, 16
sub cl, 31
rol dx, 15
ln2064:
rol dx,cl
adc al,al
or dx,dx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],dx
sub edi,byte 6
jmp execend
; Opcodes EF80 - EF87
YF80:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
seto ch
or al,ch
add edx,edx
lahf
seto ch
or al,ch
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 22
jmp execend
; Opcodes EF88 - EF8F
YF88:
and ebx,byte 7
mov al,0
shl dword[__dreg+ebx*4],7
lahf
setc [__xflag]
sub edi,byte 22
jmp execend
; Opcodes EF90 - EF97
YF90:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
rcl edx,7
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes EF98 - EF9F
YF98:
and ebx,byte 7
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
rol edx,7
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 22
jmp execend
; Opcodes EFA0 - EFA7
YFA0:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2065
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2065:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
ln2066:
add edx,edx
lahf
seto ch
or al,ch
dec cl
jnz short ln2066
mov [__dreg+ebx*4],edx
mov cl,ah
and cl,1
mov [__xflag],cl
sub edi,byte 8
jmp execend
; Opcodes EFA8 - EFAF
YFA8:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2067
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2067:
sub edi,ecx
sub edi,ecx
mov al,0
cmp cl, 32
jb short ln2068
sub cl, 31
shl dword[__dreg+ebx*4], 31
jmp short ln2069
ln2068:
shl dword[__dreg+ebx*4],cl
ln2069:
lahf
setc [__xflag]
sub edi,byte 8
jmp execend
; Opcodes EFB0 - EFB7
YFB0:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2070
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
and ah,0FEh
or ah,[__xflag]
sub edi,byte 8
jmp execend
ln2070:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,[__xflag]
mov al,[__xflag]
shr al,1
cmp cl, 32
jb short ln2071
rcl edx, 16
sub cl, 31
rcl edx, 15
ln2071:
rcl edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov [__xflag],al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes EFB8 - EFBF
YFB8:
and ebx,byte 7
mov ecx,[__dreg+28]
and ecx,byte 63
jnz short ln2072
mov ecx,[__dreg+ebx*4]
test ecx,ecx
lahf
mov al,0
sub edi,byte 8
jmp execend
ln2072:
sub edi,ecx
sub edi,ecx
mov edx,[__dreg+ebx*4]
mov al,0
mov al,0
cmp cl, 32
jb short ln2073
rol edx, 16
sub cl, 31
rol edx, 15
ln2073:
rol edx,cl
adc al,al
or edx,edx
lahf
or ah,al
mov al,0
mov [__dreg+ebx*4],edx
sub edi,byte 8
jmp execend
; Opcodes F000 - FFFF
Z000:
sub esi,byte 2
mov edx,2Ch
call group_1_exception
sub edi,byte 34
jmp execend
section .bss align=16
bits 32
times ($$-$)&3 db 0
__jmptbl resb 262144
section .data align=16
bits 32
times ($$-$)&3 db 0
__jmptblcomp:
dd K000-top+117440512
dd r_illegal-top+117440512
dd K010-top+117440512
dd K018-top+117440512
dd K020-top+117440512
dd K028-top+117440512
dd K030-top+117440512
dd K038-top
dd K039-top
dd r_illegal-top+16777216
dd K03C-top
dd r_illegal-top+33554432
dd K040-top+117440512
dd r_illegal-top+117440512
dd K050-top+117440512
dd K058-top+117440512
dd K060-top+117440512
dd K068-top+117440512
dd K070-top+117440512
dd K078-top
dd K079-top
dd r_illegal-top+16777216
dd K07C-top
dd r_illegal-top+33554432
dd K080-top+117440512
dd r_illegal-top+117440512
dd K090-top+117440512
dd K098-top+117440512
dd K0A0-top+117440512
dd K0A8-top+117440512
dd K0B0-top+117440512
dd K0B8-top
dd K0B9-top
dd r_illegal-top+1157627904
dd K100-top+117440512
dd K108-top+117440512
dd K110-top+117440512
dd K118-top+117440512
dd K120-top+117440512
dd K128-top+117440512
dd K130-top+117440512
dd K138-top
dd K139-top
dd K13A-top
dd K13B-top
dd K13C-top
dd r_illegal-top+33554432
dd K140-top+117440512
dd K148-top+117440512
dd K150-top+117440512
dd K158-top+117440512
dd K160-top+117440512
dd K168-top+117440512
dd K170-top+117440512
dd K178-top
dd K179-top
dd r_illegal-top+83886080
dd K180-top+117440512
dd K188-top+117440512
dd K190-top+117440512
dd K198-top+117440512
dd K1A0-top+117440512
dd K1A8-top+117440512
dd K1B0-top+117440512
dd K1B8-top
dd K1B9-top
dd r_illegal-top+83886080
dd K1C0-top+117440512
dd K1C8-top+117440512
dd K1D0-top+117440512
dd K1D8-top+117440512
dd K1E0-top+117440512
dd K1E8-top+117440512
dd K1F0-top+117440512
dd K1F8-top
dd K1F9-top
dd r_illegal-top+83886080
dd K200-top+117440512
dd r_illegal-top+117440512
dd K210-top+117440512
dd K218-top+117440512
dd K220-top+117440512
dd K228-top+117440512
dd K230-top+117440512
dd K238-top
dd K239-top
dd r_illegal-top+16777216
dd K23C-top
dd r_illegal-top+33554432
dd K240-top+117440512
dd r_illegal-top+117440512
dd K250-top+117440512
dd K258-top+117440512
dd K260-top+117440512
dd K268-top+117440512
dd K270-top+117440512
dd K278-top
dd K279-top
dd r_illegal-top+16777216
dd K27C-top
dd r_illegal-top+33554432
dd K280-top+117440512
dd r_illegal-top+117440512
dd K290-top+117440512
dd K298-top+117440512
dd K2A0-top+117440512
dd K2A8-top+117440512
dd K2B0-top+117440512
dd K2B8-top
dd K2B9-top
dd r_illegal-top+1157627904
dd K300-top+117440512
dd K308-top+117440512
dd K310-top+117440512
dd K318-top+117440512
dd K320-top+117440512
dd K328-top+117440512
dd K330-top+117440512
dd K338-top
dd K339-top
dd K33A-top
dd K33B-top
dd K33C-top
dd r_illegal-top+33554432
dd K340-top+117440512
dd K348-top+117440512
dd K350-top+117440512
dd K358-top+117440512
dd K360-top+117440512
dd K368-top+117440512
dd K370-top+117440512
dd K378-top
dd K379-top
dd r_illegal-top+83886080
dd K380-top+117440512
dd K388-top+117440512
dd K390-top+117440512
dd K398-top+117440512
dd K3A0-top+117440512
dd K3A8-top+117440512
dd K3B0-top+117440512
dd K3B8-top
dd K3B9-top
dd r_illegal-top+83886080
dd K3C0-top+117440512
dd K3C8-top+117440512
dd K3D0-top+117440512
dd K3D8-top+117440512
dd K3E0-top+117440512
dd K3E8-top+117440512
dd K3F0-top+117440512
dd K3F8-top
dd K3F9-top
dd r_illegal-top+83886080
dd K400-top+117440512
dd r_illegal-top+117440512
dd K410-top+117440512
dd K418-top+117440512
dd K420-top+117440512
dd K428-top+117440512
dd K430-top+117440512
dd K438-top
dd K439-top
dd r_illegal-top+83886080
dd K440-top+117440512
dd r_illegal-top+117440512
dd K450-top+117440512
dd K458-top+117440512
dd K460-top+117440512
dd K468-top+117440512
dd K470-top+117440512
dd K478-top
dd K479-top
dd r_illegal-top+83886080
dd K480-top+117440512
dd r_illegal-top+117440512
dd K490-top+117440512
dd K498-top+117440512
dd K4A0-top+117440512
dd K4A8-top+117440512
dd K4B0-top+117440512
dd K4B8-top
dd K4B9-top
dd r_illegal-top+1157627904
dd K500-top+117440512
dd K508-top+117440512
dd K510-top+117440512
dd K518-top+117440512
dd K520-top+117440512
dd K528-top+117440512
dd K530-top+117440512
dd K538-top
dd K539-top
dd K53A-top
dd K53B-top
dd K53C-top
dd r_illegal-top+33554432
dd K540-top+117440512
dd K548-top+117440512
dd K550-top+117440512
dd K558-top+117440512
dd K560-top+117440512
dd K568-top+117440512
dd K570-top+117440512
dd K578-top
dd K579-top
dd r_illegal-top+83886080
dd K580-top+117440512
dd K588-top+117440512
dd K590-top+117440512
dd K598-top+117440512
dd K5A0-top+117440512
dd K5A8-top+117440512
dd K5B0-top+117440512
dd K5B8-top
dd K5B9-top
dd r_illegal-top+83886080
dd K5C0-top+117440512
dd K5C8-top+117440512
dd K5D0-top+117440512
dd K5D8-top+117440512
dd K5E0-top+117440512
dd K5E8-top+117440512
dd K5F0-top+117440512
dd K5F8-top
dd K5F9-top
dd r_illegal-top+83886080
dd K600-top+117440512
dd r_illegal-top+117440512
dd K610-top+117440512
dd K618-top+117440512
dd K620-top+117440512
dd K628-top+117440512
dd K630-top+117440512
dd K638-top
dd K639-top
dd r_illegal-top+83886080
dd K640-top+117440512
dd r_illegal-top+117440512
dd K650-top+117440512
dd K658-top+117440512
dd K660-top+117440512
dd K668-top+117440512
dd K670-top+117440512
dd K678-top
dd K679-top
dd r_illegal-top+83886080
dd K680-top+117440512
dd r_illegal-top+117440512
dd K690-top+117440512
dd K698-top+117440512
dd K6A0-top+117440512
dd K6A8-top+117440512
dd K6B0-top+117440512
dd K6B8-top
dd K6B9-top
dd r_illegal-top+1157627904
dd K700-top+117440512
dd K708-top+117440512
dd K710-top+117440512
dd K718-top+117440512
dd K720-top+117440512
dd K728-top+117440512
dd K730-top+117440512
dd K738-top
dd K739-top
dd K73A-top
dd K73B-top
dd K73C-top
dd r_illegal-top+33554432
dd K740-top+117440512
dd K748-top+117440512
dd K750-top+117440512
dd K758-top+117440512
dd K760-top+117440512
dd K768-top+117440512
dd K770-top+117440512
dd K778-top
dd K779-top
dd r_illegal-top+83886080
dd K780-top+117440512
dd K788-top+117440512
dd K790-top+117440512
dd K798-top+117440512
dd K7A0-top+117440512
dd K7A8-top+117440512
dd K7B0-top+117440512
dd K7B8-top
dd K7B9-top
dd r_illegal-top+83886080
dd K7C0-top+117440512
dd K7C8-top+117440512
dd K7D0-top+117440512
dd K7D8-top+117440512
dd K7E0-top+117440512
dd K7E8-top+117440512
dd K7F0-top+117440512
dd K7F8-top
dd K7F9-top
dd r_illegal-top+83886080
dd K800-top+117440512
dd r_illegal-top+117440512
dd K810-top+117440512
dd K818-top+117440512
dd K820-top+117440512
dd K828-top+117440512
dd K830-top+117440512
dd K838-top
dd K839-top
dd K83A-top
dd K83B-top
dd K83C-top
dd r_illegal-top+33554432
dd K840-top+117440512
dd r_illegal-top+117440512
dd K850-top+117440512
dd K858-top+117440512
dd K860-top+117440512
dd K868-top+117440512
dd K870-top+117440512
dd K878-top
dd K879-top
dd r_illegal-top+83886080
dd K880-top+117440512
dd r_illegal-top+117440512
dd K890-top+117440512
dd K898-top+117440512
dd K8A0-top+117440512
dd K8A8-top+117440512
dd K8B0-top+117440512
dd K8B8-top
dd K8B9-top
dd r_illegal-top+83886080
dd K8C0-top+117440512
dd r_illegal-top+117440512
dd K8D0-top+117440512
dd K8D8-top+117440512
dd K8E0-top+117440512
dd K8E8-top+117440512
dd K8F0-top+117440512
dd K8F8-top
dd K8F9-top
dd r_illegal-top+83886080
dd K900-top+117440512
dd K908-top+117440512
dd K910-top+117440512
dd K918-top+117440512
dd K920-top+117440512
dd K928-top+117440512
dd K930-top+117440512
dd K938-top
dd K939-top
dd K93A-top
dd K93B-top
dd K93C-top
dd r_illegal-top+33554432
dd K940-top+117440512
dd K948-top+117440512
dd K950-top+117440512
dd K958-top+117440512
dd K960-top+117440512
dd K968-top+117440512
dd K970-top+117440512
dd K978-top
dd K979-top
dd r_illegal-top+83886080
dd K980-top+117440512
dd K988-top+117440512
dd K990-top+117440512
dd K998-top+117440512
dd K9A0-top+117440512
dd K9A8-top+117440512
dd K9B0-top+117440512
dd K9B8-top
dd K9B9-top
dd r_illegal-top+83886080
dd K9C0-top+117440512
dd K9C8-top+117440512
dd K9D0-top+117440512
dd K9D8-top+117440512
dd K9E0-top+117440512
dd K9E8-top+117440512
dd K9F0-top+117440512
dd K9F8-top
dd K9F9-top
dd r_illegal-top+83886080
dd KA00-top+117440512
dd r_illegal-top+117440512
dd KA10-top+117440512
dd KA18-top+117440512
dd KA20-top+117440512
dd KA28-top+117440512
dd KA30-top+117440512
dd KA38-top
dd KA39-top
dd r_illegal-top+16777216
dd KA3C-top
dd r_illegal-top+33554432
dd KA40-top+117440512
dd r_illegal-top+117440512
dd KA50-top+117440512
dd KA58-top+117440512
dd KA60-top+117440512
dd KA68-top+117440512
dd KA70-top+117440512
dd KA78-top
dd KA79-top
dd r_illegal-top+16777216
dd KA7C-top
dd r_illegal-top+33554432
dd KA80-top+117440512
dd r_illegal-top+117440512
dd KA90-top+117440512
dd KA98-top+117440512
dd KAA0-top+117440512
dd KAA8-top+117440512
dd KAB0-top+117440512
dd KAB8-top
dd KAB9-top
dd r_illegal-top+1157627904
dd KB00-top+117440512
dd KB08-top+117440512
dd KB10-top+117440512
dd KB18-top+117440512
dd KB20-top+117440512
dd KB28-top+117440512
dd KB30-top+117440512
dd KB38-top
dd KB39-top
dd KB3A-top
dd KB3B-top
dd KB3C-top
dd r_illegal-top+33554432
dd KB40-top+117440512
dd KB48-top+117440512
dd KB50-top+117440512
dd KB58-top+117440512
dd KB60-top+117440512
dd KB68-top+117440512
dd KB70-top+117440512
dd KB78-top
dd KB79-top
dd r_illegal-top+83886080
dd KB80-top+117440512
dd KB88-top+117440512
dd KB90-top+117440512
dd KB98-top+117440512
dd KBA0-top+117440512
dd KBA8-top+117440512
dd KBB0-top+117440512
dd KBB8-top
dd KBB9-top
dd r_illegal-top+83886080
dd KBC0-top+117440512
dd KBC8-top+117440512
dd KBD0-top+117440512
dd KBD8-top+117440512
dd KBE0-top+117440512
dd KBE8-top+117440512
dd KBF0-top+117440512
dd KBF8-top
dd KBF9-top
dd r_illegal-top+83886080
dd KC00-top+117440512
dd r_illegal-top+117440512
dd KC10-top+117440512
dd KC18-top+117440512
dd KC20-top+117440512
dd KC28-top+117440512
dd KC30-top+117440512
dd KC38-top
dd KC39-top
dd r_illegal-top+83886080
dd KC40-top+117440512
dd r_illegal-top+117440512
dd KC50-top+117440512
dd KC58-top+117440512
dd KC60-top+117440512
dd KC68-top+117440512
dd KC70-top+117440512
dd KC78-top
dd KC79-top
dd r_illegal-top+83886080
dd KC80-top+117440512
dd r_illegal-top+117440512
dd KC90-top+117440512
dd KC98-top+117440512
dd KCA0-top+117440512
dd KCA8-top+117440512
dd KCB0-top+117440512
dd KCB8-top
dd KCB9-top
dd r_illegal-top+1157627904
dd KD00-top+117440512
dd KD08-top+117440512
dd KD10-top+117440512
dd KD18-top+117440512
dd KD20-top+117440512
dd KD28-top+117440512
dd KD30-top+117440512
dd KD38-top
dd KD39-top
dd KD3A-top
dd KD3B-top
dd KD3C-top
dd r_illegal-top+33554432
dd KD40-top+117440512
dd KD48-top+117440512
dd KD50-top+117440512
dd KD58-top+117440512
dd KD60-top+117440512
dd KD68-top+117440512
dd KD70-top+117440512
dd KD78-top
dd KD79-top
dd r_illegal-top+83886080
dd KD80-top+117440512
dd KD88-top+117440512
dd KD90-top+117440512
dd KD98-top+117440512
dd KDA0-top+117440512
dd KDA8-top+117440512
dd KDB0-top+117440512
dd KDB8-top
dd KDB9-top
dd r_illegal-top+83886080
dd KDC0-top+117440512
dd KDC8-top+117440512
dd KDD0-top+117440512
dd KDD8-top+117440512
dd KDE0-top+117440512
dd KDE8-top+117440512
dd KDF0-top+117440512
dd KDF8-top
dd KDF9-top
dd r_illegal-top+4278190080
dd r_illegal-top+83886080
dd KF00-top+117440512
dd KF08-top+117440512
dd KF10-top+117440512
dd KF18-top+117440512
dd KF20-top+117440512
dd KF28-top+117440512
dd KF30-top+117440512
dd KF38-top
dd KF39-top
dd KF3A-top
dd KF3B-top
dd KF3C-top
dd r_illegal-top+33554432
dd KF40-top+117440512
dd KF48-top+117440512
dd KF50-top+117440512
dd KF58-top+117440512
dd KF60-top+117440512
dd KF68-top+117440512
dd KF70-top+117440512
dd KF78-top
dd KF79-top
dd r_illegal-top+83886080
dd KF80-top+117440512
dd KF88-top+117440512
dd KF90-top+117440512
dd KF98-top+117440512
dd KFA0-top+117440512
dd KFA8-top+117440512
dd KFB0-top+117440512
dd KFB8-top
dd KFB9-top
dd r_illegal-top+83886080
dd KFC0-top+117440512
dd KFC8-top+117440512
dd KFD0-top+117440512
dd KFD8-top+117440512
dd KFE0-top+117440512
dd KFE8-top+117440512
dd KFF0-top+117440512
dd KFF8-top
dd KFF9-top
dd r_illegal-top+83886080
dd L000-top+117440512
dd L008-top+117440512
dd L010-top+117440512
dd L018-top+117440512
dd L020-top+117440512
dd L028-top+117440512
dd L030-top+117440512
dd L038-top
dd L039-top
dd L03A-top
dd L03B-top
dd L03C-top
dd r_illegal-top+1107296256
dd L080-top+117440512
dd L088-top+117440512
dd L090-top+117440512
dd L098-top+117440512
dd L0A0-top+117440512
dd L0A8-top+117440512
dd L0B0-top+117440512
dd L0B8-top
dd L0B9-top
dd L0BA-top
dd L0BB-top
dd L0BC-top
dd r_illegal-top+33554432
dd L0C0-top+117440512
dd L0C8-top+117440512
dd L0D0-top+117440512
dd L0D8-top+117440512
dd L0E0-top+117440512
dd L0E8-top+117440512
dd L0F0-top+117440512
dd L0F8-top
dd L0F9-top
dd L0FA-top
dd L0FB-top
dd L0FC-top
dd r_illegal-top+33554432
dd L100-top+117440512
dd L108-top+117440512
dd L110-top+117440512
dd L118-top+117440512
dd L120-top+117440512
dd L128-top+117440512
dd L130-top+117440512
dd L138-top
dd L139-top
dd L13A-top
dd L13B-top
dd L13C-top
dd r_illegal-top+33554432
dd L140-top+117440512
dd L148-top+117440512
dd L150-top+117440512
dd L158-top+117440512
dd L160-top+117440512
dd L168-top+117440512
dd L170-top+117440512
dd L178-top
dd L179-top
dd L17A-top
dd L17B-top
dd L17C-top
dd r_illegal-top+33554432
dd L180-top+117440512
dd L188-top+117440512
dd L190-top+117440512
dd L198-top+117440512
dd L1A0-top+117440512
dd L1A8-top+117440512
dd L1B0-top+117440512
dd L1B8-top
dd L1B9-top
dd L1BA-top
dd L1BB-top
dd L1BC-top
dd r_illegal-top+33554432
dd L1C0-top+117440512
dd L1C8-top+117440512
dd L1D0-top+117440512
dd L1D8-top+117440512
dd L1E0-top+117440512
dd L1E8-top+117440512
dd L1F0-top+117440512
dd L1F8-top
dd L1F9-top
dd L1FA-top
dd L1FB-top
dd L1FC-top
dd r_illegal-top+33554432
dd L200-top+117440512
dd L208-top+117440512
dd L210-top+117440512
dd L218-top+117440512
dd L220-top+117440512
dd L228-top+117440512
dd L230-top+117440512
dd L238-top
dd L239-top
dd L23A-top
dd L23B-top
dd L23C-top
dd r_illegal-top+1107296256
dd L280-top+117440512
dd L288-top+117440512
dd L290-top+117440512
dd L298-top+117440512
dd L2A0-top+117440512
dd L2A8-top+117440512
dd L2B0-top+117440512
dd L2B8-top
dd L2B9-top
dd L2BA-top
dd L2BB-top
dd L2BC-top
dd r_illegal-top+33554432
dd L2C0-top+117440512
dd L2C8-top+117440512
dd L2D0-top+117440512
dd L2D8-top+117440512
dd L2E0-top+117440512
dd L2E8-top+117440512
dd L2F0-top+117440512
dd L2F8-top
dd L2F9-top
dd L2FA-top
dd L2FB-top
dd L2FC-top
dd r_illegal-top+33554432
dd L300-top+117440512
dd L308-top+117440512
dd L310-top+117440512
dd L318-top+117440512
dd L320-top+117440512
dd L328-top+117440512
dd L330-top+117440512
dd L338-top
dd L339-top
dd L33A-top
dd L33B-top
dd L33C-top
dd r_illegal-top+33554432
dd L340-top+117440512
dd L348-top+117440512
dd L350-top+117440512
dd L358-top+117440512
dd L360-top+117440512
dd L368-top+117440512
dd L370-top+117440512
dd L378-top
dd L379-top
dd L37A-top
dd L37B-top
dd L37C-top
dd r_illegal-top+33554432
dd L380-top+117440512
dd L388-top+117440512
dd L390-top+117440512
dd L398-top+117440512
dd L3A0-top+117440512
dd L3A8-top+117440512
dd L3B0-top+117440512
dd L3B8-top
dd L3B9-top
dd L3BA-top
dd L3BB-top
dd L3BC-top
dd r_illegal-top+33554432
dd L3C0-top+117440512
dd L3C8-top+117440512
dd L3D0-top+117440512
dd L3D8-top+117440512
dd L3E0-top+117440512
dd L3E8-top+117440512
dd L3F0-top+117440512
dd L3F8-top
dd L3F9-top
dd L3FA-top
dd L3FB-top
dd L3FC-top
dd r_illegal-top+33554432
dd L400-top+117440512
dd L408-top+117440512
dd L410-top+117440512
dd L418-top+117440512
dd L420-top+117440512
dd L428-top+117440512
dd L430-top+117440512
dd L438-top
dd L439-top
dd L43A-top
dd L43B-top
dd L43C-top
dd r_illegal-top+1107296256
dd L480-top+117440512
dd L488-top+117440512
dd L490-top+117440512
dd L498-top+117440512
dd L4A0-top+117440512
dd L4A8-top+117440512
dd L4B0-top+117440512
dd L4B8-top
dd L4B9-top
dd L4BA-top
dd L4BB-top
dd L4BC-top
dd r_illegal-top+33554432
dd L4C0-top+117440512
dd L4C8-top+117440512
dd L4D0-top+117440512
dd L4D8-top+117440512
dd L4E0-top+117440512
dd L4E8-top+117440512
dd L4F0-top+117440512
dd L4F8-top
dd L4F9-top
dd L4FA-top
dd L4FB-top
dd L4FC-top
dd r_illegal-top+33554432
dd L500-top+117440512
dd L508-top+117440512
dd L510-top+117440512
dd L518-top+117440512
dd L520-top+117440512
dd L528-top+117440512
dd L530-top+117440512
dd L538-top
dd L539-top
dd L53A-top
dd L53B-top
dd L53C-top
dd r_illegal-top+33554432
dd L540-top+117440512
dd L548-top+117440512
dd L550-top+117440512
dd L558-top+117440512
dd L560-top+117440512
dd L568-top+117440512
dd L570-top+117440512
dd L578-top
dd L579-top
dd L57A-top
dd L57B-top
dd L57C-top
dd r_illegal-top+33554432
dd L580-top+117440512
dd L588-top+117440512
dd L590-top+117440512
dd L598-top+117440512
dd L5A0-top+117440512
dd L5A8-top+117440512
dd L5B0-top+117440512
dd L5B8-top
dd L5B9-top
dd L5BA-top
dd L5BB-top
dd L5BC-top
dd r_illegal-top+1107296256
dd L600-top+117440512
dd L608-top+117440512
dd L610-top+117440512
dd L618-top+117440512
dd L620-top+117440512
dd L628-top+117440512
dd L630-top+117440512
dd L638-top
dd L639-top
dd L63A-top
dd L63B-top
dd L63C-top
dd r_illegal-top+1107296256
dd L680-top+117440512
dd L688-top+117440512
dd L690-top+117440512
dd L698-top+117440512
dd L6A0-top+117440512
dd L6A8-top+117440512
dd L6B0-top+117440512
dd L6B8-top
dd L6B9-top
dd L6BA-top
dd L6BB-top
dd L6BC-top
dd r_illegal-top+33554432
dd L6C0-top+117440512
dd L6C8-top+117440512
dd L6D0-top+117440512
dd L6D8-top+117440512
dd L6E0-top+117440512
dd L6E8-top+117440512
dd L6F0-top+117440512
dd L6F8-top
dd L6F9-top
dd L6FA-top
dd L6FB-top
dd L6FC-top
dd r_illegal-top+33554432
dd L700-top+117440512
dd L708-top+117440512
dd L710-top+117440512
dd L718-top+117440512
dd L720-top+117440512
dd L728-top+117440512
dd L730-top+117440512
dd L738-top
dd L739-top
dd L73A-top
dd L73B-top
dd L73C-top
dd r_illegal-top+33554432
dd L740-top+117440512
dd L748-top+117440512
dd L750-top+117440512
dd L758-top+117440512
dd L760-top+117440512
dd L768-top+117440512
dd L770-top+117440512
dd L778-top
dd L779-top
dd L77A-top
dd L77B-top
dd L77C-top
dd r_illegal-top+33554432
dd L780-top+117440512
dd L788-top+117440512
dd L790-top+117440512
dd L798-top+117440512
dd L7A0-top+117440512
dd L7A8-top+117440512
dd L7B0-top+117440512
dd L7B8-top
dd L7B9-top
dd L7BA-top
dd L7BB-top
dd L7BC-top
dd r_illegal-top+1107296256
dd L800-top+117440512
dd L808-top+117440512
dd L810-top+117440512
dd L818-top+117440512
dd L820-top+117440512
dd L828-top+117440512
dd L830-top+117440512
dd L838-top
dd L839-top
dd L83A-top
dd L83B-top
dd L83C-top
dd r_illegal-top+1107296256
dd L880-top+117440512
dd L888-top+117440512
dd L890-top+117440512
dd L898-top+117440512
dd L8A0-top+117440512
dd L8A8-top+117440512
dd L8B0-top+117440512
dd L8B8-top
dd L8B9-top
dd L8BA-top
dd L8BB-top
dd L8BC-top
dd r_illegal-top+33554432
dd L8C0-top+117440512
dd L8C8-top+117440512
dd L8D0-top+117440512
dd L8D8-top+117440512
dd L8E0-top+117440512
dd L8E8-top+117440512
dd L8F0-top+117440512
dd L8F8-top
dd L8F9-top
dd L8FA-top
dd L8FB-top
dd L8FC-top
dd r_illegal-top+33554432
dd L900-top+117440512
dd L908-top+117440512
dd L910-top+117440512
dd L918-top+117440512
dd L920-top+117440512
dd L928-top+117440512
dd L930-top+117440512
dd L938-top
dd L939-top
dd L93A-top
dd L93B-top
dd L93C-top
dd r_illegal-top+33554432
dd L940-top+117440512
dd L948-top+117440512
dd L950-top+117440512
dd L958-top+117440512
dd L960-top+117440512
dd L968-top+117440512
dd L970-top+117440512
dd L978-top
dd L979-top
dd L97A-top
dd L97B-top
dd L97C-top
dd r_illegal-top+33554432
dd L980-top+117440512
dd L988-top+117440512
dd L990-top+117440512
dd L998-top+117440512
dd L9A0-top+117440512
dd L9A8-top+117440512
dd L9B0-top+117440512
dd L9B8-top
dd L9B9-top
dd L9BA-top
dd L9BB-top
dd L9BC-top
dd r_illegal-top+1107296256
dd LA00-top+117440512
dd LA08-top+117440512
dd LA10-top+117440512
dd LA18-top+117440512
dd LA20-top+117440512
dd LA28-top+117440512
dd LA30-top+117440512
dd LA38-top
dd LA39-top
dd LA3A-top
dd LA3B-top
dd LA3C-top
dd r_illegal-top+1107296256
dd LA80-top+117440512
dd LA88-top+117440512
dd LA90-top+117440512
dd LA98-top+117440512
dd LAA0-top+117440512
dd LAA8-top+117440512
dd LAB0-top+117440512
dd LAB8-top
dd LAB9-top
dd LABA-top
dd LABB-top
dd LABC-top
dd r_illegal-top+33554432
dd LAC0-top+117440512
dd LAC8-top+117440512
dd LAD0-top+117440512
dd LAD8-top+117440512
dd LAE0-top+117440512
dd LAE8-top+117440512
dd LAF0-top+117440512
dd LAF8-top
dd LAF9-top
dd LAFA-top
dd LAFB-top
dd LAFC-top
dd r_illegal-top+33554432
dd LB00-top+117440512
dd LB08-top+117440512
dd LB10-top+117440512
dd LB18-top+117440512
dd LB20-top+117440512
dd LB28-top+117440512
dd LB30-top+117440512
dd LB38-top
dd LB39-top
dd LB3A-top
dd LB3B-top
dd LB3C-top
dd r_illegal-top+33554432
dd LB40-top+117440512
dd LB48-top+117440512
dd LB50-top+117440512
dd LB58-top+117440512
dd LB60-top+117440512
dd LB68-top+117440512
dd LB70-top+117440512
dd LB78-top
dd LB79-top
dd LB7A-top
dd LB7B-top
dd LB7C-top
dd r_illegal-top+33554432
dd LB80-top+117440512
dd LB88-top+117440512
dd LB90-top+117440512
dd LB98-top+117440512
dd LBA0-top+117440512
dd LBA8-top+117440512
dd LBB0-top+117440512
dd LBB8-top
dd LBB9-top
dd LBBA-top
dd LBBB-top
dd LBBC-top
dd r_illegal-top+1107296256
dd LC00-top+117440512
dd LC08-top+117440512
dd LC10-top+117440512
dd LC18-top+117440512
dd LC20-top+117440512
dd LC28-top+117440512
dd LC30-top+117440512
dd LC38-top
dd LC39-top
dd LC3A-top
dd LC3B-top
dd LC3C-top
dd r_illegal-top+1107296256
dd LC80-top+117440512
dd LC88-top+117440512
dd LC90-top+117440512
dd LC98-top+117440512
dd LCA0-top+117440512
dd LCA8-top+117440512
dd LCB0-top+117440512
dd LCB8-top
dd LCB9-top
dd LCBA-top
dd LCBB-top
dd LCBC-top
dd r_illegal-top+33554432
dd LCC0-top+117440512
dd LCC8-top+117440512
dd LCD0-top+117440512
dd LCD8-top+117440512
dd LCE0-top+117440512
dd LCE8-top+117440512
dd LCF0-top+117440512
dd LCF8-top
dd LCF9-top
dd LCFA-top
dd LCFB-top
dd LCFC-top
dd r_illegal-top+33554432
dd LD00-top+117440512
dd LD08-top+117440512
dd LD10-top+117440512
dd LD18-top+117440512
dd LD20-top+117440512
dd LD28-top+117440512
dd LD30-top+117440512
dd LD38-top
dd LD39-top
dd LD3A-top
dd LD3B-top
dd LD3C-top
dd r_illegal-top+33554432
dd LD40-top+117440512
dd LD48-top+117440512
dd LD50-top+117440512
dd LD58-top+117440512
dd LD60-top+117440512
dd LD68-top+117440512
dd LD70-top+117440512
dd LD78-top
dd LD79-top
dd LD7A-top
dd LD7B-top
dd LD7C-top
dd r_illegal-top+33554432
dd LD80-top+117440512
dd LD88-top+117440512
dd LD90-top+117440512
dd LD98-top+117440512
dd LDA0-top+117440512
dd LDA8-top+117440512
dd LDB0-top+117440512
dd LDB8-top
dd LDB9-top
dd LDBA-top
dd LDBB-top
dd LDBC-top
dd r_illegal-top+1107296256
dd LE00-top+117440512
dd LE08-top+117440512
dd LE10-top+117440512
dd LE18-top+117440512
dd LE20-top+117440512
dd LE28-top+117440512
dd LE30-top+117440512
dd LE38-top
dd LE39-top
dd LE3A-top
dd LE3B-top
dd LE3C-top
dd r_illegal-top+1107296256
dd LE80-top+117440512
dd LE88-top+117440512
dd LE90-top+117440512
dd LE98-top+117440512
dd LEA0-top+117440512
dd LEA8-top+117440512
dd LEB0-top+117440512
dd LEB8-top
dd LEB9-top
dd LEBA-top
dd LEBB-top
dd LEBC-top
dd r_illegal-top+33554432
dd LEC0-top+117440512
dd LEC8-top+117440512
dd LED0-top+117440512
dd LED8-top+117440512
dd LEE0-top+117440512
dd LEE8-top+117440512
dd LEF0-top+117440512
dd LEF8-top
dd LEF9-top
dd LEFA-top
dd LEFB-top
dd LEFC-top
dd r_illegal-top+33554432
dd LF00-top+117440512
dd LF08-top+117440512
dd LF10-top+117440512
dd LF18-top+117440512
dd LF20-top+117440512
dd LF28-top+117440512
dd LF30-top+117440512
dd LF38-top
dd LF39-top
dd LF3A-top
dd LF3B-top
dd LF3C-top
dd r_illegal-top+33554432
dd LF40-top+117440512
dd LF48-top+117440512
dd LF50-top+117440512
dd LF58-top+117440512
dd LF60-top+117440512
dd LF68-top+117440512
dd LF70-top+117440512
dd LF78-top
dd LF79-top
dd LF7A-top
dd LF7B-top
dd LF7C-top
dd r_illegal-top+33554432
dd LF80-top+117440512
dd LF88-top+117440512
dd LF90-top+117440512
dd LF98-top+117440512
dd LFA0-top+117440512
dd LFA8-top+117440512
dd LFB0-top+117440512
dd LFB8-top
dd LFB9-top
dd LFBA-top
dd LFBB-top
dd LFBC-top
dd r_illegal-top+1107296256
dd M000-top+117440512
dd M008-top+117440512
dd M010-top+117440512
dd M018-top+117440512
dd M020-top+117440512
dd M028-top+117440512
dd M030-top+117440512
dd M038-top
dd M039-top
dd M03A-top
dd M03B-top
dd M03C-top
dd r_illegal-top+33554432
dd M040-top+117440512
dd M048-top+117440512
dd M050-top+117440512
dd M058-top+117440512
dd M060-top+117440512
dd M068-top+117440512
dd M070-top+117440512
dd M078-top
dd M079-top
dd M07A-top
dd M07B-top
dd M07C-top
dd r_illegal-top+33554432
dd M080-top+117440512
dd M088-top+117440512
dd M090-top+117440512
dd M098-top+117440512
dd M0A0-top+117440512
dd M0A8-top+117440512
dd M0B0-top+117440512
dd M0B8-top
dd M0B9-top
dd M0BA-top
dd M0BB-top
dd M0BC-top
dd r_illegal-top+33554432
dd M0C0-top+117440512
dd M0C8-top+117440512
dd M0D0-top+117440512
dd M0D8-top+117440512
dd M0E0-top+117440512
dd M0E8-top+117440512
dd M0F0-top+117440512
dd M0F8-top
dd M0F9-top
dd M0FA-top
dd M0FB-top
dd M0FC-top
dd r_illegal-top+33554432
dd M100-top+117440512
dd M108-top+117440512
dd M110-top+117440512
dd M118-top+117440512
dd M120-top+117440512
dd M128-top+117440512
dd M130-top+117440512
dd M138-top
dd M139-top
dd M13A-top
dd M13B-top
dd M13C-top
dd r_illegal-top+33554432
dd M140-top+117440512
dd M148-top+117440512
dd M150-top+117440512
dd M158-top+117440512
dd M160-top+117440512
dd M168-top+117440512
dd M170-top+117440512
dd M178-top
dd M179-top
dd M17A-top
dd M17B-top
dd M17C-top
dd r_illegal-top+33554432
dd M180-top+117440512
dd M188-top+117440512
dd M190-top+117440512
dd M198-top+117440512
dd M1A0-top+117440512
dd M1A8-top+117440512
dd M1B0-top+117440512
dd M1B8-top
dd M1B9-top
dd M1BA-top
dd M1BB-top
dd M1BC-top
dd r_illegal-top+33554432
dd M1C0-top+117440512
dd M1C8-top+117440512
dd M1D0-top+117440512
dd M1D8-top+117440512
dd M1E0-top+117440512
dd M1E8-top+117440512
dd M1F0-top+117440512
dd M1F8-top
dd M1F9-top
dd M1FA-top
dd M1FB-top
dd M1FC-top
dd r_illegal-top+33554432
dd M200-top+117440512
dd M208-top+117440512
dd M210-top+117440512
dd M218-top+117440512
dd M220-top+117440512
dd M228-top+117440512
dd M230-top+117440512
dd M238-top
dd M239-top
dd M23A-top
dd M23B-top
dd M23C-top
dd r_illegal-top+33554432
dd M240-top+117440512
dd M248-top+117440512
dd M250-top+117440512
dd M258-top+117440512
dd M260-top+117440512
dd M268-top+117440512
dd M270-top+117440512
dd M278-top
dd M279-top
dd M27A-top
dd M27B-top
dd M27C-top
dd r_illegal-top+33554432
dd M280-top+117440512
dd M288-top+117440512
dd M290-top+117440512
dd M298-top+117440512
dd M2A0-top+117440512
dd M2A8-top+117440512
dd M2B0-top+117440512
dd M2B8-top
dd M2B9-top
dd M2BA-top
dd M2BB-top
dd M2BC-top
dd r_illegal-top+33554432
dd M2C0-top+117440512
dd M2C8-top+117440512
dd M2D0-top+117440512
dd M2D8-top+117440512
dd M2E0-top+117440512
dd M2E8-top+117440512
dd M2F0-top+117440512
dd M2F8-top
dd M2F9-top
dd M2FA-top
dd M2FB-top
dd M2FC-top
dd r_illegal-top+33554432
dd M300-top+117440512
dd M308-top+117440512
dd M310-top+117440512
dd M318-top+117440512
dd M320-top+117440512
dd M328-top+117440512
dd M330-top+117440512
dd M338-top
dd M339-top
dd M33A-top
dd M33B-top
dd M33C-top
dd r_illegal-top+33554432
dd M340-top+117440512
dd M348-top+117440512
dd M350-top+117440512
dd M358-top+117440512
dd M360-top+117440512
dd M368-top+117440512
dd M370-top+117440512
dd M378-top
dd M379-top
dd M37A-top
dd M37B-top
dd M37C-top
dd r_illegal-top+33554432
dd M380-top+117440512
dd M388-top+117440512
dd M390-top+117440512
dd M398-top+117440512
dd M3A0-top+117440512
dd M3A8-top+117440512
dd M3B0-top+117440512
dd M3B8-top
dd M3B9-top
dd M3BA-top
dd M3BB-top
dd M3BC-top
dd r_illegal-top+33554432
dd M3C0-top+117440512
dd M3C8-top+117440512
dd M3D0-top+117440512
dd M3D8-top+117440512
dd M3E0-top+117440512
dd M3E8-top+117440512
dd M3F0-top+117440512
dd M3F8-top
dd M3F9-top
dd M3FA-top
dd M3FB-top
dd M3FC-top
dd r_illegal-top+33554432
dd M400-top+117440512
dd M408-top+117440512
dd M410-top+117440512
dd M418-top+117440512
dd M420-top+117440512
dd M428-top+117440512
dd M430-top+117440512
dd M438-top
dd M439-top
dd M43A-top
dd M43B-top
dd M43C-top
dd r_illegal-top+33554432
dd M440-top+117440512
dd M448-top+117440512
dd M450-top+117440512
dd M458-top+117440512
dd M460-top+117440512
dd M468-top+117440512
dd M470-top+117440512
dd M478-top
dd M479-top
dd M47A-top
dd M47B-top
dd M47C-top
dd r_illegal-top+33554432
dd M480-top+117440512
dd M488-top+117440512
dd M490-top+117440512
dd M498-top+117440512
dd M4A0-top+117440512
dd M4A8-top+117440512
dd M4B0-top+117440512
dd M4B8-top
dd M4B9-top
dd M4BA-top
dd M4BB-top
dd M4BC-top
dd r_illegal-top+33554432
dd M4C0-top+117440512
dd M4C8-top+117440512
dd M4D0-top+117440512
dd M4D8-top+117440512
dd M4E0-top+117440512
dd M4E8-top+117440512
dd M4F0-top+117440512
dd M4F8-top
dd M4F9-top
dd M4FA-top
dd M4FB-top
dd M4FC-top
dd r_illegal-top+33554432
dd M500-top+117440512
dd M508-top+117440512
dd M510-top+117440512
dd M518-top+117440512
dd M520-top+117440512
dd M528-top+117440512
dd M530-top+117440512
dd M538-top
dd M539-top
dd M53A-top
dd M53B-top
dd M53C-top
dd r_illegal-top+33554432
dd M540-top+117440512
dd M548-top+117440512
dd M550-top+117440512
dd M558-top+117440512
dd M560-top+117440512
dd M568-top+117440512
dd M570-top+117440512
dd M578-top
dd M579-top
dd M57A-top
dd M57B-top
dd M57C-top
dd r_illegal-top+33554432
dd M580-top+117440512
dd M588-top+117440512
dd M590-top+117440512
dd M598-top+117440512
dd M5A0-top+117440512
dd M5A8-top+117440512
dd M5B0-top+117440512
dd M5B8-top
dd M5B9-top
dd M5BA-top
dd M5BB-top
dd M5BC-top
dd r_illegal-top+1107296256
dd M600-top+117440512
dd M608-top+117440512
dd M610-top+117440512
dd M618-top+117440512
dd M620-top+117440512
dd M628-top+117440512
dd M630-top+117440512
dd M638-top
dd M639-top
dd M63A-top
dd M63B-top
dd M63C-top
dd r_illegal-top+33554432
dd M640-top+117440512
dd M648-top+117440512
dd M650-top+117440512
dd M658-top+117440512
dd M660-top+117440512
dd M668-top+117440512
dd M670-top+117440512
dd M678-top
dd M679-top
dd M67A-top
dd M67B-top
dd M67C-top
dd r_illegal-top+33554432
dd M680-top+117440512
dd M688-top+117440512
dd M690-top+117440512
dd M698-top+117440512
dd M6A0-top+117440512
dd M6A8-top+117440512
dd M6B0-top+117440512
dd M6B8-top
dd M6B9-top
dd M6BA-top
dd M6BB-top
dd M6BC-top
dd r_illegal-top+33554432
dd M6C0-top+117440512
dd M6C8-top+117440512
dd M6D0-top+117440512
dd M6D8-top+117440512
dd M6E0-top+117440512
dd M6E8-top+117440512
dd M6F0-top+117440512
dd M6F8-top
dd M6F9-top
dd M6FA-top
dd M6FB-top
dd M6FC-top
dd r_illegal-top+33554432
dd M700-top+117440512
dd M708-top+117440512
dd M710-top+117440512
dd M718-top+117440512
dd M720-top+117440512
dd M728-top+117440512
dd M730-top+117440512
dd M738-top
dd M739-top
dd M73A-top
dd M73B-top
dd M73C-top
dd r_illegal-top+33554432
dd M740-top+117440512
dd M748-top+117440512
dd M750-top+117440512
dd M758-top+117440512
dd M760-top+117440512
dd M768-top+117440512
dd M770-top+117440512
dd M778-top
dd M779-top
dd M77A-top
dd M77B-top
dd M77C-top
dd r_illegal-top+33554432
dd M780-top+117440512
dd M788-top+117440512
dd M790-top+117440512
dd M798-top+117440512
dd M7A0-top+117440512
dd M7A8-top+117440512
dd M7B0-top+117440512
dd M7B8-top
dd M7B9-top
dd M7BA-top
dd M7BB-top
dd M7BC-top
dd r_illegal-top+1107296256
dd M800-top+117440512
dd M808-top+117440512
dd M810-top+117440512
dd M818-top+117440512
dd M820-top+117440512
dd M828-top+117440512
dd M830-top+117440512
dd M838-top
dd M839-top
dd M83A-top
dd M83B-top
dd M83C-top
dd r_illegal-top+33554432
dd M840-top+117440512
dd M848-top+117440512
dd M850-top+117440512
dd M858-top+117440512
dd M860-top+117440512
dd M868-top+117440512
dd M870-top+117440512
dd M878-top
dd M879-top
dd M87A-top
dd M87B-top
dd M87C-top
dd r_illegal-top+33554432
dd M880-top+117440512
dd M888-top+117440512
dd M890-top+117440512
dd M898-top+117440512
dd M8A0-top+117440512
dd M8A8-top+117440512
dd M8B0-top+117440512
dd M8B8-top
dd M8B9-top
dd M8BA-top
dd M8BB-top
dd M8BC-top
dd r_illegal-top+33554432
dd M8C0-top+117440512
dd M8C8-top+117440512
dd M8D0-top+117440512
dd M8D8-top+117440512
dd M8E0-top+117440512
dd M8E8-top+117440512
dd M8F0-top+117440512
dd M8F8-top
dd M8F9-top
dd M8FA-top
dd M8FB-top
dd M8FC-top
dd r_illegal-top+33554432
dd M900-top+117440512
dd M908-top+117440512
dd M910-top+117440512
dd M918-top+117440512
dd M920-top+117440512
dd M928-top+117440512
dd M930-top+117440512
dd M938-top
dd M939-top
dd M93A-top
dd M93B-top
dd M93C-top
dd r_illegal-top+33554432
dd M940-top+117440512
dd M948-top+117440512
dd M950-top+117440512
dd M958-top+117440512
dd M960-top+117440512
dd M968-top+117440512
dd M970-top+117440512
dd M978-top
dd M979-top
dd M97A-top
dd M97B-top
dd M97C-top
dd r_illegal-top+33554432
dd M980-top+117440512
dd M988-top+117440512
dd M990-top+117440512
dd M998-top+117440512
dd M9A0-top+117440512
dd M9A8-top+117440512
dd M9B0-top+117440512
dd M9B8-top
dd M9B9-top
dd M9BA-top
dd M9BB-top
dd M9BC-top
dd r_illegal-top+1107296256
dd MA00-top+117440512
dd MA08-top+117440512
dd MA10-top+117440512
dd MA18-top+117440512
dd MA20-top+117440512
dd MA28-top+117440512
dd MA30-top+117440512
dd MA38-top
dd MA39-top
dd MA3A-top
dd MA3B-top
dd MA3C-top
dd r_illegal-top+33554432
dd MA40-top+117440512
dd MA48-top+117440512
dd MA50-top+117440512
dd MA58-top+117440512
dd MA60-top+117440512
dd MA68-top+117440512
dd MA70-top+117440512
dd MA78-top
dd MA79-top
dd MA7A-top
dd MA7B-top
dd MA7C-top
dd r_illegal-top+33554432
dd MA80-top+117440512
dd MA88-top+117440512
dd MA90-top+117440512
dd MA98-top+117440512
dd MAA0-top+117440512
dd MAA8-top+117440512
dd MAB0-top+117440512
dd MAB8-top
dd MAB9-top
dd MABA-top
dd MABB-top
dd MABC-top
dd r_illegal-top+33554432
dd MAC0-top+117440512
dd MAC8-top+117440512
dd MAD0-top+117440512
dd MAD8-top+117440512
dd MAE0-top+117440512
dd MAE8-top+117440512
dd MAF0-top+117440512
dd MAF8-top
dd MAF9-top
dd MAFA-top
dd MAFB-top
dd MAFC-top
dd r_illegal-top+33554432
dd MB00-top+117440512
dd MB08-top+117440512
dd MB10-top+117440512
dd MB18-top+117440512
dd MB20-top+117440512
dd MB28-top+117440512
dd MB30-top+117440512
dd MB38-top
dd MB39-top
dd MB3A-top
dd MB3B-top
dd MB3C-top
dd r_illegal-top+33554432
dd MB40-top+117440512
dd MB48-top+117440512
dd MB50-top+117440512
dd MB58-top+117440512
dd MB60-top+117440512
dd MB68-top+117440512
dd MB70-top+117440512
dd MB78-top
dd MB79-top
dd MB7A-top
dd MB7B-top
dd MB7C-top
dd r_illegal-top+33554432
dd MB80-top+117440512
dd MB88-top+117440512
dd MB90-top+117440512
dd MB98-top+117440512
dd MBA0-top+117440512
dd MBA8-top+117440512
dd MBB0-top+117440512
dd MBB8-top
dd MBB9-top
dd MBBA-top
dd MBBB-top
dd MBBC-top
dd r_illegal-top+1107296256
dd MC00-top+117440512
dd MC08-top+117440512
dd MC10-top+117440512
dd MC18-top+117440512
dd MC20-top+117440512
dd MC28-top+117440512
dd MC30-top+117440512
dd MC38-top
dd MC39-top
dd MC3A-top
dd MC3B-top
dd MC3C-top
dd r_illegal-top+33554432
dd MC40-top+117440512
dd MC48-top+117440512
dd MC50-top+117440512
dd MC58-top+117440512
dd MC60-top+117440512
dd MC68-top+117440512
dd MC70-top+117440512
dd MC78-top
dd MC79-top
dd MC7A-top
dd MC7B-top
dd MC7C-top
dd r_illegal-top+33554432
dd MC80-top+117440512
dd MC88-top+117440512
dd MC90-top+117440512
dd MC98-top+117440512
dd MCA0-top+117440512
dd MCA8-top+117440512
dd MCB0-top+117440512
dd MCB8-top
dd MCB9-top
dd MCBA-top
dd MCBB-top
dd MCBC-top
dd r_illegal-top+33554432
dd MCC0-top+117440512
dd MCC8-top+117440512
dd MCD0-top+117440512
dd MCD8-top+117440512
dd MCE0-top+117440512
dd MCE8-top+117440512
dd MCF0-top+117440512
dd MCF8-top
dd MCF9-top
dd MCFA-top
dd MCFB-top
dd MCFC-top
dd r_illegal-top+33554432
dd MD00-top+117440512
dd MD08-top+117440512
dd MD10-top+117440512
dd MD18-top+117440512
dd MD20-top+117440512
dd MD28-top+117440512
dd MD30-top+117440512
dd MD38-top
dd MD39-top
dd MD3A-top
dd MD3B-top
dd MD3C-top
dd r_illegal-top+33554432
dd MD40-top+117440512
dd MD48-top+117440512
dd MD50-top+117440512
dd MD58-top+117440512
dd MD60-top+117440512
dd MD68-top+117440512
dd MD70-top+117440512
dd MD78-top
dd MD79-top
dd MD7A-top
dd MD7B-top
dd MD7C-top
dd r_illegal-top+33554432
dd MD80-top+117440512
dd MD88-top+117440512
dd MD90-top+117440512
dd MD98-top+117440512
dd MDA0-top+117440512
dd MDA8-top+117440512
dd MDB0-top+117440512
dd MDB8-top
dd MDB9-top
dd MDBA-top
dd MDBB-top
dd MDBC-top
dd r_illegal-top+1107296256
dd ME00-top+117440512
dd ME08-top+117440512
dd ME10-top+117440512
dd ME18-top+117440512
dd ME20-top+117440512
dd ME28-top+117440512
dd ME30-top+117440512
dd ME38-top
dd ME39-top
dd ME3A-top
dd ME3B-top
dd ME3C-top
dd r_illegal-top+33554432
dd ME40-top+117440512
dd ME48-top+117440512
dd ME50-top+117440512
dd ME58-top+117440512
dd ME60-top+117440512
dd ME68-top+117440512
dd ME70-top+117440512
dd ME78-top
dd ME79-top
dd ME7A-top
dd ME7B-top
dd ME7C-top
dd r_illegal-top+33554432
dd ME80-top+117440512
dd ME88-top+117440512
dd ME90-top+117440512
dd ME98-top+117440512
dd MEA0-top+117440512
dd MEA8-top+117440512
dd MEB0-top+117440512
dd MEB8-top
dd MEB9-top
dd MEBA-top
dd MEBB-top
dd MEBC-top
dd r_illegal-top+33554432
dd MEC0-top+117440512
dd MEC8-top+117440512
dd MED0-top+117440512
dd MED8-top+117440512
dd MEE0-top+117440512
dd MEE8-top+117440512
dd MEF0-top+117440512
dd MEF8-top
dd MEF9-top
dd MEFA-top
dd MEFB-top
dd MEFC-top
dd r_illegal-top+33554432
dd MF00-top+117440512
dd MF08-top+117440512
dd MF10-top+117440512
dd MF18-top+117440512
dd MF20-top+117440512
dd MF28-top+117440512
dd MF30-top+117440512
dd MF38-top
dd MF39-top
dd MF3A-top
dd MF3B-top
dd MF3C-top
dd r_illegal-top+33554432
dd MF40-top+117440512
dd MF48-top+117440512
dd MF50-top+117440512
dd MF58-top+117440512
dd MF60-top+117440512
dd MF68-top+117440512
dd MF70-top+117440512
dd MF78-top
dd MF79-top
dd MF7A-top
dd MF7B-top
dd MF7C-top
dd r_illegal-top+33554432
dd MF80-top+117440512
dd MF88-top+117440512
dd MF90-top+117440512
dd MF98-top+117440512
dd MFA0-top+117440512
dd MFA8-top+117440512
dd MFB0-top+117440512
dd MFB8-top
dd MFB9-top
dd MFBA-top
dd MFBB-top
dd MFBC-top
dd r_illegal-top+1107296256
dd N000-top+117440512
dd N008-top+117440512
dd N010-top+117440512
dd N018-top+117440512
dd N020-top+117440512
dd N028-top+117440512
dd N030-top+117440512
dd N038-top
dd N039-top
dd N03A-top
dd N03B-top
dd N03C-top
dd r_illegal-top+33554432
dd N040-top+117440512
dd N048-top+117440512
dd N050-top+117440512
dd N058-top+117440512
dd N060-top+117440512
dd N068-top+117440512
dd N070-top+117440512
dd N078-top
dd N079-top
dd N07A-top
dd N07B-top
dd N07C-top
dd r_illegal-top+33554432
dd N080-top+117440512
dd N088-top+117440512
dd N090-top+117440512
dd N098-top+117440512
dd N0A0-top+117440512
dd N0A8-top+117440512
dd N0B0-top+117440512
dd N0B8-top
dd N0B9-top
dd N0BA-top
dd N0BB-top
dd N0BC-top
dd r_illegal-top+33554432
dd N0C0-top+117440512
dd N0C8-top+117440512
dd N0D0-top+117440512
dd N0D8-top+117440512
dd N0E0-top+117440512
dd N0E8-top+117440512
dd N0F0-top+117440512
dd N0F8-top
dd N0F9-top
dd N0FA-top
dd N0FB-top
dd N0FC-top
dd r_illegal-top+33554432
dd N100-top+117440512
dd N108-top+117440512
dd N110-top+117440512
dd N118-top+117440512
dd N120-top+117440512
dd N128-top+117440512
dd N130-top+117440512
dd N138-top
dd N139-top
dd N13A-top
dd N13B-top
dd N13C-top
dd r_illegal-top+33554432
dd N140-top+117440512
dd N148-top+117440512
dd N150-top+117440512
dd N158-top+117440512
dd N160-top+117440512
dd N168-top+117440512
dd N170-top+117440512
dd N178-top
dd N179-top
dd N17A-top
dd N17B-top
dd N17C-top
dd r_illegal-top+33554432
dd N180-top+117440512
dd N188-top+117440512
dd N190-top+117440512
dd N198-top+117440512
dd N1A0-top+117440512
dd N1A8-top+117440512
dd N1B0-top+117440512
dd N1B8-top
dd N1B9-top
dd N1BA-top
dd N1BB-top
dd N1BC-top
dd r_illegal-top+33554432
dd N1C0-top+117440512
dd N1C8-top+117440512
dd N1D0-top+117440512
dd N1D8-top+117440512
dd N1E0-top+117440512
dd N1E8-top+117440512
dd N1F0-top+117440512
dd N1F8-top
dd N1F9-top
dd N1FA-top
dd N1FB-top
dd N1FC-top
dd r_illegal-top+33554432
dd N200-top+117440512
dd N208-top+117440512
dd N210-top+117440512
dd N218-top+117440512
dd N220-top+117440512
dd N228-top+117440512
dd N230-top+117440512
dd N238-top
dd N239-top
dd N23A-top
dd N23B-top
dd N23C-top
dd r_illegal-top+33554432
dd N240-top+117440512
dd N248-top+117440512
dd N250-top+117440512
dd N258-top+117440512
dd N260-top+117440512
dd N268-top+117440512
dd N270-top+117440512
dd N278-top
dd N279-top
dd N27A-top
dd N27B-top
dd N27C-top
dd r_illegal-top+33554432
dd N280-top+117440512
dd N288-top+117440512
dd N290-top+117440512
dd N298-top+117440512
dd N2A0-top+117440512
dd N2A8-top+117440512
dd N2B0-top+117440512
dd N2B8-top
dd N2B9-top
dd N2BA-top
dd N2BB-top
dd N2BC-top
dd r_illegal-top+33554432
dd N2C0-top+117440512
dd N2C8-top+117440512
dd N2D0-top+117440512
dd N2D8-top+117440512
dd N2E0-top+117440512
dd N2E8-top+117440512
dd N2F0-top+117440512
dd N2F8-top
dd N2F9-top
dd N2FA-top
dd N2FB-top
dd N2FC-top
dd r_illegal-top+33554432
dd N300-top+117440512
dd N308-top+117440512
dd N310-top+117440512
dd N318-top+117440512
dd N320-top+117440512
dd N328-top+117440512
dd N330-top+117440512
dd N338-top
dd N339-top
dd N33A-top
dd N33B-top
dd N33C-top
dd r_illegal-top+33554432
dd N340-top+117440512
dd N348-top+117440512
dd N350-top+117440512
dd N358-top+117440512
dd N360-top+117440512
dd N368-top+117440512
dd N370-top+117440512
dd N378-top
dd N379-top
dd N37A-top
dd N37B-top
dd N37C-top
dd r_illegal-top+33554432
dd N380-top+117440512
dd N388-top+117440512
dd N390-top+117440512
dd N398-top+117440512
dd N3A0-top+117440512
dd N3A8-top+117440512
dd N3B0-top+117440512
dd N3B8-top
dd N3B9-top
dd N3BA-top
dd N3BB-top
dd N3BC-top
dd r_illegal-top+33554432
dd N3C0-top+117440512
dd N3C8-top+117440512
dd N3D0-top+117440512
dd N3D8-top+117440512
dd N3E0-top+117440512
dd N3E8-top+117440512
dd N3F0-top+117440512
dd N3F8-top
dd N3F9-top
dd N3FA-top
dd N3FB-top
dd N3FC-top
dd r_illegal-top+33554432
dd N400-top+117440512
dd N408-top+117440512
dd N410-top+117440512
dd N418-top+117440512
dd N420-top+117440512
dd N428-top+117440512
dd N430-top+117440512
dd N438-top
dd N439-top
dd N43A-top
dd N43B-top
dd N43C-top
dd r_illegal-top+33554432
dd N440-top+117440512
dd N448-top+117440512
dd N450-top+117440512
dd N458-top+117440512
dd N460-top+117440512
dd N468-top+117440512
dd N470-top+117440512
dd N478-top
dd N479-top
dd N47A-top
dd N47B-top
dd N47C-top
dd r_illegal-top+33554432
dd N480-top+117440512
dd N488-top+117440512
dd N490-top+117440512
dd N498-top+117440512
dd N4A0-top+117440512
dd N4A8-top+117440512
dd N4B0-top+117440512
dd N4B8-top
dd N4B9-top
dd N4BA-top
dd N4BB-top
dd N4BC-top
dd r_illegal-top+33554432
dd N4C0-top+117440512
dd N4C8-top+117440512
dd N4D0-top+117440512
dd N4D8-top+117440512
dd N4E0-top+117440512
dd N4E8-top+117440512
dd N4F0-top+117440512
dd N4F8-top
dd N4F9-top
dd N4FA-top
dd N4FB-top
dd N4FC-top
dd r_illegal-top+33554432
dd N500-top+117440512
dd N508-top+117440512
dd N510-top+117440512
dd N518-top+117440512
dd N520-top+117440512
dd N528-top+117440512
dd N530-top+117440512
dd N538-top
dd N539-top
dd N53A-top
dd N53B-top
dd N53C-top
dd r_illegal-top+33554432
dd N540-top+117440512
dd N548-top+117440512
dd N550-top+117440512
dd N558-top+117440512
dd N560-top+117440512
dd N568-top+117440512
dd N570-top+117440512
dd N578-top
dd N579-top
dd N57A-top
dd N57B-top
dd N57C-top
dd r_illegal-top+33554432
dd N580-top+117440512
dd N588-top+117440512
dd N590-top+117440512
dd N598-top+117440512
dd N5A0-top+117440512
dd N5A8-top+117440512
dd N5B0-top+117440512
dd N5B8-top
dd N5B9-top
dd N5BA-top
dd N5BB-top
dd N5BC-top
dd r_illegal-top+1107296256
dd N600-top+117440512
dd N608-top+117440512
dd N610-top+117440512
dd N618-top+117440512
dd N620-top+117440512
dd N628-top+117440512
dd N630-top+117440512
dd N638-top
dd N639-top
dd N63A-top
dd N63B-top
dd N63C-top
dd r_illegal-top+33554432
dd N640-top+117440512
dd N648-top+117440512
dd N650-top+117440512
dd N658-top+117440512
dd N660-top+117440512
dd N668-top+117440512
dd N670-top+117440512
dd N678-top
dd N679-top
dd N67A-top
dd N67B-top
dd N67C-top
dd r_illegal-top+33554432
dd N680-top+117440512
dd N688-top+117440512
dd N690-top+117440512
dd N698-top+117440512
dd N6A0-top+117440512
dd N6A8-top+117440512
dd N6B0-top+117440512
dd N6B8-top
dd N6B9-top
dd N6BA-top
dd N6BB-top
dd N6BC-top
dd r_illegal-top+33554432
dd N6C0-top+117440512
dd N6C8-top+117440512
dd N6D0-top+117440512
dd N6D8-top+117440512
dd N6E0-top+117440512
dd N6E8-top+117440512
dd N6F0-top+117440512
dd N6F8-top
dd N6F9-top
dd N6FA-top
dd N6FB-top
dd N6FC-top
dd r_illegal-top+33554432
dd N700-top+117440512
dd N708-top+117440512
dd N710-top+117440512
dd N718-top+117440512
dd N720-top+117440512
dd N728-top+117440512
dd N730-top+117440512
dd N738-top
dd N739-top
dd N73A-top
dd N73B-top
dd N73C-top
dd r_illegal-top+33554432
dd N740-top+117440512
dd N748-top+117440512
dd N750-top+117440512
dd N758-top+117440512
dd N760-top+117440512
dd N768-top+117440512
dd N770-top+117440512
dd N778-top
dd N779-top
dd N77A-top
dd N77B-top
dd N77C-top
dd r_illegal-top+33554432
dd N780-top+117440512
dd N788-top+117440512
dd N790-top+117440512
dd N798-top+117440512
dd N7A0-top+117440512
dd N7A8-top+117440512
dd N7B0-top+117440512
dd N7B8-top
dd N7B9-top
dd N7BA-top
dd N7BB-top
dd N7BC-top
dd r_illegal-top+1107296256
dd N800-top+117440512
dd N808-top+117440512
dd N810-top+117440512
dd N818-top+117440512
dd N820-top+117440512
dd N828-top+117440512
dd N830-top+117440512
dd N838-top
dd N839-top
dd N83A-top
dd N83B-top
dd N83C-top
dd r_illegal-top+33554432
dd N840-top+117440512
dd N848-top+117440512
dd N850-top+117440512
dd N858-top+117440512
dd N860-top+117440512
dd N868-top+117440512
dd N870-top+117440512
dd N878-top
dd N879-top
dd N87A-top
dd N87B-top
dd N87C-top
dd r_illegal-top+33554432
dd N880-top+117440512
dd N888-top+117440512
dd N890-top+117440512
dd N898-top+117440512
dd N8A0-top+117440512
dd N8A8-top+117440512
dd N8B0-top+117440512
dd N8B8-top
dd N8B9-top
dd N8BA-top
dd N8BB-top
dd N8BC-top
dd r_illegal-top+33554432
dd N8C0-top+117440512
dd N8C8-top+117440512
dd N8D0-top+117440512
dd N8D8-top+117440512
dd N8E0-top+117440512
dd N8E8-top+117440512
dd N8F0-top+117440512
dd N8F8-top
dd N8F9-top
dd N8FA-top
dd N8FB-top
dd N8FC-top
dd r_illegal-top+33554432
dd N900-top+117440512
dd N908-top+117440512
dd N910-top+117440512
dd N918-top+117440512
dd N920-top+117440512
dd N928-top+117440512
dd N930-top+117440512
dd N938-top
dd N939-top
dd N93A-top
dd N93B-top
dd N93C-top
dd r_illegal-top+33554432
dd N940-top+117440512
dd N948-top+117440512
dd N950-top+117440512
dd N958-top+117440512
dd N960-top+117440512
dd N968-top+117440512
dd N970-top+117440512
dd N978-top
dd N979-top
dd N97A-top
dd N97B-top
dd N97C-top
dd r_illegal-top+33554432
dd N980-top+117440512
dd N988-top+117440512
dd N990-top+117440512
dd N998-top+117440512
dd N9A0-top+117440512
dd N9A8-top+117440512
dd N9B0-top+117440512
dd N9B8-top
dd N9B9-top
dd N9BA-top
dd N9BB-top
dd N9BC-top
dd r_illegal-top+1107296256
dd NA00-top+117440512
dd NA08-top+117440512
dd NA10-top+117440512
dd NA18-top+117440512
dd NA20-top+117440512
dd NA28-top+117440512
dd NA30-top+117440512
dd NA38-top
dd NA39-top
dd NA3A-top
dd NA3B-top
dd NA3C-top
dd r_illegal-top+33554432
dd NA40-top+117440512
dd NA48-top+117440512
dd NA50-top+117440512
dd NA58-top+117440512
dd NA60-top+117440512
dd NA68-top+117440512
dd NA70-top+117440512
dd NA78-top
dd NA79-top
dd NA7A-top
dd NA7B-top
dd NA7C-top
dd r_illegal-top+33554432
dd NA80-top+117440512
dd NA88-top+117440512
dd NA90-top+117440512
dd NA98-top+117440512
dd NAA0-top+117440512
dd NAA8-top+117440512
dd NAB0-top+117440512
dd NAB8-top
dd NAB9-top
dd NABA-top
dd NABB-top
dd NABC-top
dd r_illegal-top+33554432
dd NAC0-top+117440512
dd NAC8-top+117440512
dd NAD0-top+117440512
dd NAD8-top+117440512
dd NAE0-top+117440512
dd NAE8-top+117440512
dd NAF0-top+117440512
dd NAF8-top
dd NAF9-top
dd NAFA-top
dd NAFB-top
dd NAFC-top
dd r_illegal-top+33554432
dd NB00-top+117440512
dd NB08-top+117440512
dd NB10-top+117440512
dd NB18-top+117440512
dd NB20-top+117440512
dd NB28-top+117440512
dd NB30-top+117440512
dd NB38-top
dd NB39-top
dd NB3A-top
dd NB3B-top
dd NB3C-top
dd r_illegal-top+33554432
dd NB40-top+117440512
dd NB48-top+117440512
dd NB50-top+117440512
dd NB58-top+117440512
dd NB60-top+117440512
dd NB68-top+117440512
dd NB70-top+117440512
dd NB78-top
dd NB79-top
dd NB7A-top
dd NB7B-top
dd NB7C-top
dd r_illegal-top+33554432
dd NB80-top+117440512
dd NB88-top+117440512
dd NB90-top+117440512
dd NB98-top+117440512
dd NBA0-top+117440512
dd NBA8-top+117440512
dd NBB0-top+117440512
dd NBB8-top
dd NBB9-top
dd NBBA-top
dd NBBB-top
dd NBBC-top
dd r_illegal-top+1107296256
dd NC00-top+117440512
dd NC08-top+117440512
dd NC10-top+117440512
dd NC18-top+117440512
dd NC20-top+117440512
dd NC28-top+117440512
dd NC30-top+117440512
dd NC38-top
dd NC39-top
dd NC3A-top
dd NC3B-top
dd NC3C-top
dd r_illegal-top+33554432
dd NC40-top+117440512
dd NC48-top+117440512
dd NC50-top+117440512
dd NC58-top+117440512
dd NC60-top+117440512
dd NC68-top+117440512
dd NC70-top+117440512
dd NC78-top
dd NC79-top
dd NC7A-top
dd NC7B-top
dd NC7C-top
dd r_illegal-top+33554432
dd NC80-top+117440512
dd NC88-top+117440512
dd NC90-top+117440512
dd NC98-top+117440512
dd NCA0-top+117440512
dd NCA8-top+117440512
dd NCB0-top+117440512
dd NCB8-top
dd NCB9-top
dd NCBA-top
dd NCBB-top
dd NCBC-top
dd r_illegal-top+33554432
dd NCC0-top+117440512
dd NCC8-top+117440512
dd NCD0-top+117440512
dd NCD8-top+117440512
dd NCE0-top+117440512
dd NCE8-top+117440512
dd NCF0-top+117440512
dd NCF8-top
dd NCF9-top
dd NCFA-top
dd NCFB-top
dd NCFC-top
dd r_illegal-top+33554432
dd ND00-top+117440512
dd ND08-top+117440512
dd ND10-top+117440512
dd ND18-top+117440512
dd ND20-top+117440512
dd ND28-top+117440512
dd ND30-top+117440512
dd ND38-top
dd ND39-top
dd ND3A-top
dd ND3B-top
dd ND3C-top
dd r_illegal-top+33554432
dd ND40-top+117440512
dd ND48-top+117440512
dd ND50-top+117440512
dd ND58-top+117440512
dd ND60-top+117440512
dd ND68-top+117440512
dd ND70-top+117440512
dd ND78-top
dd ND79-top
dd ND7A-top
dd ND7B-top
dd ND7C-top
dd r_illegal-top+33554432
dd ND80-top+117440512
dd ND88-top+117440512
dd ND90-top+117440512
dd ND98-top+117440512
dd NDA0-top+117440512
dd NDA8-top+117440512
dd NDB0-top+117440512
dd NDB8-top
dd NDB9-top
dd NDBA-top
dd NDBB-top
dd NDBC-top
dd r_illegal-top+1107296256
dd NE00-top+117440512
dd NE08-top+117440512
dd NE10-top+117440512
dd NE18-top+117440512
dd NE20-top+117440512
dd NE28-top+117440512
dd NE30-top+117440512
dd NE38-top
dd NE39-top
dd NE3A-top
dd NE3B-top
dd NE3C-top
dd r_illegal-top+33554432
dd NE40-top+117440512
dd NE48-top+117440512
dd NE50-top+117440512
dd NE58-top+117440512
dd NE60-top+117440512
dd NE68-top+117440512
dd NE70-top+117440512
dd NE78-top
dd NE79-top
dd NE7A-top
dd NE7B-top
dd NE7C-top
dd r_illegal-top+33554432
dd NE80-top+117440512
dd NE88-top+117440512
dd NE90-top+117440512
dd NE98-top+117440512
dd NEA0-top+117440512
dd NEA8-top+117440512
dd NEB0-top+117440512
dd NEB8-top
dd NEB9-top
dd NEBA-top
dd NEBB-top
dd NEBC-top
dd r_illegal-top+33554432
dd NEC0-top+117440512
dd NEC8-top+117440512
dd NED0-top+117440512
dd NED8-top+117440512
dd NEE0-top+117440512
dd NEE8-top+117440512
dd NEF0-top+117440512
dd NEF8-top
dd NEF9-top
dd NEFA-top
dd NEFB-top
dd NEFC-top
dd r_illegal-top+33554432
dd NF00-top+117440512
dd NF08-top+117440512
dd NF10-top+117440512
dd NF18-top+117440512
dd NF20-top+117440512
dd NF28-top+117440512
dd NF30-top+117440512
dd NF38-top
dd NF39-top
dd NF3A-top
dd NF3B-top
dd NF3C-top
dd r_illegal-top+33554432
dd NF40-top+117440512
dd NF48-top+117440512
dd NF50-top+117440512
dd NF58-top+117440512
dd NF60-top+117440512
dd NF68-top+117440512
dd NF70-top+117440512
dd NF78-top
dd NF79-top
dd NF7A-top
dd NF7B-top
dd NF7C-top
dd r_illegal-top+33554432
dd NF80-top+117440512
dd NF88-top+117440512
dd NF90-top+117440512
dd NF98-top+117440512
dd NFA0-top+117440512
dd NFA8-top+117440512
dd NFB0-top+117440512
dd NFB8-top
dd NFB9-top
dd NFBA-top
dd NFBB-top
dd NFBC-top
dd r_illegal-top+1107296256
dd O000-top+117440512
dd r_illegal-top+117440512
dd O010-top+117440512
dd O018-top+117440512
dd O020-top+117440512
dd O028-top+117440512
dd O030-top+117440512
dd O038-top
dd O039-top
dd r_illegal-top+83886080
dd O040-top+117440512
dd r_illegal-top+117440512
dd O050-top+117440512
dd O058-top+117440512
dd O060-top+117440512
dd O068-top+117440512
dd O070-top+117440512
dd O078-top
dd O079-top
dd r_illegal-top+83886080
dd O080-top+117440512
dd r_illegal-top+117440512
dd O090-top+117440512
dd O098-top+117440512
dd O0A0-top+117440512
dd O0A8-top+117440512
dd O0B0-top+117440512
dd O0B8-top
dd O0B9-top
dd r_illegal-top+83886080
dd O0C0-top+117440512
dd r_illegal-top+117440512
dd O0D0-top+117440512
dd O0D8-top+117440512
dd O0E0-top+117440512
dd O0E8-top+117440512
dd O0F0-top+117440512
dd O0F8-top
dd O0F9-top
dd r_illegal-top+83886080
dd O100-top+117440512
dd r_illegal-top+117440512
dd O110-top+117440512
dd O118-top+117440512
dd O120-top+117440512
dd O128-top+117440512
dd O130-top+117440512
dd O138-top
dd O139-top
dd O13A-top
dd O13B-top
dd O13C-top
dd r_illegal-top+2449473536
dd O1D0-top+117440512
dd r_illegal-top+251658240
dd O1E8-top+117440512
dd O1F0-top+117440512
dd O1F8-top
dd O1F9-top
dd O1FA-top
dd O1FB-top
dd r_illegal-top+50331648
dd O200-top+117440512
dd r_illegal-top+117440512
dd O210-top+117440512
dd O218-top+117440512
dd O220-top+117440512
dd O228-top+117440512
dd O230-top+117440512
dd O238-top
dd O239-top
dd r_illegal-top+83886080
dd O240-top+117440512
dd r_illegal-top+117440512
dd O250-top+117440512
dd O258-top+117440512
dd O260-top+117440512
dd O268-top+117440512
dd O270-top+117440512
dd O278-top
dd O279-top
dd r_illegal-top+83886080
dd O280-top+117440512
dd r_illegal-top+117440512
dd O290-top+117440512
dd O298-top+117440512
dd O2A0-top+117440512
dd O2A8-top+117440512
dd O2B0-top+117440512
dd O2B8-top
dd O2B9-top
dd r_illegal-top+1157627904
dd O300-top+117440512
dd r_illegal-top+117440512
dd O310-top+117440512
dd O318-top+117440512
dd O320-top+117440512
dd O328-top+117440512
dd O330-top+117440512
dd O338-top
dd O339-top
dd O33A-top
dd O33B-top
dd O33C-top
dd r_illegal-top+2449473536
dd O3D0-top+117440512
dd r_illegal-top+251658240
dd O3E8-top+117440512
dd O3F0-top+117440512
dd O3F8-top
dd O3F9-top
dd O3FA-top
dd O3FB-top
dd r_illegal-top+50331648
dd O400-top+117440512
dd r_illegal-top+117440512
dd O410-top+117440512
dd O418-top+117440512
dd O420-top+117440512
dd O428-top+117440512
dd O430-top+117440512
dd O438-top
dd O439-top
dd r_illegal-top+83886080
dd O440-top+117440512
dd r_illegal-top+117440512
dd O450-top+117440512
dd O458-top+117440512
dd O460-top+117440512
dd O468-top+117440512
dd O470-top+117440512
dd O478-top
dd O479-top
dd r_illegal-top+83886080
dd O480-top+117440512
dd r_illegal-top+117440512
dd O490-top+117440512
dd O498-top+117440512
dd O4A0-top+117440512
dd O4A8-top+117440512
dd O4B0-top+117440512
dd O4B8-top
dd O4B9-top
dd r_illegal-top+83886080
dd O4C0-top+117440512
dd r_illegal-top+117440512
dd O4D0-top+117440512
dd O4D8-top+117440512
dd O4E0-top+117440512
dd O4E8-top+117440512
dd O4F0-top+117440512
dd O4F8-top
dd O4F9-top
dd O4FA-top
dd O4FB-top
dd O4FC-top
dd r_illegal-top+33554432
dd O500-top+117440512
dd r_illegal-top+117440512
dd O510-top+117440512
dd O518-top+117440512
dd O520-top+117440512
dd O528-top+117440512
dd O530-top+117440512
dd O538-top
dd O539-top
dd O53A-top
dd O53B-top
dd O53C-top
dd r_illegal-top+2449473536
dd O5D0-top+117440512
dd r_illegal-top+251658240
dd O5E8-top+117440512
dd O5F0-top+117440512
dd O5F8-top
dd O5F9-top
dd O5FA-top
dd O5FB-top
dd r_illegal-top+50331648
dd O600-top+117440512
dd r_illegal-top+117440512
dd O610-top+117440512
dd O618-top+117440512
dd O620-top+117440512
dd O628-top+117440512
dd O630-top+117440512
dd O638-top
dd O639-top
dd r_illegal-top+83886080
dd O640-top+117440512
dd r_illegal-top+117440512
dd O650-top+117440512
dd O658-top+117440512
dd O660-top+117440512
dd O668-top+117440512
dd O670-top+117440512
dd O678-top
dd O679-top
dd r_illegal-top+83886080
dd O680-top+117440512
dd r_illegal-top+117440512
dd O690-top+117440512
dd O698-top+117440512
dd O6A0-top+117440512
dd O6A8-top+117440512
dd O6B0-top+117440512
dd O6B8-top
dd O6B9-top
dd r_illegal-top+83886080
dd O6C0-top+117440512
dd r_illegal-top+117440512
dd O6D0-top+117440512
dd O6D8-top+117440512
dd O6E0-top+117440512
dd O6E8-top+117440512
dd O6F0-top+117440512
dd O6F8-top
dd O6F9-top
dd O6FA-top
dd O6FB-top
dd O6FC-top
dd r_illegal-top+33554432
dd O700-top+117440512
dd r_illegal-top+117440512
dd O710-top+117440512
dd O718-top+117440512
dd O720-top+117440512
dd O728-top+117440512
dd O730-top+117440512
dd O738-top
dd O739-top
dd O73A-top
dd O73B-top
dd O73C-top
dd r_illegal-top+2449473536
dd O7D0-top+117440512
dd r_illegal-top+251658240
dd O7E8-top+117440512
dd O7F0-top+117440512
dd O7F8-top
dd O7F9-top
dd O7FA-top
dd O7FB-top
dd r_illegal-top+50331648
dd O800-top+117440512
dd r_illegal-top+117440512
dd O810-top+117440512
dd O818-top+117440512
dd O820-top+117440512
dd O828-top+117440512
dd O830-top+117440512
dd O838-top
dd O839-top
dd r_illegal-top+83886080
dd O840-top+117440512
dd r_illegal-top+117440512
dd O850-top+117440512
dd r_illegal-top+251658240
dd O868-top+117440512
dd O870-top+117440512
dd O878-top
dd O879-top
dd O87A-top
dd O87B-top
dd r_illegal-top+50331648
dd O880-top+117440512
dd r_illegal-top+117440512
dd O890-top+117440512
dd r_illegal-top+117440512
dd O8A0-top+117440512
dd O8A8-top+117440512
dd O8B0-top+117440512
dd O8B8-top
dd O8B9-top
dd r_illegal-top+83886080
dd O8C0-top+117440512
dd r_illegal-top+117440512
dd O8D0-top+117440512
dd r_illegal-top+117440512
dd O8E0-top+117440512
dd O8E8-top+117440512
dd O8F0-top+117440512
dd O8F8-top
dd O8F9-top
dd r_illegal-top+83886080
dd O900-top+117440512
dd r_illegal-top+117440512
dd O910-top+117440512
dd O918-top+117440512
dd O920-top+117440512
dd O928-top+117440512
dd O930-top+117440512
dd O938-top
dd O939-top
dd O93A-top
dd O93B-top
dd O93C-top
dd r_illegal-top+2449473536
dd O9D0-top+117440512
dd r_illegal-top+251658240
dd O9E8-top+117440512
dd O9F0-top+117440512
dd O9F8-top
dd O9F9-top
dd O9FA-top
dd O9FB-top
dd r_illegal-top+50331648
dd OA00-top+117440512
dd r_illegal-top+117440512
dd OA10-top+117440512
dd OA18-top+117440512
dd OA20-top+117440512
dd OA28-top+117440512
dd OA30-top+117440512
dd OA38-top
dd OA39-top
dd r_illegal-top+83886080
dd OA40-top+117440512
dd r_illegal-top+117440512
dd OA50-top+117440512
dd OA58-top+117440512
dd OA60-top+117440512
dd OA68-top+117440512
dd OA70-top+117440512
dd OA78-top
dd OA79-top
dd r_illegal-top+83886080
dd OA80-top+117440512
dd r_illegal-top+117440512
dd OA90-top+117440512
dd OA98-top+117440512
dd OAA0-top+117440512
dd OAA8-top+117440512
dd OAB0-top+117440512
dd OAB8-top
dd OAB9-top
dd r_illegal-top+83886080
dd OAC0-top+117440512
dd r_illegal-top+117440512
dd OAD0-top+117440512
dd OAD8-top+117440512
dd OAE0-top+117440512
dd OAE8-top+117440512
dd OAF0-top+117440512
dd OAF8-top
dd OAF9-top
dd OAFA-top
dd OAFB-top
dd OAFC-top
dd r_illegal-top+33554432
dd OB00-top+117440512
dd r_illegal-top+117440512
dd OB10-top+117440512
dd OB18-top+117440512
dd OB20-top+117440512
dd OB28-top+117440512
dd OB30-top+117440512
dd OB38-top
dd OB39-top
dd OB3A-top
dd OB3B-top
dd OB3C-top
dd r_illegal-top+2449473536
dd OBD0-top+117440512
dd r_illegal-top+251658240
dd OBE8-top+117440512
dd OBF0-top+117440512
dd OBF8-top
dd OBF9-top
dd OBFA-top
dd OBFB-top
dd r_illegal-top+2466250752
dd OC90-top+117440512
dd OC98-top+117440512
dd r_illegal-top+117440512
dd OCA8-top+117440512
dd OCB0-top+117440512
dd OCB8-top
dd OCB9-top
dd OCBA-top
dd OCBB-top
dd r_illegal-top+318767104
dd OCD0-top+117440512
dd OCD8-top+117440512
dd r_illegal-top+117440512
dd OCE8-top+117440512
dd OCF0-top+117440512
dd OCF8-top
dd OCF9-top
dd OCFA-top
dd OCFB-top
dd r_illegal-top+50331648
dd OD00-top+117440512
dd r_illegal-top+117440512
dd OD10-top+117440512
dd OD18-top+117440512
dd OD20-top+117440512
dd OD28-top+117440512
dd OD30-top+117440512
dd OD38-top
dd OD39-top
dd OD3A-top
dd OD3B-top
dd OD3C-top
dd r_illegal-top+2449473536
dd ODD0-top+117440512
dd r_illegal-top+251658240
dd ODE8-top+117440512
dd ODF0-top+117440512
dd ODF8-top
dd ODF9-top
dd ODFA-top
dd ODFB-top
dd r_illegal-top+1124073472
dd OE40-top+251658240
dd OE50-top+117440512
dd OE58-top+117440512
dd OE60-top+117440512
dd OE68-top+117440512
dd OE70-top
dd OE71-top
dd OE72-top
dd OE73-top
dd r_illegal-top
dd OE75-top
dd OE76-top
dd OE77-top
dd r_illegal-top+385875968
dd OE90-top+117440512
dd r_illegal-top+251658240
dd OEA8-top+117440512
dd OEB0-top+117440512
dd OEB8-top
dd OEB9-top
dd OEBA-top
dd OEBB-top
dd r_illegal-top+318767104
dd OED0-top+117440512
dd r_illegal-top+251658240
dd OEE8-top+117440512
dd OEF0-top+117440512
dd OEF8-top
dd OEF9-top
dd OEFA-top
dd OEFB-top
dd r_illegal-top+50331648
dd OF00-top+117440512
dd r_illegal-top+117440512
dd OF10-top+117440512
dd OF18-top+117440512
dd OF20-top+117440512
dd OF28-top+117440512
dd OF30-top+117440512
dd OF38-top
dd OF39-top
dd OF3A-top
dd OF3B-top
dd OF3C-top
dd r_illegal-top+2449473536
dd OFD0-top+117440512
dd r_illegal-top+251658240
dd OFE8-top+117440512
dd OFF0-top+117440512
dd OFF8-top
dd OFF9-top
dd OFFA-top
dd OFFB-top
dd r_illegal-top+50331648
dd P000-top+117440512
dd r_illegal-top+117440512
dd P010-top+117440512
dd P018-top+117440512
dd P020-top+117440512
dd P028-top+117440512
dd P030-top+117440512
dd P038-top
dd P039-top
dd r_illegal-top+83886080
dd P040-top+117440512
dd P048-top+117440512
dd P050-top+117440512
dd P058-top+117440512
dd P060-top+117440512
dd P068-top+117440512
dd P070-top+117440512
dd P078-top
dd P079-top
dd r_illegal-top+83886080
dd P080-top+117440512
dd P088-top+117440512
dd P090-top+117440512
dd P098-top+117440512
dd P0A0-top+117440512
dd P0A8-top+117440512
dd P0B0-top+117440512
dd P0B8-top
dd P0B9-top
dd r_illegal-top+83886080
dd P0C0-top+117440512
dd P0C8-top+117440512
dd P0D0-top+117440512
dd P0D8-top+117440512
dd P0E0-top+117440512
dd P0E8-top+117440512
dd P0F0-top+117440512
dd P0F8-top
dd P0F9-top
dd r_illegal-top+83886080
dd P100-top+117440512
dd r_illegal-top+117440512
dd P110-top+117440512
dd P118-top+117440512
dd P120-top+117440512
dd P128-top+117440512
dd P130-top+117440512
dd P138-top
dd P139-top
dd r_illegal-top+83886080
dd P140-top+117440512
dd P148-top+117440512
dd P150-top+117440512
dd P158-top+117440512
dd P160-top+117440512
dd P168-top+117440512
dd P170-top+117440512
dd P178-top
dd P179-top
dd r_illegal-top+83886080
dd P180-top+117440512
dd P188-top+117440512
dd P190-top+117440512
dd P198-top+117440512
dd P1A0-top+117440512
dd P1A8-top+117440512
dd P1B0-top+117440512
dd P1B8-top
dd P1B9-top
dd r_illegal-top+83886080
dd P1C0-top+117440512
dd P1C8-top+117440512
dd P1D0-top+117440512
dd P1D8-top+117440512
dd P1E0-top+117440512
dd P1E8-top+117440512
dd P1F0-top+117440512
dd P1F8-top
dd P1F9-top
dd r_illegal-top+83886080
dd P200-top+117440512
dd r_illegal-top+117440512
dd P210-top+117440512
dd P218-top+117440512
dd P220-top+117440512
dd P228-top+117440512
dd P230-top+117440512
dd P238-top
dd P239-top
dd r_illegal-top+83886080
dd P240-top+117440512
dd P248-top+117440512
dd P250-top+117440512
dd P258-top+117440512
dd P260-top+117440512
dd P268-top+117440512
dd P270-top+117440512
dd P278-top
dd P279-top
dd r_illegal-top+83886080
dd P280-top+117440512
dd P288-top+117440512
dd P290-top+117440512
dd P298-top+117440512
dd P2A0-top+117440512
dd P2A8-top+117440512
dd P2B0-top+117440512
dd P2B8-top
dd P2B9-top
dd r_illegal-top+83886080
dd P2C0-top+117440512
dd P2C8-top+117440512
dd P2D0-top+117440512
dd P2D8-top+117440512
dd P2E0-top+117440512
dd P2E8-top+117440512
dd P2F0-top+117440512
dd P2F8-top
dd P2F9-top
dd r_illegal-top+83886080
dd P300-top+117440512
dd r_illegal-top+117440512
dd P310-top+117440512
dd P318-top+117440512
dd P320-top+117440512
dd P328-top+117440512
dd P330-top+117440512
dd P338-top
dd P339-top
dd r_illegal-top+83886080
dd P340-top+117440512
dd P348-top+117440512
dd P350-top+117440512
dd P358-top+117440512
dd P360-top+117440512
dd P368-top+117440512
dd P370-top+117440512
dd P378-top
dd P379-top
dd r_illegal-top+83886080
dd P380-top+117440512
dd P388-top+117440512
dd P390-top+117440512
dd P398-top+117440512
dd P3A0-top+117440512
dd P3A8-top+117440512
dd P3B0-top+117440512
dd P3B8-top
dd P3B9-top
dd r_illegal-top+83886080
dd P3C0-top+117440512
dd P3C8-top+117440512
dd P3D0-top+117440512
dd P3D8-top+117440512
dd P3E0-top+117440512
dd P3E8-top+117440512
dd P3F0-top+117440512
dd P3F8-top
dd P3F9-top
dd r_illegal-top+83886080
dd P400-top+117440512
dd r_illegal-top+117440512
dd P410-top+117440512
dd P418-top+117440512
dd P420-top+117440512
dd P428-top+117440512
dd P430-top+117440512
dd P438-top
dd P439-top
dd r_illegal-top+83886080
dd P440-top+117440512
dd P448-top+117440512
dd P450-top+117440512
dd P458-top+117440512
dd P460-top+117440512
dd P468-top+117440512
dd P470-top+117440512
dd P478-top
dd P479-top
dd r_illegal-top+83886080
dd P480-top+117440512
dd P488-top+117440512
dd P490-top+117440512
dd P498-top+117440512
dd P4A0-top+117440512
dd P4A8-top+117440512
dd P4B0-top+117440512
dd P4B8-top
dd P4B9-top
dd r_illegal-top+83886080
dd P4C0-top+117440512
dd P4C8-top+117440512
dd P4D0-top+117440512
dd P4D8-top+117440512
dd P4E0-top+117440512
dd P4E8-top+117440512
dd P4F0-top+117440512
dd P4F8-top
dd P4F9-top
dd r_illegal-top+83886080
dd P500-top+117440512
dd r_illegal-top+117440512
dd P510-top+117440512
dd P518-top+117440512
dd P520-top+117440512
dd P528-top+117440512
dd P530-top+117440512
dd P538-top
dd P539-top
dd r_illegal-top+83886080
dd P540-top+117440512
dd P548-top+117440512
dd P550-top+117440512
dd P558-top+117440512
dd P560-top+117440512
dd P568-top+117440512
dd P570-top+117440512
dd P578-top
dd P579-top
dd r_illegal-top+83886080
dd P580-top+117440512
dd P588-top+117440512
dd P590-top+117440512
dd P598-top+117440512
dd P5A0-top+117440512
dd P5A8-top+117440512
dd P5B0-top+117440512
dd P5B8-top
dd P5B9-top
dd r_illegal-top+83886080
dd P5C0-top+117440512
dd P5C8-top+117440512
dd P5D0-top+117440512
dd P5D8-top+117440512
dd P5E0-top+117440512
dd P5E8-top+117440512
dd P5F0-top+117440512
dd P5F8-top
dd P5F9-top
dd r_illegal-top+83886080
dd P600-top+117440512
dd r_illegal-top+117440512
dd P610-top+117440512
dd P618-top+117440512
dd P620-top+117440512
dd P628-top+117440512
dd P630-top+117440512
dd P638-top
dd P639-top
dd r_illegal-top+83886080
dd P640-top+117440512
dd P648-top+117440512
dd P650-top+117440512
dd P658-top+117440512
dd P660-top+117440512
dd P668-top+117440512
dd P670-top+117440512
dd P678-top
dd P679-top
dd r_illegal-top+83886080
dd P680-top+117440512
dd P688-top+117440512
dd P690-top+117440512
dd P698-top+117440512
dd P6A0-top+117440512
dd P6A8-top+117440512
dd P6B0-top+117440512
dd P6B8-top
dd P6B9-top
dd r_illegal-top+83886080
dd P6C0-top+117440512
dd P6C8-top+117440512
dd P6D0-top+117440512
dd P6D8-top+117440512
dd P6E0-top+117440512
dd P6E8-top+117440512
dd P6F0-top+117440512
dd P6F8-top
dd P6F9-top
dd r_illegal-top+83886080
dd P700-top+117440512
dd r_illegal-top+117440512
dd P710-top+117440512
dd P718-top+117440512
dd P720-top+117440512
dd P728-top+117440512
dd P730-top+117440512
dd P738-top
dd P739-top
dd r_illegal-top+83886080
dd P740-top+117440512
dd P748-top+117440512
dd P750-top+117440512
dd P758-top+117440512
dd P760-top+117440512
dd P768-top+117440512
dd P770-top+117440512
dd P778-top
dd P779-top
dd r_illegal-top+83886080
dd P780-top+117440512
dd P788-top+117440512
dd P790-top+117440512
dd P798-top+117440512
dd P7A0-top+117440512
dd P7A8-top+117440512
dd P7B0-top+117440512
dd P7B8-top
dd P7B9-top
dd r_illegal-top+83886080
dd P7C0-top+117440512
dd P7C8-top+117440512
dd P7D0-top+117440512
dd P7D8-top+117440512
dd P7E0-top+117440512
dd P7E8-top+117440512
dd P7F0-top+117440512
dd P7F8-top
dd P7F9-top
dd r_illegal-top+83886080
dd P800-top+117440512
dd r_illegal-top+117440512
dd P810-top+117440512
dd P818-top+117440512
dd P820-top+117440512
dd P828-top+117440512
dd P830-top+117440512
dd P838-top
dd P839-top
dd r_illegal-top+83886080
dd P840-top+117440512
dd P848-top+117440512
dd P850-top+117440512
dd P858-top+117440512
dd P860-top+117440512
dd P868-top+117440512
dd P870-top+117440512
dd P878-top
dd P879-top
dd r_illegal-top+83886080
dd P880-top+117440512
dd P888-top+117440512
dd P890-top+117440512
dd P898-top+117440512
dd P8A0-top+117440512
dd P8A8-top+117440512
dd P8B0-top+117440512
dd P8B8-top
dd P8B9-top
dd r_illegal-top+83886080
dd P8C0-top+117440512
dd P8C8-top+117440512
dd P8D0-top+117440512
dd P8D8-top+117440512
dd P8E0-top+117440512
dd P8E8-top+117440512
dd P8F0-top+117440512
dd P8F8-top
dd P8F9-top
dd r_illegal-top+83886080
dd P900-top+117440512
dd r_illegal-top+117440512
dd P910-top+117440512
dd P918-top+117440512
dd P920-top+117440512
dd P928-top+117440512
dd P930-top+117440512
dd P938-top
dd P939-top
dd r_illegal-top+83886080
dd P940-top+117440512
dd P948-top+117440512
dd P950-top+117440512
dd P958-top+117440512
dd P960-top+117440512
dd P968-top+117440512
dd P970-top+117440512
dd P978-top
dd P979-top
dd r_illegal-top+83886080
dd P980-top+117440512
dd P988-top+117440512
dd P990-top+117440512
dd P998-top+117440512
dd P9A0-top+117440512
dd P9A8-top+117440512
dd P9B0-top+117440512
dd P9B8-top
dd P9B9-top
dd r_illegal-top+83886080
dd P9C0-top+117440512
dd P9C8-top+117440512
dd P9D0-top+117440512
dd P9D8-top+117440512
dd P9E0-top+117440512
dd P9E8-top+117440512
dd P9F0-top+117440512
dd P9F8-top
dd P9F9-top
dd r_illegal-top+83886080
dd PA00-top+117440512
dd r_illegal-top+117440512
dd PA10-top+117440512
dd PA18-top+117440512
dd PA20-top+117440512
dd PA28-top+117440512
dd PA30-top+117440512
dd PA38-top
dd PA39-top
dd r_illegal-top+83886080
dd PA40-top+117440512
dd PA48-top+117440512
dd PA50-top+117440512
dd PA58-top+117440512
dd PA60-top+117440512
dd PA68-top+117440512
dd PA70-top+117440512
dd PA78-top
dd PA79-top
dd r_illegal-top+83886080
dd PA80-top+117440512
dd PA88-top+117440512
dd PA90-top+117440512
dd PA98-top+117440512
dd PAA0-top+117440512
dd PAA8-top+117440512
dd PAB0-top+117440512
dd PAB8-top
dd PAB9-top
dd r_illegal-top+83886080
dd PAC0-top+117440512
dd PAC8-top+117440512
dd PAD0-top+117440512
dd PAD8-top+117440512
dd PAE0-top+117440512
dd PAE8-top+117440512
dd PAF0-top+117440512
dd PAF8-top
dd PAF9-top
dd r_illegal-top+83886080
dd PB00-top+117440512
dd r_illegal-top+117440512
dd PB10-top+117440512
dd PB18-top+117440512
dd PB20-top+117440512
dd PB28-top+117440512
dd PB30-top+117440512
dd PB38-top
dd PB39-top
dd r_illegal-top+83886080
dd PB40-top+117440512
dd PB48-top+117440512
dd PB50-top+117440512
dd PB58-top+117440512
dd PB60-top+117440512
dd PB68-top+117440512
dd PB70-top+117440512
dd PB78-top
dd PB79-top
dd r_illegal-top+83886080
dd PB80-top+117440512
dd PB88-top+117440512
dd PB90-top+117440512
dd PB98-top+117440512
dd PBA0-top+117440512
dd PBA8-top+117440512
dd PBB0-top+117440512
dd PBB8-top
dd PBB9-top
dd r_illegal-top+83886080
dd PBC0-top+117440512
dd PBC8-top+117440512
dd PBD0-top+117440512
dd PBD8-top+117440512
dd PBE0-top+117440512
dd PBE8-top+117440512
dd PBF0-top+117440512
dd PBF8-top
dd PBF9-top
dd r_illegal-top+83886080
dd PC00-top+117440512
dd r_illegal-top+117440512
dd PC10-top+117440512
dd PC18-top+117440512
dd PC20-top+117440512
dd PC28-top+117440512
dd PC30-top+117440512
dd PC38-top
dd PC39-top
dd r_illegal-top+83886080
dd PC40-top+117440512
dd PC48-top+117440512
dd PC50-top+117440512
dd PC58-top+117440512
dd PC60-top+117440512
dd PC68-top+117440512
dd PC70-top+117440512
dd PC78-top
dd PC79-top
dd r_illegal-top+83886080
dd PC80-top+117440512
dd PC88-top+117440512
dd PC90-top+117440512
dd PC98-top+117440512
dd PCA0-top+117440512
dd PCA8-top+117440512
dd PCB0-top+117440512
dd PCB8-top
dd PCB9-top
dd r_illegal-top+83886080
dd PCC0-top+117440512
dd PCC8-top+117440512
dd PCD0-top+117440512
dd PCD8-top+117440512
dd PCE0-top+117440512
dd PCE8-top+117440512
dd PCF0-top+117440512
dd PCF8-top
dd PCF9-top
dd r_illegal-top+83886080
dd PD00-top+117440512
dd r_illegal-top+117440512
dd PD10-top+117440512
dd PD18-top+117440512
dd PD20-top+117440512
dd PD28-top+117440512
dd PD30-top+117440512
dd PD38-top
dd PD39-top
dd r_illegal-top+83886080
dd PD40-top+117440512
dd PD48-top+117440512
dd PD50-top+117440512
dd PD58-top+117440512
dd PD60-top+117440512
dd PD68-top+117440512
dd PD70-top+117440512
dd PD78-top
dd PD79-top
dd r_illegal-top+83886080
dd PD80-top+117440512
dd PD88-top+117440512
dd PD90-top+117440512
dd PD98-top+117440512
dd PDA0-top+117440512
dd PDA8-top+117440512
dd PDB0-top+117440512
dd PDB8-top
dd PDB9-top
dd r_illegal-top+83886080
dd PDC0-top+117440512
dd PDC8-top+117440512
dd PDD0-top+117440512
dd PDD8-top+117440512
dd PDE0-top+117440512
dd PDE8-top+117440512
dd PDF0-top+117440512
dd PDF8-top
dd PDF9-top
dd r_illegal-top+83886080
dd PE00-top+117440512
dd r_illegal-top+117440512
dd PE10-top+117440512
dd PE18-top+117440512
dd PE20-top+117440512
dd PE28-top+117440512
dd PE30-top+117440512
dd PE38-top
dd PE39-top
dd r_illegal-top+83886080
dd PE40-top+117440512
dd PE48-top+117440512
dd PE50-top+117440512
dd PE58-top+117440512
dd PE60-top+117440512
dd PE68-top+117440512
dd PE70-top+117440512
dd PE78-top
dd PE79-top
dd r_illegal-top+83886080
dd PE80-top+117440512
dd PE88-top+117440512
dd PE90-top+117440512
dd PE98-top+117440512
dd PEA0-top+117440512
dd PEA8-top+117440512
dd PEB0-top+117440512
dd PEB8-top
dd PEB9-top
dd r_illegal-top+83886080
dd PEC0-top+117440512
dd PEC8-top+117440512
dd PED0-top+117440512
dd PED8-top+117440512
dd PEE0-top+117440512
dd PEE8-top+117440512
dd PEF0-top+117440512
dd PEF8-top
dd PEF9-top
dd r_illegal-top+83886080
dd PF00-top+117440512
dd r_illegal-top+117440512
dd PF10-top+117440512
dd PF18-top+117440512
dd PF20-top+117440512
dd PF28-top+117440512
dd PF30-top+117440512
dd PF38-top
dd PF39-top
dd r_illegal-top+83886080
dd PF40-top+117440512
dd PF48-top+117440512
dd PF50-top+117440512
dd PF58-top+117440512
dd PF60-top+117440512
dd PF68-top+117440512
dd PF70-top+117440512
dd PF78-top
dd PF79-top
dd r_illegal-top+83886080
dd PF80-top+117440512
dd PF88-top+117440512
dd PF90-top+117440512
dd PF98-top+117440512
dd PFA0-top+117440512
dd PFA8-top+117440512
dd PFB0-top+117440512
dd PFB8-top
dd PFB9-top
dd r_illegal-top+83886080
dd PFC0-top+117440512
dd PFC8-top+117440512
dd PFD0-top+117440512
dd PFD8-top+117440512
dd PFE0-top+117440512
dd PFE8-top+117440512
dd PFF0-top+117440512
dd PFF8-top
dd PFF9-top
dd r_illegal-top+83886080
dd Q000-top
dd Q001-top+4261412864
dd Q100-top
dd Q101-top+4261412864
dd Q200-top
dd Q201-top+4261412864
dd Q300-top
dd Q301-top+4261412864
dd Q400-top
dd Q401-top+4261412864
dd Q500-top
dd Q501-top+4261412864
dd Q600-top
dd Q601-top+4261412864
dd Q700-top
dd Q701-top+4261412864
dd Q800-top
dd Q801-top+4261412864
dd Q900-top
dd Q901-top+4261412864
dd QA00-top
dd QA01-top+4261412864
dd QB00-top
dd QB01-top+4261412864
dd QC00-top
dd QC01-top+4261412864
dd QD00-top
dd QD01-top+4261412864
dd QE00-top
dd QE01-top+4261412864
dd QF00-top
dd QF01-top+4261412864
dd R000-top+4278190080
dd r_illegal-top+4278190080
dd R200-top+4278190080
dd r_illegal-top+4278190080
dd R400-top+4278190080
dd r_illegal-top+4278190080
dd R600-top+4278190080
dd r_illegal-top+4278190080
dd R800-top+4278190080
dd r_illegal-top+4278190080
dd RA00-top+4278190080
dd r_illegal-top+4278190080
dd RC00-top+4278190080
dd r_illegal-top+4278190080
dd RE00-top+4278190080
dd r_illegal-top+4278190080
dd S000-top+117440512
dd r_illegal-top+117440512
dd S010-top+117440512
dd S018-top+117440512
dd S020-top+117440512
dd S028-top+117440512
dd S030-top+117440512
dd S038-top
dd S039-top
dd S03A-top
dd S03B-top
dd S03C-top
dd r_illegal-top+33554432
dd S040-top+117440512
dd r_illegal-top+117440512
dd S050-top+117440512
dd S058-top+117440512
dd S060-top+117440512
dd S068-top+117440512
dd S070-top+117440512
dd S078-top
dd S079-top
dd S07A-top
dd S07B-top
dd S07C-top
dd r_illegal-top+33554432
dd S080-top+117440512
dd r_illegal-top+117440512
dd S090-top+117440512
dd S098-top+117440512
dd S0A0-top+117440512
dd S0A8-top+117440512
dd S0B0-top+117440512
dd S0B8-top
dd S0B9-top
dd S0BA-top
dd S0BB-top
dd S0BC-top
dd r_illegal-top+33554432
dd S0C0-top+117440512
dd r_illegal-top+117440512
dd S0D0-top+117440512
dd S0D8-top+117440512
dd S0E0-top+117440512
dd S0E8-top+117440512
dd S0F0-top+117440512
dd S0F8-top
dd S0F9-top
dd S0FA-top
dd S0FB-top
dd S0FC-top
dd r_illegal-top+33554432
dd S100-top+117440512
dd S108-top+117440512
dd S110-top+117440512
dd S118-top+117440512
dd S120-top+117440512
dd S128-top+117440512
dd S130-top+117440512
dd S138-top
dd S139-top
dd r_illegal-top+352321536
dd S150-top+117440512
dd S158-top+117440512
dd S160-top+117440512
dd S168-top+117440512
dd S170-top+117440512
dd S178-top
dd S179-top
dd r_illegal-top+352321536
dd S190-top+117440512
dd S198-top+117440512
dd S1A0-top+117440512
dd S1A8-top+117440512
dd S1B0-top+117440512
dd S1B8-top
dd S1B9-top
dd r_illegal-top+83886080
dd S1C0-top+117440512
dd r_illegal-top+117440512
dd S1D0-top+117440512
dd S1D8-top+117440512
dd S1E0-top+117440512
dd S1E8-top+117440512
dd S1F0-top+117440512
dd S1F8-top
dd S1F9-top
dd S1FA-top
dd S1FB-top
dd S1FC-top
dd r_illegal-top+33554432
dd S200-top+117440512
dd r_illegal-top+117440512
dd S210-top+117440512
dd S218-top+117440512
dd S220-top+117440512
dd S228-top+117440512
dd S230-top+117440512
dd S238-top
dd S239-top
dd S23A-top
dd S23B-top
dd S23C-top
dd r_illegal-top+33554432
dd S240-top+117440512
dd r_illegal-top+117440512
dd S250-top+117440512
dd S258-top+117440512
dd S260-top+117440512
dd S268-top+117440512
dd S270-top+117440512
dd S278-top
dd S279-top
dd S27A-top
dd S27B-top
dd S27C-top
dd r_illegal-top+33554432
dd S280-top+117440512
dd r_illegal-top+117440512
dd S290-top+117440512
dd S298-top+117440512
dd S2A0-top+117440512
dd S2A8-top+117440512
dd S2B0-top+117440512
dd S2B8-top
dd S2B9-top
dd S2BA-top
dd S2BB-top
dd S2BC-top
dd r_illegal-top+33554432
dd S2C0-top+117440512
dd r_illegal-top+117440512
dd S2D0-top+117440512
dd S2D8-top+117440512
dd S2E0-top+117440512
dd S2E8-top+117440512
dd S2F0-top+117440512
dd S2F8-top
dd S2F9-top
dd S2FA-top
dd S2FB-top
dd S2FC-top
dd r_illegal-top+33554432
dd S300-top+117440512
dd S308-top+117440512
dd S310-top+117440512
dd S318-top+117440512
dd S320-top+117440512
dd S328-top+117440512
dd S330-top+117440512
dd S338-top
dd S339-top
dd r_illegal-top+352321536
dd S350-top+117440512
dd S358-top+117440512
dd S360-top+117440512
dd S368-top+117440512
dd S370-top+117440512
dd S378-top
dd S379-top
dd r_illegal-top+352321536
dd S390-top+117440512
dd S398-top+117440512
dd S3A0-top+117440512
dd S3A8-top+117440512
dd S3B0-top+117440512
dd S3B8-top
dd S3B9-top
dd r_illegal-top+83886080
dd S3C0-top+117440512
dd r_illegal-top+117440512
dd S3D0-top+117440512
dd S3D8-top+117440512
dd S3E0-top+117440512
dd S3E8-top+117440512
dd S3F0-top+117440512
dd S3F8-top
dd S3F9-top
dd S3FA-top
dd S3FB-top
dd S3FC-top
dd r_illegal-top+33554432
dd S400-top+117440512
dd r_illegal-top+117440512
dd S410-top+117440512
dd S418-top+117440512
dd S420-top+117440512
dd S428-top+117440512
dd S430-top+117440512
dd S438-top
dd S439-top
dd S43A-top
dd S43B-top
dd S43C-top
dd r_illegal-top+33554432
dd S440-top+117440512
dd r_illegal-top+117440512
dd S450-top+117440512
dd S458-top+117440512
dd S460-top+117440512
dd S468-top+117440512
dd S470-top+117440512
dd S478-top
dd S479-top
dd S47A-top
dd S47B-top
dd S47C-top
dd r_illegal-top+33554432
dd S480-top+117440512
dd r_illegal-top+117440512
dd S490-top+117440512
dd S498-top+117440512
dd S4A0-top+117440512
dd S4A8-top+117440512
dd S4B0-top+117440512
dd S4B8-top
dd S4B9-top
dd S4BA-top
dd S4BB-top
dd S4BC-top
dd r_illegal-top+33554432
dd S4C0-top+117440512
dd r_illegal-top+117440512
dd S4D0-top+117440512
dd S4D8-top+117440512
dd S4E0-top+117440512
dd S4E8-top+117440512
dd S4F0-top+117440512
dd S4F8-top
dd S4F9-top
dd S4FA-top
dd S4FB-top
dd S4FC-top
dd r_illegal-top+33554432
dd S500-top+117440512
dd S508-top+117440512
dd S510-top+117440512
dd S518-top+117440512
dd S520-top+117440512
dd S528-top+117440512
dd S530-top+117440512
dd S538-top
dd S539-top
dd r_illegal-top+352321536
dd S550-top+117440512
dd S558-top+117440512
dd S560-top+117440512
dd S568-top+117440512
dd S570-top+117440512
dd S578-top
dd S579-top
dd r_illegal-top+352321536
dd S590-top+117440512
dd S598-top+117440512
dd S5A0-top+117440512
dd S5A8-top+117440512
dd S5B0-top+117440512
dd S5B8-top
dd S5B9-top
dd r_illegal-top+83886080
dd S5C0-top+117440512
dd r_illegal-top+117440512
dd S5D0-top+117440512
dd S5D8-top+117440512
dd S5E0-top+117440512
dd S5E8-top+117440512
dd S5F0-top+117440512
dd S5F8-top
dd S5F9-top
dd S5FA-top
dd S5FB-top
dd S5FC-top
dd r_illegal-top+33554432
dd S600-top+117440512
dd r_illegal-top+117440512
dd S610-top+117440512
dd S618-top+117440512
dd S620-top+117440512
dd S628-top+117440512
dd S630-top+117440512
dd S638-top
dd S639-top
dd S63A-top
dd S63B-top
dd S63C-top
dd r_illegal-top+33554432
dd S640-top+117440512
dd r_illegal-top+117440512
dd S650-top+117440512
dd S658-top+117440512
dd S660-top+117440512
dd S668-top+117440512
dd S670-top+117440512
dd S678-top
dd S679-top
dd S67A-top
dd S67B-top
dd S67C-top
dd r_illegal-top+33554432
dd S680-top+117440512
dd r_illegal-top+117440512
dd S690-top+117440512
dd S698-top+117440512
dd S6A0-top+117440512
dd S6A8-top+117440512
dd S6B0-top+117440512
dd S6B8-top
dd S6B9-top
dd S6BA-top
dd S6BB-top
dd S6BC-top
dd r_illegal-top+33554432
dd S6C0-top+117440512
dd r_illegal-top+117440512
dd S6D0-top+117440512
dd S6D8-top+117440512
dd S6E0-top+117440512
dd S6E8-top+117440512
dd S6F0-top+117440512
dd S6F8-top
dd S6F9-top
dd S6FA-top
dd S6FB-top
dd S6FC-top
dd r_illegal-top+33554432
dd S700-top+117440512
dd S708-top+117440512
dd S710-top+117440512
dd S718-top+117440512
dd S720-top+117440512
dd S728-top+117440512
dd S730-top+117440512
dd S738-top
dd S739-top
dd r_illegal-top+352321536
dd S750-top+117440512
dd S758-top+117440512
dd S760-top+117440512
dd S768-top+117440512
dd S770-top+117440512
dd S778-top
dd S779-top
dd r_illegal-top+352321536
dd S790-top+117440512
dd S798-top+117440512
dd S7A0-top+117440512
dd S7A8-top+117440512
dd S7B0-top+117440512
dd S7B8-top
dd S7B9-top
dd r_illegal-top+83886080
dd S7C0-top+117440512
dd r_illegal-top+117440512
dd S7D0-top+117440512
dd S7D8-top+117440512
dd S7E0-top+117440512
dd S7E8-top+117440512
dd S7F0-top+117440512
dd S7F8-top
dd S7F9-top
dd S7FA-top
dd S7FB-top
dd S7FC-top
dd r_illegal-top+33554432
dd S800-top+117440512
dd r_illegal-top+117440512
dd S810-top+117440512
dd S818-top+117440512
dd S820-top+117440512
dd S828-top+117440512
dd S830-top+117440512
dd S838-top
dd S839-top
dd S83A-top
dd S83B-top
dd S83C-top
dd r_illegal-top+33554432
dd S840-top+117440512
dd r_illegal-top+117440512
dd S850-top+117440512
dd S858-top+117440512
dd S860-top+117440512
dd S868-top+117440512
dd S870-top+117440512
dd S878-top
dd S879-top
dd S87A-top
dd S87B-top
dd S87C-top
dd r_illegal-top+33554432
dd S880-top+117440512
dd r_illegal-top+117440512
dd S890-top+117440512
dd S898-top+117440512
dd S8A0-top+117440512
dd S8A8-top+117440512
dd S8B0-top+117440512
dd S8B8-top
dd S8B9-top
dd S8BA-top
dd S8BB-top
dd S8BC-top
dd r_illegal-top+33554432
dd S8C0-top+117440512
dd r_illegal-top+117440512
dd S8D0-top+117440512
dd S8D8-top+117440512
dd S8E0-top+117440512
dd S8E8-top+117440512
dd S8F0-top+117440512
dd S8F8-top
dd S8F9-top
dd S8FA-top
dd S8FB-top
dd S8FC-top
dd r_illegal-top+33554432
dd S900-top+117440512
dd S908-top+117440512
dd S910-top+117440512
dd S918-top+117440512
dd S920-top+117440512
dd S928-top+117440512
dd S930-top+117440512
dd S938-top
dd S939-top
dd r_illegal-top+352321536
dd S950-top+117440512
dd S958-top+117440512
dd S960-top+117440512
dd S968-top+117440512
dd S970-top+117440512
dd S978-top
dd S979-top
dd r_illegal-top+352321536
dd S990-top+117440512
dd S998-top+117440512
dd S9A0-top+117440512
dd S9A8-top+117440512
dd S9B0-top+117440512
dd S9B8-top
dd S9B9-top
dd r_illegal-top+83886080
dd S9C0-top+117440512
dd r_illegal-top+117440512
dd S9D0-top+117440512
dd S9D8-top+117440512
dd S9E0-top+117440512
dd S9E8-top+117440512
dd S9F0-top+117440512
dd S9F8-top
dd S9F9-top
dd S9FA-top
dd S9FB-top
dd S9FC-top
dd r_illegal-top+33554432
dd SA00-top+117440512
dd r_illegal-top+117440512
dd SA10-top+117440512
dd SA18-top+117440512
dd SA20-top+117440512
dd SA28-top+117440512
dd SA30-top+117440512
dd SA38-top
dd SA39-top
dd SA3A-top
dd SA3B-top
dd SA3C-top
dd r_illegal-top+33554432
dd SA40-top+117440512
dd r_illegal-top+117440512
dd SA50-top+117440512
dd SA58-top+117440512
dd SA60-top+117440512
dd SA68-top+117440512
dd SA70-top+117440512
dd SA78-top
dd SA79-top
dd SA7A-top
dd SA7B-top
dd SA7C-top
dd r_illegal-top+33554432
dd SA80-top+117440512
dd r_illegal-top+117440512
dd SA90-top+117440512
dd SA98-top+117440512
dd SAA0-top+117440512
dd SAA8-top+117440512
dd SAB0-top+117440512
dd SAB8-top
dd SAB9-top
dd SABA-top
dd SABB-top
dd SABC-top
dd r_illegal-top+33554432
dd SAC0-top+117440512
dd r_illegal-top+117440512
dd SAD0-top+117440512
dd SAD8-top+117440512
dd SAE0-top+117440512
dd SAE8-top+117440512
dd SAF0-top+117440512
dd SAF8-top
dd SAF9-top
dd SAFA-top
dd SAFB-top
dd SAFC-top
dd r_illegal-top+33554432
dd SB00-top+117440512
dd SB08-top+117440512
dd SB10-top+117440512
dd SB18-top+117440512
dd SB20-top+117440512
dd SB28-top+117440512
dd SB30-top+117440512
dd SB38-top
dd SB39-top
dd r_illegal-top+352321536
dd SB50-top+117440512
dd SB58-top+117440512
dd SB60-top+117440512
dd SB68-top+117440512
dd SB70-top+117440512
dd SB78-top
dd SB79-top
dd r_illegal-top+352321536
dd SB90-top+117440512
dd SB98-top+117440512
dd SBA0-top+117440512
dd SBA8-top+117440512
dd SBB0-top+117440512
dd SBB8-top
dd SBB9-top
dd r_illegal-top+83886080
dd SBC0-top+117440512
dd r_illegal-top+117440512
dd SBD0-top+117440512
dd SBD8-top+117440512
dd SBE0-top+117440512
dd SBE8-top+117440512
dd SBF0-top+117440512
dd SBF8-top
dd SBF9-top
dd SBFA-top
dd SBFB-top
dd SBFC-top
dd r_illegal-top+33554432
dd SC00-top+117440512
dd r_illegal-top+117440512
dd SC10-top+117440512
dd SC18-top+117440512
dd SC20-top+117440512
dd SC28-top+117440512
dd SC30-top+117440512
dd SC38-top
dd SC39-top
dd SC3A-top
dd SC3B-top
dd SC3C-top
dd r_illegal-top+33554432
dd SC40-top+117440512
dd r_illegal-top+117440512
dd SC50-top+117440512
dd SC58-top+117440512
dd SC60-top+117440512
dd SC68-top+117440512
dd SC70-top+117440512
dd SC78-top
dd SC79-top
dd SC7A-top
dd SC7B-top
dd SC7C-top
dd r_illegal-top+33554432
dd SC80-top+117440512
dd r_illegal-top+117440512
dd SC90-top+117440512
dd SC98-top+117440512
dd SCA0-top+117440512
dd SCA8-top+117440512
dd SCB0-top+117440512
dd SCB8-top
dd SCB9-top
dd SCBA-top
dd SCBB-top
dd SCBC-top
dd r_illegal-top+33554432
dd SCC0-top+117440512
dd r_illegal-top+117440512
dd SCD0-top+117440512
dd SCD8-top+117440512
dd SCE0-top+117440512
dd SCE8-top+117440512
dd SCF0-top+117440512
dd SCF8-top
dd SCF9-top
dd SCFA-top
dd SCFB-top
dd SCFC-top
dd r_illegal-top+33554432
dd SD00-top+117440512
dd SD08-top+117440512
dd SD10-top+117440512
dd SD18-top+117440512
dd SD20-top+117440512
dd SD28-top+117440512
dd SD30-top+117440512
dd SD38-top
dd SD39-top
dd r_illegal-top+352321536
dd SD50-top+117440512
dd SD58-top+117440512
dd SD60-top+117440512
dd SD68-top+117440512
dd SD70-top+117440512
dd SD78-top
dd SD79-top
dd r_illegal-top+352321536
dd SD90-top+117440512
dd SD98-top+117440512
dd SDA0-top+117440512
dd SDA8-top+117440512
dd SDB0-top+117440512
dd SDB8-top
dd SDB9-top
dd r_illegal-top+83886080
dd SDC0-top+117440512
dd r_illegal-top+117440512
dd SDD0-top+117440512
dd SDD8-top+117440512
dd SDE0-top+117440512
dd SDE8-top+117440512
dd SDF0-top+117440512
dd SDF8-top
dd SDF9-top
dd SDFA-top
dd SDFB-top
dd SDFC-top
dd r_illegal-top+33554432
dd SE00-top+117440512
dd r_illegal-top+117440512
dd SE10-top+117440512
dd SE18-top+117440512
dd SE20-top+117440512
dd SE28-top+117440512
dd SE30-top+117440512
dd SE38-top
dd SE39-top
dd SE3A-top
dd SE3B-top
dd SE3C-top
dd r_illegal-top+33554432
dd SE40-top+117440512
dd r_illegal-top+117440512
dd SE50-top+117440512
dd SE58-top+117440512
dd SE60-top+117440512
dd SE68-top+117440512
dd SE70-top+117440512
dd SE78-top
dd SE79-top
dd SE7A-top
dd SE7B-top
dd SE7C-top
dd r_illegal-top+33554432
dd SE80-top+117440512
dd r_illegal-top+117440512
dd SE90-top+117440512
dd SE98-top+117440512
dd SEA0-top+117440512
dd SEA8-top+117440512
dd SEB0-top+117440512
dd SEB8-top
dd SEB9-top
dd SEBA-top
dd SEBB-top
dd SEBC-top
dd r_illegal-top+33554432
dd SEC0-top+117440512
dd r_illegal-top+117440512
dd SED0-top+117440512
dd SED8-top+117440512
dd SEE0-top+117440512
dd SEE8-top+117440512
dd SEF0-top+117440512
dd SEF8-top
dd SEF9-top
dd SEFA-top
dd SEFB-top
dd SEFC-top
dd r_illegal-top+33554432
dd SF00-top+117440512
dd SF08-top+117440512
dd SF10-top+117440512
dd SF18-top+117440512
dd SF20-top+117440512
dd SF28-top+117440512
dd SF30-top+117440512
dd SF38-top
dd SF39-top
dd r_illegal-top+352321536
dd SF50-top+117440512
dd SF58-top+117440512
dd SF60-top+117440512
dd SF68-top+117440512
dd SF70-top+117440512
dd SF78-top
dd SF79-top
dd r_illegal-top+352321536
dd SF90-top+117440512
dd SF98-top+117440512
dd SFA0-top+117440512
dd SFA8-top+117440512
dd SFB0-top+117440512
dd SFB8-top
dd SFB9-top
dd r_illegal-top+83886080
dd SFC0-top+117440512
dd r_illegal-top+117440512
dd SFD0-top+117440512
dd SFD8-top+117440512
dd SFE0-top+117440512
dd SFE8-top+117440512
dd SFF0-top+117440512
dd SFF8-top
dd SFF9-top
dd SFFA-top
dd SFFB-top
dd SFFC-top
dd r_illegal-top+33554432
dd T000-top+117440512
dd r_illegal-top+117440512
dd T010-top+117440512
dd T018-top+117440512
dd T020-top+117440512
dd T028-top+117440512
dd T030-top+117440512
dd T038-top
dd T039-top
dd T03A-top
dd T03B-top
dd T03C-top
dd r_illegal-top+33554432
dd T040-top+117440512
dd T048-top+117440512
dd T050-top+117440512
dd T058-top+117440512
dd T060-top+117440512
dd T068-top+117440512
dd T070-top+117440512
dd T078-top
dd T079-top
dd T07A-top
dd T07B-top
dd T07C-top
dd r_illegal-top+33554432
dd T080-top+117440512
dd T088-top+117440512
dd T090-top+117440512
dd T098-top+117440512
dd T0A0-top+117440512
dd T0A8-top+117440512
dd T0B0-top+117440512
dd T0B8-top
dd T0B9-top
dd T0BA-top
dd T0BB-top
dd T0BC-top
dd r_illegal-top+33554432
dd T0C0-top+117440512
dd T0C8-top+117440512
dd T0D0-top+117440512
dd T0D8-top+117440512
dd T0E0-top+117440512
dd T0E8-top+117440512
dd T0F0-top+117440512
dd T0F8-top
dd T0F9-top
dd T0FA-top
dd T0FB-top
dd T0FC-top
dd r_illegal-top+33554432
dd T100-top+117440512
dd T108-top+117440512
dd T110-top+117440512
dd T118-top+117440512
dd T120-top+117440512
dd T128-top+117440512
dd T130-top+117440512
dd T138-top
dd T139-top
dd r_illegal-top+83886080
dd T140-top+117440512
dd T148-top+117440512
dd T150-top+117440512
dd T158-top+117440512
dd T160-top+117440512
dd T168-top+117440512
dd T170-top+117440512
dd T178-top
dd T179-top
dd r_illegal-top+83886080
dd T180-top+117440512
dd T188-top+117440512
dd T190-top+117440512
dd T198-top+117440512
dd T1A0-top+117440512
dd T1A8-top+117440512
dd T1B0-top+117440512
dd T1B8-top
dd T1B9-top
dd r_illegal-top+83886080
dd T1C0-top+117440512
dd T1C8-top+117440512
dd T1D0-top+117440512
dd T1D8-top+117440512
dd T1E0-top+117440512
dd T1E8-top+117440512
dd T1F0-top+117440512
dd T1F8-top
dd T1F9-top
dd T1FA-top
dd T1FB-top
dd T1FC-top
dd r_illegal-top+33554432
dd T200-top+117440512
dd r_illegal-top+117440512
dd T210-top+117440512
dd T218-top+117440512
dd T220-top+117440512
dd T228-top+117440512
dd T230-top+117440512
dd T238-top
dd T239-top
dd T23A-top
dd T23B-top
dd T23C-top
dd r_illegal-top+33554432
dd T240-top+117440512
dd T248-top+117440512
dd T250-top+117440512
dd T258-top+117440512
dd T260-top+117440512
dd T268-top+117440512
dd T270-top+117440512
dd T278-top
dd T279-top
dd T27A-top
dd T27B-top
dd T27C-top
dd r_illegal-top+33554432
dd T280-top+117440512
dd T288-top+117440512
dd T290-top+117440512
dd T298-top+117440512
dd T2A0-top+117440512
dd T2A8-top+117440512
dd T2B0-top+117440512
dd T2B8-top
dd T2B9-top
dd T2BA-top
dd T2BB-top
dd T2BC-top
dd r_illegal-top+33554432
dd T2C0-top+117440512
dd T2C8-top+117440512
dd T2D0-top+117440512
dd T2D8-top+117440512
dd T2E0-top+117440512
dd T2E8-top+117440512
dd T2F0-top+117440512
dd T2F8-top
dd T2F9-top
dd T2FA-top
dd T2FB-top
dd T2FC-top
dd r_illegal-top+33554432
dd T300-top+117440512
dd T308-top+117440512
dd T310-top+117440512
dd T318-top+117440512
dd T320-top+117440512
dd T328-top+117440512
dd T330-top+117440512
dd T338-top
dd T339-top
dd r_illegal-top+83886080
dd T340-top+117440512
dd T348-top+117440512
dd T350-top+117440512
dd T358-top+117440512
dd T360-top+117440512
dd T368-top+117440512
dd T370-top+117440512
dd T378-top
dd T379-top
dd r_illegal-top+83886080
dd T380-top+117440512
dd T388-top+117440512
dd T390-top+117440512
dd T398-top+117440512
dd T3A0-top+117440512
dd T3A8-top+117440512
dd T3B0-top+117440512
dd T3B8-top
dd T3B9-top
dd r_illegal-top+83886080
dd T3C0-top+117440512
dd T3C8-top+117440512
dd T3D0-top+117440512
dd T3D8-top+117440512
dd T3E0-top+117440512
dd T3E8-top+117440512
dd T3F0-top+117440512
dd T3F8-top
dd T3F9-top
dd T3FA-top
dd T3FB-top
dd T3FC-top
dd r_illegal-top+33554432
dd T400-top+117440512
dd r_illegal-top+117440512
dd T410-top+117440512
dd T418-top+117440512
dd T420-top+117440512
dd T428-top+117440512
dd T430-top+117440512
dd T438-top
dd T439-top
dd T43A-top
dd T43B-top
dd T43C-top
dd r_illegal-top+33554432
dd T440-top+117440512
dd T448-top+117440512
dd T450-top+117440512
dd T458-top+117440512
dd T460-top+117440512
dd T468-top+117440512
dd T470-top+117440512
dd T478-top
dd T479-top
dd T47A-top
dd T47B-top
dd T47C-top
dd r_illegal-top+33554432
dd T480-top+117440512
dd T488-top+117440512
dd T490-top+117440512
dd T498-top+117440512
dd T4A0-top+117440512
dd T4A8-top+117440512
dd T4B0-top+117440512
dd T4B8-top
dd T4B9-top
dd T4BA-top
dd T4BB-top
dd T4BC-top
dd r_illegal-top+33554432
dd T4C0-top+117440512
dd T4C8-top+117440512
dd T4D0-top+117440512
dd T4D8-top+117440512
dd T4E0-top+117440512
dd T4E8-top+117440512
dd T4F0-top+117440512
dd T4F8-top
dd T4F9-top
dd T4FA-top
dd T4FB-top
dd T4FC-top
dd r_illegal-top+33554432
dd T500-top+117440512
dd T508-top+117440512
dd T510-top+117440512
dd T518-top+117440512
dd T520-top+117440512
dd T528-top+117440512
dd T530-top+117440512
dd T538-top
dd T539-top
dd r_illegal-top+83886080
dd T540-top+117440512
dd T548-top+117440512
dd T550-top+117440512
dd T558-top+117440512
dd T560-top+117440512
dd T568-top+117440512
dd T570-top+117440512
dd T578-top
dd T579-top
dd r_illegal-top+83886080
dd T580-top+117440512
dd T588-top+117440512
dd T590-top+117440512
dd T598-top+117440512
dd T5A0-top+117440512
dd T5A8-top+117440512
dd T5B0-top+117440512
dd T5B8-top
dd T5B9-top
dd r_illegal-top+83886080
dd T5C0-top+117440512
dd T5C8-top+117440512
dd T5D0-top+117440512
dd T5D8-top+117440512
dd T5E0-top+117440512
dd T5E8-top+117440512
dd T5F0-top+117440512
dd T5F8-top
dd T5F9-top
dd T5FA-top
dd T5FB-top
dd T5FC-top
dd r_illegal-top+33554432
dd T600-top+117440512
dd r_illegal-top+117440512
dd T610-top+117440512
dd T618-top+117440512
dd T620-top+117440512
dd T628-top+117440512
dd T630-top+117440512
dd T638-top
dd T639-top
dd T63A-top
dd T63B-top
dd T63C-top
dd r_illegal-top+33554432
dd T640-top+117440512
dd T648-top+117440512
dd T650-top+117440512
dd T658-top+117440512
dd T660-top+117440512
dd T668-top+117440512
dd T670-top+117440512
dd T678-top
dd T679-top
dd T67A-top
dd T67B-top
dd T67C-top
dd r_illegal-top+33554432
dd T680-top+117440512
dd T688-top+117440512
dd T690-top+117440512
dd T698-top+117440512
dd T6A0-top+117440512
dd T6A8-top+117440512
dd T6B0-top+117440512
dd T6B8-top
dd T6B9-top
dd T6BA-top
dd T6BB-top
dd T6BC-top
dd r_illegal-top+33554432
dd T6C0-top+117440512
dd T6C8-top+117440512
dd T6D0-top+117440512
dd T6D8-top+117440512
dd T6E0-top+117440512
dd T6E8-top+117440512
dd T6F0-top+117440512
dd T6F8-top
dd T6F9-top
dd T6FA-top
dd T6FB-top
dd T6FC-top
dd r_illegal-top+33554432
dd T700-top+117440512
dd T708-top+117440512
dd T710-top+117440512
dd T718-top+117440512
dd T720-top+117440512
dd T728-top+117440512
dd T730-top+117440512
dd T738-top
dd T739-top
dd r_illegal-top+83886080
dd T740-top+117440512
dd T748-top+117440512
dd T750-top+117440512
dd T758-top+117440512
dd T760-top+117440512
dd T768-top+117440512
dd T770-top+117440512
dd T778-top
dd T779-top
dd r_illegal-top+83886080
dd T780-top+117440512
dd T788-top+117440512
dd T790-top+117440512
dd T798-top+117440512
dd T7A0-top+117440512
dd T7A8-top+117440512
dd T7B0-top+117440512
dd T7B8-top
dd T7B9-top
dd r_illegal-top+83886080
dd T7C0-top+117440512
dd T7C8-top+117440512
dd T7D0-top+117440512
dd T7D8-top+117440512
dd T7E0-top+117440512
dd T7E8-top+117440512
dd T7F0-top+117440512
dd T7F8-top
dd T7F9-top
dd T7FA-top
dd T7FB-top
dd T7FC-top
dd r_illegal-top+33554432
dd T800-top+117440512
dd r_illegal-top+117440512
dd T810-top+117440512
dd T818-top+117440512
dd T820-top+117440512
dd T828-top+117440512
dd T830-top+117440512
dd T838-top
dd T839-top
dd T83A-top
dd T83B-top
dd T83C-top
dd r_illegal-top+33554432
dd T840-top+117440512
dd T848-top+117440512
dd T850-top+117440512
dd T858-top+117440512
dd T860-top+117440512
dd T868-top+117440512
dd T870-top+117440512
dd T878-top
dd T879-top
dd T87A-top
dd T87B-top
dd T87C-top
dd r_illegal-top+33554432
dd T880-top+117440512
dd T888-top+117440512
dd T890-top+117440512
dd T898-top+117440512
dd T8A0-top+117440512
dd T8A8-top+117440512
dd T8B0-top+117440512
dd T8B8-top
dd T8B9-top
dd T8BA-top
dd T8BB-top
dd T8BC-top
dd r_illegal-top+33554432
dd T8C0-top+117440512
dd T8C8-top+117440512
dd T8D0-top+117440512
dd T8D8-top+117440512
dd T8E0-top+117440512
dd T8E8-top+117440512
dd T8F0-top+117440512
dd T8F8-top
dd T8F9-top
dd T8FA-top
dd T8FB-top
dd T8FC-top
dd r_illegal-top+33554432
dd T900-top+117440512
dd T908-top+117440512
dd T910-top+117440512
dd T918-top+117440512
dd T920-top+117440512
dd T928-top+117440512
dd T930-top+117440512
dd T938-top
dd T939-top
dd r_illegal-top+83886080
dd T940-top+117440512
dd T948-top+117440512
dd T950-top+117440512
dd T958-top+117440512
dd T960-top+117440512
dd T968-top+117440512
dd T970-top+117440512
dd T978-top
dd T979-top
dd r_illegal-top+83886080
dd T980-top+117440512
dd T988-top+117440512
dd T990-top+117440512
dd T998-top+117440512
dd T9A0-top+117440512
dd T9A8-top+117440512
dd T9B0-top+117440512
dd T9B8-top
dd T9B9-top
dd r_illegal-top+83886080
dd T9C0-top+117440512
dd T9C8-top+117440512
dd T9D0-top+117440512
dd T9D8-top+117440512
dd T9E0-top+117440512
dd T9E8-top+117440512
dd T9F0-top+117440512
dd T9F8-top
dd T9F9-top
dd T9FA-top
dd T9FB-top
dd T9FC-top
dd r_illegal-top+33554432
dd TA00-top+117440512
dd r_illegal-top+117440512
dd TA10-top+117440512
dd TA18-top+117440512
dd TA20-top+117440512
dd TA28-top+117440512
dd TA30-top+117440512
dd TA38-top
dd TA39-top
dd TA3A-top
dd TA3B-top
dd TA3C-top
dd r_illegal-top+33554432
dd TA40-top+117440512
dd TA48-top+117440512
dd TA50-top+117440512
dd TA58-top+117440512
dd TA60-top+117440512
dd TA68-top+117440512
dd TA70-top+117440512
dd TA78-top
dd TA79-top
dd TA7A-top
dd TA7B-top
dd TA7C-top
dd r_illegal-top+33554432
dd TA80-top+117440512
dd TA88-top+117440512
dd TA90-top+117440512
dd TA98-top+117440512
dd TAA0-top+117440512
dd TAA8-top+117440512
dd TAB0-top+117440512
dd TAB8-top
dd TAB9-top
dd TABA-top
dd TABB-top
dd TABC-top
dd r_illegal-top+33554432
dd TAC0-top+117440512
dd TAC8-top+117440512
dd TAD0-top+117440512
dd TAD8-top+117440512
dd TAE0-top+117440512
dd TAE8-top+117440512
dd TAF0-top+117440512
dd TAF8-top
dd TAF9-top
dd TAFA-top
dd TAFB-top
dd TAFC-top
dd r_illegal-top+33554432
dd TB00-top+117440512
dd TB08-top+117440512
dd TB10-top+117440512
dd TB18-top+117440512
dd TB20-top+117440512
dd TB28-top+117440512
dd TB30-top+117440512
dd TB38-top
dd TB39-top
dd r_illegal-top+83886080
dd TB40-top+117440512
dd TB48-top+117440512
dd TB50-top+117440512
dd TB58-top+117440512
dd TB60-top+117440512
dd TB68-top+117440512
dd TB70-top+117440512
dd TB78-top
dd TB79-top
dd r_illegal-top+83886080
dd TB80-top+117440512
dd TB88-top+117440512
dd TB90-top+117440512
dd TB98-top+117440512
dd TBA0-top+117440512
dd TBA8-top+117440512
dd TBB0-top+117440512
dd TBB8-top
dd TBB9-top
dd r_illegal-top+83886080
dd TBC0-top+117440512
dd TBC8-top+117440512
dd TBD0-top+117440512
dd TBD8-top+117440512
dd TBE0-top+117440512
dd TBE8-top+117440512
dd TBF0-top+117440512
dd TBF8-top
dd TBF9-top
dd TBFA-top
dd TBFB-top
dd TBFC-top
dd r_illegal-top+33554432
dd TC00-top+117440512
dd r_illegal-top+117440512
dd TC10-top+117440512
dd TC18-top+117440512
dd TC20-top+117440512
dd TC28-top+117440512
dd TC30-top+117440512
dd TC38-top
dd TC39-top
dd TC3A-top
dd TC3B-top
dd TC3C-top
dd r_illegal-top+33554432
dd TC40-top+117440512
dd TC48-top+117440512
dd TC50-top+117440512
dd TC58-top+117440512
dd TC60-top+117440512
dd TC68-top+117440512
dd TC70-top+117440512
dd TC78-top
dd TC79-top
dd TC7A-top
dd TC7B-top
dd TC7C-top
dd r_illegal-top+33554432
dd TC80-top+117440512
dd TC88-top+117440512
dd TC90-top+117440512
dd TC98-top+117440512
dd TCA0-top+117440512
dd TCA8-top+117440512
dd TCB0-top+117440512
dd TCB8-top
dd TCB9-top
dd TCBA-top
dd TCBB-top
dd TCBC-top
dd r_illegal-top+33554432
dd TCC0-top+117440512
dd TCC8-top+117440512
dd TCD0-top+117440512
dd TCD8-top+117440512
dd TCE0-top+117440512
dd TCE8-top+117440512
dd TCF0-top+117440512
dd TCF8-top
dd TCF9-top
dd TCFA-top
dd TCFB-top
dd TCFC-top
dd r_illegal-top+33554432
dd TD00-top+117440512
dd TD08-top+117440512
dd TD10-top+117440512
dd TD18-top+117440512
dd TD20-top+117440512
dd TD28-top+117440512
dd TD30-top+117440512
dd TD38-top
dd TD39-top
dd r_illegal-top+83886080
dd TD40-top+117440512
dd TD48-top+117440512
dd TD50-top+117440512
dd TD58-top+117440512
dd TD60-top+117440512
dd TD68-top+117440512
dd TD70-top+117440512
dd TD78-top
dd TD79-top
dd r_illegal-top+83886080
dd TD80-top+117440512
dd TD88-top+117440512
dd TD90-top+117440512
dd TD98-top+117440512
dd TDA0-top+117440512
dd TDA8-top+117440512
dd TDB0-top+117440512
dd TDB8-top
dd TDB9-top
dd r_illegal-top+83886080
dd TDC0-top+117440512
dd TDC8-top+117440512
dd TDD0-top+117440512
dd TDD8-top+117440512
dd TDE0-top+117440512
dd TDE8-top+117440512
dd TDF0-top+117440512
dd TDF8-top
dd TDF9-top
dd TDFA-top
dd TDFB-top
dd TDFC-top
dd r_illegal-top+33554432
dd TE00-top+117440512
dd r_illegal-top+117440512
dd TE10-top+117440512
dd TE18-top+117440512
dd TE20-top+117440512
dd TE28-top+117440512
dd TE30-top+117440512
dd TE38-top
dd TE39-top
dd TE3A-top
dd TE3B-top
dd TE3C-top
dd r_illegal-top+33554432
dd TE40-top+117440512
dd TE48-top+117440512
dd TE50-top+117440512
dd TE58-top+117440512
dd TE60-top+117440512
dd TE68-top+117440512
dd TE70-top+117440512
dd TE78-top
dd TE79-top
dd TE7A-top
dd TE7B-top
dd TE7C-top
dd r_illegal-top+33554432
dd TE80-top+117440512
dd TE88-top+117440512
dd TE90-top+117440512
dd TE98-top+117440512
dd TEA0-top+117440512
dd TEA8-top+117440512
dd TEB0-top+117440512
dd TEB8-top
dd TEB9-top
dd TEBA-top
dd TEBB-top
dd TEBC-top
dd r_illegal-top+33554432
dd TEC0-top+117440512
dd TEC8-top+117440512
dd TED0-top+117440512
dd TED8-top+117440512
dd TEE0-top+117440512
dd TEE8-top+117440512
dd TEF0-top+117440512
dd TEF8-top
dd TEF9-top
dd TEFA-top
dd TEFB-top
dd TEFC-top
dd r_illegal-top+33554432
dd TF00-top+117440512
dd TF08-top+117440512
dd TF10-top+117440512
dd TF18-top+117440512
dd TF20-top+117440512
dd TF28-top+117440512
dd TF30-top+117440512
dd TF38-top
dd TF39-top
dd r_illegal-top+83886080
dd TF40-top+117440512
dd TF48-top+117440512
dd TF50-top+117440512
dd TF58-top+117440512
dd TF60-top+117440512
dd TF68-top+117440512
dd TF70-top+117440512
dd TF78-top
dd TF79-top
dd r_illegal-top+83886080
dd TF80-top+117440512
dd TF88-top+117440512
dd TF90-top+117440512
dd TF98-top+117440512
dd TFA0-top+117440512
dd TFA8-top+117440512
dd TFB0-top+117440512
dd TFB8-top
dd TFB9-top
dd r_illegal-top+83886080
dd TFC0-top+117440512
dd TFC8-top+117440512
dd TFD0-top+117440512
dd TFD8-top+117440512
dd TFE0-top+117440512
dd TFE8-top+117440512
dd TFF0-top+117440512
dd TFF8-top
dd TFF9-top
dd TFFA-top
dd TFFB-top
dd TFFC-top
dd r_illegal-top+33554432
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd U000-top+4278190080
dd V000-top+117440512
dd r_illegal-top+117440512
dd V010-top+117440512
dd V018-top+117440512
dd V020-top+117440512
dd V028-top+117440512
dd V030-top+117440512
dd V038-top
dd V039-top
dd V03A-top
dd V03B-top
dd V03C-top
dd r_illegal-top+33554432
dd V040-top+117440512
dd V048-top+117440512
dd V050-top+117440512
dd V058-top+117440512
dd V060-top+117440512
dd V068-top+117440512
dd V070-top+117440512
dd V078-top
dd V079-top
dd V07A-top
dd V07B-top
dd V07C-top
dd r_illegal-top+33554432
dd V080-top+117440512
dd V088-top+117440512
dd V090-top+117440512
dd V098-top+117440512
dd V0A0-top+117440512
dd V0A8-top+117440512
dd V0B0-top+117440512
dd V0B8-top
dd V0B9-top
dd V0BA-top
dd V0BB-top
dd V0BC-top
dd r_illegal-top+33554432
dd V0C0-top+117440512
dd V0C8-top+117440512
dd V0D0-top+117440512
dd V0D8-top+117440512
dd V0E0-top+117440512
dd V0E8-top+117440512
dd V0F0-top+117440512
dd V0F8-top
dd V0F9-top
dd V0FA-top
dd V0FB-top
dd V0FC-top
dd r_illegal-top+33554432
dd V100-top+117440512
dd V108-top+117440512
dd V110-top+117440512
dd V118-top+117440512
dd V120-top+117440512
dd V128-top+117440512
dd V130-top+117440512
dd V138-top
dd V139-top
dd r_illegal-top+83886080
dd V140-top+117440512
dd V148-top+117440512
dd V150-top+117440512
dd V158-top+117440512
dd V160-top+117440512
dd V168-top+117440512
dd V170-top+117440512
dd V178-top
dd V179-top
dd r_illegal-top+83886080
dd V180-top+117440512
dd V188-top+117440512
dd V190-top+117440512
dd V198-top+117440512
dd V1A0-top+117440512
dd V1A8-top+117440512
dd V1B0-top+117440512
dd V1B8-top
dd V1B9-top
dd r_illegal-top+83886080
dd V1C0-top+117440512
dd V1C8-top+117440512
dd V1D0-top+117440512
dd V1D8-top+117440512
dd V1E0-top+117440512
dd V1E8-top+117440512
dd V1F0-top+117440512
dd V1F8-top
dd V1F9-top
dd V1FA-top
dd V1FB-top
dd V1FC-top
dd r_illegal-top+33554432
dd V200-top+117440512
dd r_illegal-top+117440512
dd V210-top+117440512
dd V218-top+117440512
dd V220-top+117440512
dd V228-top+117440512
dd V230-top+117440512
dd V238-top
dd V239-top
dd V23A-top
dd V23B-top
dd V23C-top
dd r_illegal-top+33554432
dd V240-top+117440512
dd V248-top+117440512
dd V250-top+117440512
dd V258-top+117440512
dd V260-top+117440512
dd V268-top+117440512
dd V270-top+117440512
dd V278-top
dd V279-top
dd V27A-top
dd V27B-top
dd V27C-top
dd r_illegal-top+33554432
dd V280-top+117440512
dd V288-top+117440512
dd V290-top+117440512
dd V298-top+117440512
dd V2A0-top+117440512
dd V2A8-top+117440512
dd V2B0-top+117440512
dd V2B8-top
dd V2B9-top
dd V2BA-top
dd V2BB-top
dd V2BC-top
dd r_illegal-top+33554432
dd V2C0-top+117440512
dd V2C8-top+117440512
dd V2D0-top+117440512
dd V2D8-top+117440512
dd V2E0-top+117440512
dd V2E8-top+117440512
dd V2F0-top+117440512
dd V2F8-top
dd V2F9-top
dd V2FA-top
dd V2FB-top
dd V2FC-top
dd r_illegal-top+33554432
dd V300-top+117440512
dd V308-top+117440512
dd V310-top+117440512
dd V318-top+117440512
dd V320-top+117440512
dd V328-top+117440512
dd V330-top+117440512
dd V338-top
dd V339-top
dd r_illegal-top+83886080
dd V340-top+117440512
dd V348-top+117440512
dd V350-top+117440512
dd V358-top+117440512
dd V360-top+117440512
dd V368-top+117440512
dd V370-top+117440512
dd V378-top
dd V379-top
dd r_illegal-top+83886080
dd V380-top+117440512
dd V388-top+117440512
dd V390-top+117440512
dd V398-top+117440512
dd V3A0-top+117440512
dd V3A8-top+117440512
dd V3B0-top+117440512
dd V3B8-top
dd V3B9-top
dd r_illegal-top+83886080
dd V3C0-top+117440512
dd V3C8-top+117440512
dd V3D0-top+117440512
dd V3D8-top+117440512
dd V3E0-top+117440512
dd V3E8-top+117440512
dd V3F0-top+117440512
dd V3F8-top
dd V3F9-top
dd V3FA-top
dd V3FB-top
dd V3FC-top
dd r_illegal-top+33554432
dd V400-top+117440512
dd r_illegal-top+117440512
dd V410-top+117440512
dd V418-top+117440512
dd V420-top+117440512
dd V428-top+117440512
dd V430-top+117440512
dd V438-top
dd V439-top
dd V43A-top
dd V43B-top
dd V43C-top
dd r_illegal-top+33554432
dd V440-top+117440512
dd V448-top+117440512
dd V450-top+117440512
dd V458-top+117440512
dd V460-top+117440512
dd V468-top+117440512
dd V470-top+117440512
dd V478-top
dd V479-top
dd V47A-top
dd V47B-top
dd V47C-top
dd r_illegal-top+33554432
dd V480-top+117440512
dd V488-top+117440512
dd V490-top+117440512
dd V498-top+117440512
dd V4A0-top+117440512
dd V4A8-top+117440512
dd V4B0-top+117440512
dd V4B8-top
dd V4B9-top
dd V4BA-top
dd V4BB-top
dd V4BC-top
dd r_illegal-top+33554432
dd V4C0-top+117440512
dd V4C8-top+117440512
dd V4D0-top+117440512
dd V4D8-top+117440512
dd V4E0-top+117440512
dd V4E8-top+117440512
dd V4F0-top+117440512
dd V4F8-top
dd V4F9-top
dd V4FA-top
dd V4FB-top
dd V4FC-top
dd r_illegal-top+33554432
dd V500-top+117440512
dd V508-top+117440512
dd V510-top+117440512
dd V518-top+117440512
dd V520-top+117440512
dd V528-top+117440512
dd V530-top+117440512
dd V538-top
dd V539-top
dd r_illegal-top+83886080
dd V540-top+117440512
dd V548-top+117440512
dd V550-top+117440512
dd V558-top+117440512
dd V560-top+117440512
dd V568-top+117440512
dd V570-top+117440512
dd V578-top
dd V579-top
dd r_illegal-top+83886080
dd V580-top+117440512
dd V588-top+117440512
dd V590-top+117440512
dd V598-top+117440512
dd V5A0-top+117440512
dd V5A8-top+117440512
dd V5B0-top+117440512
dd V5B8-top
dd V5B9-top
dd r_illegal-top+83886080
dd V5C0-top+117440512
dd V5C8-top+117440512
dd V5D0-top+117440512
dd V5D8-top+117440512
dd V5E0-top+117440512
dd V5E8-top+117440512
dd V5F0-top+117440512
dd V5F8-top
dd V5F9-top
dd V5FA-top
dd V5FB-top
dd V5FC-top
dd r_illegal-top+33554432
dd V600-top+117440512
dd r_illegal-top+117440512
dd V610-top+117440512
dd V618-top+117440512
dd V620-top+117440512
dd V628-top+117440512
dd V630-top+117440512
dd V638-top
dd V639-top
dd V63A-top
dd V63B-top
dd V63C-top
dd r_illegal-top+33554432
dd V640-top+117440512
dd V648-top+117440512
dd V650-top+117440512
dd V658-top+117440512
dd V660-top+117440512
dd V668-top+117440512
dd V670-top+117440512
dd V678-top
dd V679-top
dd V67A-top
dd V67B-top
dd V67C-top
dd r_illegal-top+33554432
dd V680-top+117440512
dd V688-top+117440512
dd V690-top+117440512
dd V698-top+117440512
dd V6A0-top+117440512
dd V6A8-top+117440512
dd V6B0-top+117440512
dd V6B8-top
dd V6B9-top
dd V6BA-top
dd V6BB-top
dd V6BC-top
dd r_illegal-top+33554432
dd V6C0-top+117440512
dd V6C8-top+117440512
dd V6D0-top+117440512
dd V6D8-top+117440512
dd V6E0-top+117440512
dd V6E8-top+117440512
dd V6F0-top+117440512
dd V6F8-top
dd V6F9-top
dd V6FA-top
dd V6FB-top
dd V6FC-top
dd r_illegal-top+33554432
dd V700-top+117440512
dd V708-top+117440512
dd V710-top+117440512
dd V718-top+117440512
dd V720-top+117440512
dd V728-top+117440512
dd V730-top+117440512
dd V738-top
dd V739-top
dd r_illegal-top+83886080
dd V740-top+117440512
dd V748-top+117440512
dd V750-top+117440512
dd V758-top+117440512
dd V760-top+117440512
dd V768-top+117440512
dd V770-top+117440512
dd V778-top
dd V779-top
dd r_illegal-top+83886080
dd V780-top+117440512
dd V788-top+117440512
dd V790-top+117440512
dd V798-top+117440512
dd V7A0-top+117440512
dd V7A8-top+117440512
dd V7B0-top+117440512
dd V7B8-top
dd V7B9-top
dd r_illegal-top+83886080
dd V7C0-top+117440512
dd V7C8-top+117440512
dd V7D0-top+117440512
dd V7D8-top+117440512
dd V7E0-top+117440512
dd V7E8-top+117440512
dd V7F0-top+117440512
dd V7F8-top
dd V7F9-top
dd V7FA-top
dd V7FB-top
dd V7FC-top
dd r_illegal-top+33554432
dd V800-top+117440512
dd r_illegal-top+117440512
dd V810-top+117440512
dd V818-top+117440512
dd V820-top+117440512
dd V828-top+117440512
dd V830-top+117440512
dd V838-top
dd V839-top
dd V83A-top
dd V83B-top
dd V83C-top
dd r_illegal-top+33554432
dd V840-top+117440512
dd V848-top+117440512
dd V850-top+117440512
dd V858-top+117440512
dd V860-top+117440512
dd V868-top+117440512
dd V870-top+117440512
dd V878-top
dd V879-top
dd V87A-top
dd V87B-top
dd V87C-top
dd r_illegal-top+33554432
dd V880-top+117440512
dd V888-top+117440512
dd V890-top+117440512
dd V898-top+117440512
dd V8A0-top+117440512
dd V8A8-top+117440512
dd V8B0-top+117440512
dd V8B8-top
dd V8B9-top
dd V8BA-top
dd V8BB-top
dd V8BC-top
dd r_illegal-top+33554432
dd V8C0-top+117440512
dd V8C8-top+117440512
dd V8D0-top+117440512
dd V8D8-top+117440512
dd V8E0-top+117440512
dd V8E8-top+117440512
dd V8F0-top+117440512
dd V8F8-top
dd V8F9-top
dd V8FA-top
dd V8FB-top
dd V8FC-top
dd r_illegal-top+33554432
dd V900-top+117440512
dd V908-top+117440512
dd V910-top+117440512
dd V918-top+117440512
dd V920-top+117440512
dd V928-top+117440512
dd V930-top+117440512
dd V938-top
dd V939-top
dd r_illegal-top+83886080
dd V940-top+117440512
dd V948-top+117440512
dd V950-top+117440512
dd V958-top+117440512
dd V960-top+117440512
dd V968-top+117440512
dd V970-top+117440512
dd V978-top
dd V979-top
dd r_illegal-top+83886080
dd V980-top+117440512
dd V988-top+117440512
dd V990-top+117440512
dd V998-top+117440512
dd V9A0-top+117440512
dd V9A8-top+117440512
dd V9B0-top+117440512
dd V9B8-top
dd V9B9-top
dd r_illegal-top+83886080
dd V9C0-top+117440512
dd V9C8-top+117440512
dd V9D0-top+117440512
dd V9D8-top+117440512
dd V9E0-top+117440512
dd V9E8-top+117440512
dd V9F0-top+117440512
dd V9F8-top
dd V9F9-top
dd V9FA-top
dd V9FB-top
dd V9FC-top
dd r_illegal-top+33554432
dd VA00-top+117440512
dd r_illegal-top+117440512
dd VA10-top+117440512
dd VA18-top+117440512
dd VA20-top+117440512
dd VA28-top+117440512
dd VA30-top+117440512
dd VA38-top
dd VA39-top
dd VA3A-top
dd VA3B-top
dd VA3C-top
dd r_illegal-top+33554432
dd VA40-top+117440512
dd VA48-top+117440512
dd VA50-top+117440512
dd VA58-top+117440512
dd VA60-top+117440512
dd VA68-top+117440512
dd VA70-top+117440512
dd VA78-top
dd VA79-top
dd VA7A-top
dd VA7B-top
dd VA7C-top
dd r_illegal-top+33554432
dd VA80-top+117440512
dd VA88-top+117440512
dd VA90-top+117440512
dd VA98-top+117440512
dd VAA0-top+117440512
dd VAA8-top+117440512
dd VAB0-top+117440512
dd VAB8-top
dd VAB9-top
dd VABA-top
dd VABB-top
dd VABC-top
dd r_illegal-top+33554432
dd VAC0-top+117440512
dd VAC8-top+117440512
dd VAD0-top+117440512
dd VAD8-top+117440512
dd VAE0-top+117440512
dd VAE8-top+117440512
dd VAF0-top+117440512
dd VAF8-top
dd VAF9-top
dd VAFA-top
dd VAFB-top
dd VAFC-top
dd r_illegal-top+33554432
dd VB00-top+117440512
dd VB08-top+117440512
dd VB10-top+117440512
dd VB18-top+117440512
dd VB20-top+117440512
dd VB28-top+117440512
dd VB30-top+117440512
dd VB38-top
dd VB39-top
dd r_illegal-top+83886080
dd VB40-top+117440512
dd VB48-top+117440512
dd VB50-top+117440512
dd VB58-top+117440512
dd VB60-top+117440512
dd VB68-top+117440512
dd VB70-top+117440512
dd VB78-top
dd VB79-top
dd r_illegal-top+83886080
dd VB80-top+117440512
dd VB88-top+117440512
dd VB90-top+117440512
dd VB98-top+117440512
dd VBA0-top+117440512
dd VBA8-top+117440512
dd VBB0-top+117440512
dd VBB8-top
dd VBB9-top
dd r_illegal-top+83886080
dd VBC0-top+117440512
dd VBC8-top+117440512
dd VBD0-top+117440512
dd VBD8-top+117440512
dd VBE0-top+117440512
dd VBE8-top+117440512
dd VBF0-top+117440512
dd VBF8-top
dd VBF9-top
dd VBFA-top
dd VBFB-top
dd VBFC-top
dd r_illegal-top+33554432
dd VC00-top+117440512
dd r_illegal-top+117440512
dd VC10-top+117440512
dd VC18-top+117440512
dd VC20-top+117440512
dd VC28-top+117440512
dd VC30-top+117440512
dd VC38-top
dd VC39-top
dd VC3A-top
dd VC3B-top
dd VC3C-top
dd r_illegal-top+33554432
dd VC40-top+117440512
dd VC48-top+117440512
dd VC50-top+117440512
dd VC58-top+117440512
dd VC60-top+117440512
dd VC68-top+117440512
dd VC70-top+117440512
dd VC78-top
dd VC79-top
dd VC7A-top
dd VC7B-top
dd VC7C-top
dd r_illegal-top+33554432
dd VC80-top+117440512
dd VC88-top+117440512
dd VC90-top+117440512
dd VC98-top+117440512
dd VCA0-top+117440512
dd VCA8-top+117440512
dd VCB0-top+117440512
dd VCB8-top
dd VCB9-top
dd VCBA-top
dd VCBB-top
dd VCBC-top
dd r_illegal-top+33554432
dd VCC0-top+117440512
dd VCC8-top+117440512
dd VCD0-top+117440512
dd VCD8-top+117440512
dd VCE0-top+117440512
dd VCE8-top+117440512
dd VCF0-top+117440512
dd VCF8-top
dd VCF9-top
dd VCFA-top
dd VCFB-top
dd VCFC-top
dd r_illegal-top+33554432
dd VD00-top+117440512
dd VD08-top+117440512
dd VD10-top+117440512
dd VD18-top+117440512
dd VD20-top+117440512
dd VD28-top+117440512
dd VD30-top+117440512
dd VD38-top
dd VD39-top
dd r_illegal-top+83886080
dd VD40-top+117440512
dd VD48-top+117440512
dd VD50-top+117440512
dd VD58-top+117440512
dd VD60-top+117440512
dd VD68-top+117440512
dd VD70-top+117440512
dd VD78-top
dd VD79-top
dd r_illegal-top+83886080
dd VD80-top+117440512
dd VD88-top+117440512
dd VD90-top+117440512
dd VD98-top+117440512
dd VDA0-top+117440512
dd VDA8-top+117440512
dd VDB0-top+117440512
dd VDB8-top
dd VDB9-top
dd r_illegal-top+83886080
dd VDC0-top+117440512
dd VDC8-top+117440512
dd VDD0-top+117440512
dd VDD8-top+117440512
dd VDE0-top+117440512
dd VDE8-top+117440512
dd VDF0-top+117440512
dd VDF8-top
dd VDF9-top
dd VDFA-top
dd VDFB-top
dd VDFC-top
dd r_illegal-top+33554432
dd VE00-top+117440512
dd r_illegal-top+117440512
dd VE10-top+117440512
dd VE18-top+117440512
dd VE20-top+117440512
dd VE28-top+117440512
dd VE30-top+117440512
dd VE38-top
dd VE39-top
dd VE3A-top
dd VE3B-top
dd VE3C-top
dd r_illegal-top+33554432
dd VE40-top+117440512
dd VE48-top+117440512
dd VE50-top+117440512
dd VE58-top+117440512
dd VE60-top+117440512
dd VE68-top+117440512
dd VE70-top+117440512
dd VE78-top
dd VE79-top
dd VE7A-top
dd VE7B-top
dd VE7C-top
dd r_illegal-top+33554432
dd VE80-top+117440512
dd VE88-top+117440512
dd VE90-top+117440512
dd VE98-top+117440512
dd VEA0-top+117440512
dd VEA8-top+117440512
dd VEB0-top+117440512
dd VEB8-top
dd VEB9-top
dd VEBA-top
dd VEBB-top
dd VEBC-top
dd r_illegal-top+33554432
dd VEC0-top+117440512
dd VEC8-top+117440512
dd VED0-top+117440512
dd VED8-top+117440512
dd VEE0-top+117440512
dd VEE8-top+117440512
dd VEF0-top+117440512
dd VEF8-top
dd VEF9-top
dd VEFA-top
dd VEFB-top
dd VEFC-top
dd r_illegal-top+33554432
dd VF00-top+117440512
dd VF08-top+117440512
dd VF10-top+117440512
dd VF18-top+117440512
dd VF20-top+117440512
dd VF28-top+117440512
dd VF30-top+117440512
dd VF38-top
dd VF39-top
dd r_illegal-top+83886080
dd VF40-top+117440512
dd VF48-top+117440512
dd VF50-top+117440512
dd VF58-top+117440512
dd VF60-top+117440512
dd VF68-top+117440512
dd VF70-top+117440512
dd VF78-top
dd VF79-top
dd r_illegal-top+83886080
dd VF80-top+117440512
dd VF88-top+117440512
dd VF90-top+117440512
dd VF98-top+117440512
dd VFA0-top+117440512
dd VFA8-top+117440512
dd VFB0-top+117440512
dd VFB8-top
dd VFB9-top
dd r_illegal-top+83886080
dd VFC0-top+117440512
dd VFC8-top+117440512
dd VFD0-top+117440512
dd VFD8-top+117440512
dd VFE0-top+117440512
dd VFE8-top+117440512
dd VFF0-top+117440512
dd VFF8-top
dd VFF9-top
dd VFFA-top
dd VFFB-top
dd VFFC-top
dd r_illegal-top+33554432
dd W000-top+117440512
dd r_illegal-top+117440512
dd W010-top+117440512
dd W018-top+117440512
dd W020-top+117440512
dd W028-top+117440512
dd W030-top+117440512
dd W038-top
dd W039-top
dd W03A-top
dd W03B-top
dd W03C-top
dd r_illegal-top+33554432
dd W040-top+117440512
dd r_illegal-top+117440512
dd W050-top+117440512
dd W058-top+117440512
dd W060-top+117440512
dd W068-top+117440512
dd W070-top+117440512
dd W078-top
dd W079-top
dd W07A-top
dd W07B-top
dd W07C-top
dd r_illegal-top+33554432
dd W080-top+117440512
dd r_illegal-top+117440512
dd W090-top+117440512
dd W098-top+117440512
dd W0A0-top+117440512
dd W0A8-top+117440512
dd W0B0-top+117440512
dd W0B8-top
dd W0B9-top
dd W0BA-top
dd W0BB-top
dd W0BC-top
dd r_illegal-top+33554432
dd W0C0-top+117440512
dd r_illegal-top+117440512
dd W0D0-top+117440512
dd W0D8-top+117440512
dd W0E0-top+117440512
dd W0E8-top+117440512
dd W0F0-top+117440512
dd W0F8-top
dd W0F9-top
dd W0FA-top
dd W0FB-top
dd W0FC-top
dd r_illegal-top+33554432
dd W100-top+117440512
dd W108-top+117440512
dd W110-top+117440512
dd W118-top+117440512
dd W120-top+117440512
dd W128-top+117440512
dd W130-top+117440512
dd W138-top
dd W139-top
dd r_illegal-top+83886080
dd W140-top+117440512
dd W148-top+117440512
dd W150-top+117440512
dd W158-top+117440512
dd W160-top+117440512
dd W168-top+117440512
dd W170-top+117440512
dd W178-top
dd W179-top
dd r_illegal-top+218103808
dd W188-top+117440512
dd W190-top+117440512
dd W198-top+117440512
dd W1A0-top+117440512
dd W1A8-top+117440512
dd W1B0-top+117440512
dd W1B8-top
dd W1B9-top
dd r_illegal-top+83886080
dd W1C0-top+117440512
dd r_illegal-top+117440512
dd W1D0-top+117440512
dd W1D8-top+117440512
dd W1E0-top+117440512
dd W1E8-top+117440512
dd W1F0-top+117440512
dd W1F8-top
dd W1F9-top
dd W1FA-top
dd W1FB-top
dd W1FC-top
dd r_illegal-top+33554432
dd W200-top+117440512
dd r_illegal-top+117440512
dd W210-top+117440512
dd W218-top+117440512
dd W220-top+117440512
dd W228-top+117440512
dd W230-top+117440512
dd W238-top
dd W239-top
dd W23A-top
dd W23B-top
dd W23C-top
dd r_illegal-top+33554432
dd W240-top+117440512
dd r_illegal-top+117440512
dd W250-top+117440512
dd W258-top+117440512
dd W260-top+117440512
dd W268-top+117440512
dd W270-top+117440512
dd W278-top
dd W279-top
dd W27A-top
dd W27B-top
dd W27C-top
dd r_illegal-top+33554432
dd W280-top+117440512
dd r_illegal-top+117440512
dd W290-top+117440512
dd W298-top+117440512
dd W2A0-top+117440512
dd W2A8-top+117440512
dd W2B0-top+117440512
dd W2B8-top
dd W2B9-top
dd W2BA-top
dd W2BB-top
dd W2BC-top
dd r_illegal-top+33554432
dd W2C0-top+117440512
dd r_illegal-top+117440512
dd W2D0-top+117440512
dd W2D8-top+117440512
dd W2E0-top+117440512
dd W2E8-top+117440512
dd W2F0-top+117440512
dd W2F8-top
dd W2F9-top
dd W2FA-top
dd W2FB-top
dd W2FC-top
dd r_illegal-top+33554432
dd W300-top+117440512
dd W308-top+117440512
dd W310-top+117440512
dd W318-top+117440512
dd W320-top+117440512
dd W328-top+117440512
dd W330-top+117440512
dd W338-top
dd W339-top
dd r_illegal-top+83886080
dd W340-top+117440512
dd W348-top+117440512
dd W350-top+117440512
dd W358-top+117440512
dd W360-top+117440512
dd W368-top+117440512
dd W370-top+117440512
dd W378-top
dd W379-top
dd r_illegal-top+218103808
dd W388-top+117440512
dd W390-top+117440512
dd W398-top+117440512
dd W3A0-top+117440512
dd W3A8-top+117440512
dd W3B0-top+117440512
dd W3B8-top
dd W3B9-top
dd r_illegal-top+83886080
dd W3C0-top+117440512
dd r_illegal-top+117440512
dd W3D0-top+117440512
dd W3D8-top+117440512
dd W3E0-top+117440512
dd W3E8-top+117440512
dd W3F0-top+117440512
dd W3F8-top
dd W3F9-top
dd W3FA-top
dd W3FB-top
dd W3FC-top
dd r_illegal-top+33554432
dd W400-top+117440512
dd r_illegal-top+117440512
dd W410-top+117440512
dd W418-top+117440512
dd W420-top+117440512
dd W428-top+117440512
dd W430-top+117440512
dd W438-top
dd W439-top
dd W43A-top
dd W43B-top
dd W43C-top
dd r_illegal-top+33554432
dd W440-top+117440512
dd r_illegal-top+117440512
dd W450-top+117440512
dd W458-top+117440512
dd W460-top+117440512
dd W468-top+117440512
dd W470-top+117440512
dd W478-top
dd W479-top
dd W47A-top
dd W47B-top
dd W47C-top
dd r_illegal-top+33554432
dd W480-top+117440512
dd r_illegal-top+117440512
dd W490-top+117440512
dd W498-top+117440512
dd W4A0-top+117440512
dd W4A8-top+117440512
dd W4B0-top+117440512
dd W4B8-top
dd W4B9-top
dd W4BA-top
dd W4BB-top
dd W4BC-top
dd r_illegal-top+33554432
dd W4C0-top+117440512
dd r_illegal-top+117440512
dd W4D0-top+117440512
dd W4D8-top+117440512
dd W4E0-top+117440512
dd W4E8-top+117440512
dd W4F0-top+117440512
dd W4F8-top
dd W4F9-top
dd W4FA-top
dd W4FB-top
dd W4FC-top
dd r_illegal-top+33554432
dd W500-top+117440512
dd W508-top+117440512
dd W510-top+117440512
dd W518-top+117440512
dd W520-top+117440512
dd W528-top+117440512
dd W530-top+117440512
dd W538-top
dd W539-top
dd r_illegal-top+83886080
dd W540-top+117440512
dd W548-top+117440512
dd W550-top+117440512
dd W558-top+117440512
dd W560-top+117440512
dd W568-top+117440512
dd W570-top+117440512
dd W578-top
dd W579-top
dd r_illegal-top+218103808
dd W588-top+117440512
dd W590-top+117440512
dd W598-top+117440512
dd W5A0-top+117440512
dd W5A8-top+117440512
dd W5B0-top+117440512
dd W5B8-top
dd W5B9-top
dd r_illegal-top+83886080
dd W5C0-top+117440512
dd r_illegal-top+117440512
dd W5D0-top+117440512
dd W5D8-top+117440512
dd W5E0-top+117440512
dd W5E8-top+117440512
dd W5F0-top+117440512
dd W5F8-top
dd W5F9-top
dd W5FA-top
dd W5FB-top
dd W5FC-top
dd r_illegal-top+33554432
dd W600-top+117440512
dd r_illegal-top+117440512
dd W610-top+117440512
dd W618-top+117440512
dd W620-top+117440512
dd W628-top+117440512
dd W630-top+117440512
dd W638-top
dd W639-top
dd W63A-top
dd W63B-top
dd W63C-top
dd r_illegal-top+33554432
dd W640-top+117440512
dd r_illegal-top+117440512
dd W650-top+117440512
dd W658-top+117440512
dd W660-top+117440512
dd W668-top+117440512
dd W670-top+117440512
dd W678-top
dd W679-top
dd W67A-top
dd W67B-top
dd W67C-top
dd r_illegal-top+33554432
dd W680-top+117440512
dd r_illegal-top+117440512
dd W690-top+117440512
dd W698-top+117440512
dd W6A0-top+117440512
dd W6A8-top+117440512
dd W6B0-top+117440512
dd W6B8-top
dd W6B9-top
dd W6BA-top
dd W6BB-top
dd W6BC-top
dd r_illegal-top+33554432
dd W6C0-top+117440512
dd r_illegal-top+117440512
dd W6D0-top+117440512
dd W6D8-top+117440512
dd W6E0-top+117440512
dd W6E8-top+117440512
dd W6F0-top+117440512
dd W6F8-top
dd W6F9-top
dd W6FA-top
dd W6FB-top
dd W6FC-top
dd r_illegal-top+33554432
dd W700-top+117440512
dd W708-top+117440512
dd W710-top+117440512
dd W718-top+117440512
dd W720-top+117440512
dd W728-top+117440512
dd W730-top+117440512
dd W738-top
dd W739-top
dd r_illegal-top+83886080
dd W740-top+117440512
dd W748-top+117440512
dd W750-top+117440512
dd W758-top+117440512
dd W760-top+117440512
dd W768-top+117440512
dd W770-top+117440512
dd W778-top
dd W779-top
dd r_illegal-top+218103808
dd W788-top+117440512
dd W790-top+117440512
dd W798-top+117440512
dd W7A0-top+117440512
dd W7A8-top+117440512
dd W7B0-top+117440512
dd W7B8-top
dd W7B9-top
dd r_illegal-top+83886080
dd W7C0-top+117440512
dd r_illegal-top+117440512
dd W7D0-top+117440512
dd W7D8-top+117440512
dd W7E0-top+117440512
dd W7E8-top+117440512
dd W7F0-top+117440512
dd W7F8-top
dd W7F9-top
dd W7FA-top
dd W7FB-top
dd W7FC-top
dd r_illegal-top+33554432
dd W800-top+117440512
dd r_illegal-top+117440512
dd W810-top+117440512
dd W818-top+117440512
dd W820-top+117440512
dd W828-top+117440512
dd W830-top+117440512
dd W838-top
dd W839-top
dd W83A-top
dd W83B-top
dd W83C-top
dd r_illegal-top+33554432
dd W840-top+117440512
dd r_illegal-top+117440512
dd W850-top+117440512
dd W858-top+117440512
dd W860-top+117440512
dd W868-top+117440512
dd W870-top+117440512
dd W878-top
dd W879-top
dd W87A-top
dd W87B-top
dd W87C-top
dd r_illegal-top+33554432
dd W880-top+117440512
dd r_illegal-top+117440512
dd W890-top+117440512
dd W898-top+117440512
dd W8A0-top+117440512
dd W8A8-top+117440512
dd W8B0-top+117440512
dd W8B8-top
dd W8B9-top
dd W8BA-top
dd W8BB-top
dd W8BC-top
dd r_illegal-top+33554432
dd W8C0-top+117440512
dd r_illegal-top+117440512
dd W8D0-top+117440512
dd W8D8-top+117440512
dd W8E0-top+117440512
dd W8E8-top+117440512
dd W8F0-top+117440512
dd W8F8-top
dd W8F9-top
dd W8FA-top
dd W8FB-top
dd W8FC-top
dd r_illegal-top+33554432
dd W900-top+117440512
dd W908-top+117440512
dd W910-top+117440512
dd W918-top+117440512
dd W920-top+117440512
dd W928-top+117440512
dd W930-top+117440512
dd W938-top
dd W939-top
dd r_illegal-top+83886080
dd W940-top+117440512
dd W948-top+117440512
dd W950-top+117440512
dd W958-top+117440512
dd W960-top+117440512
dd W968-top+117440512
dd W970-top+117440512
dd W978-top
dd W979-top
dd r_illegal-top+218103808
dd W988-top+117440512
dd W990-top+117440512
dd W998-top+117440512
dd W9A0-top+117440512
dd W9A8-top+117440512
dd W9B0-top+117440512
dd W9B8-top
dd W9B9-top
dd r_illegal-top+83886080
dd W9C0-top+117440512
dd r_illegal-top+117440512
dd W9D0-top+117440512
dd W9D8-top+117440512
dd W9E0-top+117440512
dd W9E8-top+117440512
dd W9F0-top+117440512
dd W9F8-top
dd W9F9-top
dd W9FA-top
dd W9FB-top
dd W9FC-top
dd r_illegal-top+33554432
dd WA00-top+117440512
dd r_illegal-top+117440512
dd WA10-top+117440512
dd WA18-top+117440512
dd WA20-top+117440512
dd WA28-top+117440512
dd WA30-top+117440512
dd WA38-top
dd WA39-top
dd WA3A-top
dd WA3B-top
dd WA3C-top
dd r_illegal-top+33554432
dd WA40-top+117440512
dd r_illegal-top+117440512
dd WA50-top+117440512
dd WA58-top+117440512
dd WA60-top+117440512
dd WA68-top+117440512
dd WA70-top+117440512
dd WA78-top
dd WA79-top
dd WA7A-top
dd WA7B-top
dd WA7C-top
dd r_illegal-top+33554432
dd WA80-top+117440512
dd r_illegal-top+117440512
dd WA90-top+117440512
dd WA98-top+117440512
dd WAA0-top+117440512
dd WAA8-top+117440512
dd WAB0-top+117440512
dd WAB8-top
dd WAB9-top
dd WABA-top
dd WABB-top
dd WABC-top
dd r_illegal-top+33554432
dd WAC0-top+117440512
dd r_illegal-top+117440512
dd WAD0-top+117440512
dd WAD8-top+117440512
dd WAE0-top+117440512
dd WAE8-top+117440512
dd WAF0-top+117440512
dd WAF8-top
dd WAF9-top
dd WAFA-top
dd WAFB-top
dd WAFC-top
dd r_illegal-top+33554432
dd WB00-top+117440512
dd WB08-top+117440512
dd WB10-top+117440512
dd WB18-top+117440512
dd WB20-top+117440512
dd WB28-top+117440512
dd WB30-top+117440512
dd WB38-top
dd WB39-top
dd r_illegal-top+83886080
dd WB40-top+117440512
dd WB48-top+117440512
dd WB50-top+117440512
dd WB58-top+117440512
dd WB60-top+117440512
dd WB68-top+117440512
dd WB70-top+117440512
dd WB78-top
dd WB79-top
dd r_illegal-top+218103808
dd WB88-top+117440512
dd WB90-top+117440512
dd WB98-top+117440512
dd WBA0-top+117440512
dd WBA8-top+117440512
dd WBB0-top+117440512
dd WBB8-top
dd WBB9-top
dd r_illegal-top+83886080
dd WBC0-top+117440512
dd r_illegal-top+117440512
dd WBD0-top+117440512
dd WBD8-top+117440512
dd WBE0-top+117440512
dd WBE8-top+117440512
dd WBF0-top+117440512
dd WBF8-top
dd WBF9-top
dd WBFA-top
dd WBFB-top
dd WBFC-top
dd r_illegal-top+33554432
dd WC00-top+117440512
dd r_illegal-top+117440512
dd WC10-top+117440512
dd WC18-top+117440512
dd WC20-top+117440512
dd WC28-top+117440512
dd WC30-top+117440512
dd WC38-top
dd WC39-top
dd WC3A-top
dd WC3B-top
dd WC3C-top
dd r_illegal-top+33554432
dd WC40-top+117440512
dd r_illegal-top+117440512
dd WC50-top+117440512
dd WC58-top+117440512
dd WC60-top+117440512
dd WC68-top+117440512
dd WC70-top+117440512
dd WC78-top
dd WC79-top
dd WC7A-top
dd WC7B-top
dd WC7C-top
dd r_illegal-top+33554432
dd WC80-top+117440512
dd r_illegal-top+117440512
dd WC90-top+117440512
dd WC98-top+117440512
dd WCA0-top+117440512
dd WCA8-top+117440512
dd WCB0-top+117440512
dd WCB8-top
dd WCB9-top
dd WCBA-top
dd WCBB-top
dd WCBC-top
dd r_illegal-top+33554432
dd WCC0-top+117440512
dd r_illegal-top+117440512
dd WCD0-top+117440512
dd WCD8-top+117440512
dd WCE0-top+117440512
dd WCE8-top+117440512
dd WCF0-top+117440512
dd WCF8-top
dd WCF9-top
dd WCFA-top
dd WCFB-top
dd WCFC-top
dd r_illegal-top+33554432
dd WD00-top+117440512
dd WD08-top+117440512
dd WD10-top+117440512
dd WD18-top+117440512
dd WD20-top+117440512
dd WD28-top+117440512
dd WD30-top+117440512
dd WD38-top
dd WD39-top
dd r_illegal-top+83886080
dd WD40-top+117440512
dd WD48-top+117440512
dd WD50-top+117440512
dd WD58-top+117440512
dd WD60-top+117440512
dd WD68-top+117440512
dd WD70-top+117440512
dd WD78-top
dd WD79-top
dd r_illegal-top+218103808
dd WD88-top+117440512
dd WD90-top+117440512
dd WD98-top+117440512
dd WDA0-top+117440512
dd WDA8-top+117440512
dd WDB0-top+117440512
dd WDB8-top
dd WDB9-top
dd r_illegal-top+83886080
dd WDC0-top+117440512
dd r_illegal-top+117440512
dd WDD0-top+117440512
dd WDD8-top+117440512
dd WDE0-top+117440512
dd WDE8-top+117440512
dd WDF0-top+117440512
dd WDF8-top
dd WDF9-top
dd WDFA-top
dd WDFB-top
dd WDFC-top
dd r_illegal-top+33554432
dd WE00-top+117440512
dd r_illegal-top+117440512
dd WE10-top+117440512
dd WE18-top+117440512
dd WE20-top+117440512
dd WE28-top+117440512
dd WE30-top+117440512
dd WE38-top
dd WE39-top
dd WE3A-top
dd WE3B-top
dd WE3C-top
dd r_illegal-top+33554432
dd WE40-top+117440512
dd r_illegal-top+117440512
dd WE50-top+117440512
dd WE58-top+117440512
dd WE60-top+117440512
dd WE68-top+117440512
dd WE70-top+117440512
dd WE78-top
dd WE79-top
dd WE7A-top
dd WE7B-top
dd WE7C-top
dd r_illegal-top+33554432
dd WE80-top+117440512
dd r_illegal-top+117440512
dd WE90-top+117440512
dd WE98-top+117440512
dd WEA0-top+117440512
dd WEA8-top+117440512
dd WEB0-top+117440512
dd WEB8-top
dd WEB9-top
dd WEBA-top
dd WEBB-top
dd WEBC-top
dd r_illegal-top+33554432
dd WEC0-top+117440512
dd r_illegal-top+117440512
dd WED0-top+117440512
dd WED8-top+117440512
dd WEE0-top+117440512
dd WEE8-top+117440512
dd WEF0-top+117440512
dd WEF8-top
dd WEF9-top
dd WEFA-top
dd WEFB-top
dd WEFC-top
dd r_illegal-top+33554432
dd WF00-top+117440512
dd WF08-top+117440512
dd WF10-top+117440512
dd WF18-top+117440512
dd WF20-top+117440512
dd WF28-top+117440512
dd WF30-top+117440512
dd WF38-top
dd WF39-top
dd r_illegal-top+83886080
dd WF40-top+117440512
dd WF48-top+117440512
dd WF50-top+117440512
dd WF58-top+117440512
dd WF60-top+117440512
dd WF68-top+117440512
dd WF70-top+117440512
dd WF78-top
dd WF79-top
dd r_illegal-top+218103808
dd WF88-top+117440512
dd WF90-top+117440512
dd WF98-top+117440512
dd WFA0-top+117440512
dd WFA8-top+117440512
dd WFB0-top+117440512
dd WFB8-top
dd WFB9-top
dd r_illegal-top+83886080
dd WFC0-top+117440512
dd r_illegal-top+117440512
dd WFD0-top+117440512
dd WFD8-top+117440512
dd WFE0-top+117440512
dd WFE8-top+117440512
dd WFF0-top+117440512
dd WFF8-top
dd WFF9-top
dd WFFA-top
dd WFFB-top
dd WFFC-top
dd r_illegal-top+33554432
dd X000-top+117440512
dd r_illegal-top+117440512
dd X010-top+117440512
dd X018-top+117440512
dd X020-top+117440512
dd X028-top+117440512
dd X030-top+117440512
dd X038-top
dd X039-top
dd X03A-top
dd X03B-top
dd X03C-top
dd r_illegal-top+33554432
dd X040-top+117440512
dd X048-top+117440512
dd X050-top+117440512
dd X058-top+117440512
dd X060-top+117440512
dd X068-top+117440512
dd X070-top+117440512
dd X078-top
dd X079-top
dd X07A-top
dd X07B-top
dd X07C-top
dd r_illegal-top+33554432
dd X080-top+117440512
dd X088-top+117440512
dd X090-top+117440512
dd X098-top+117440512
dd X0A0-top+117440512
dd X0A8-top+117440512
dd X0B0-top+117440512
dd X0B8-top
dd X0B9-top
dd X0BA-top
dd X0BB-top
dd X0BC-top
dd r_illegal-top+33554432
dd X0C0-top+117440512
dd X0C8-top+117440512
dd X0D0-top+117440512
dd X0D8-top+117440512
dd X0E0-top+117440512
dd X0E8-top+117440512
dd X0F0-top+117440512
dd X0F8-top
dd X0F9-top
dd X0FA-top
dd X0FB-top
dd X0FC-top
dd r_illegal-top+33554432
dd X100-top+117440512
dd X108-top+117440512
dd X110-top+117440512
dd X118-top+117440512
dd X120-top+117440512
dd X128-top+117440512
dd X130-top+117440512
dd X138-top
dd X139-top
dd r_illegal-top+83886080
dd X140-top+117440512
dd X148-top+117440512
dd X150-top+117440512
dd X158-top+117440512
dd X160-top+117440512
dd X168-top+117440512
dd X170-top+117440512
dd X178-top
dd X179-top
dd r_illegal-top+83886080
dd X180-top+117440512
dd X188-top+117440512
dd X190-top+117440512
dd X198-top+117440512
dd X1A0-top+117440512
dd X1A8-top+117440512
dd X1B0-top+117440512
dd X1B8-top
dd X1B9-top
dd r_illegal-top+83886080
dd X1C0-top+117440512
dd X1C8-top+117440512
dd X1D0-top+117440512
dd X1D8-top+117440512
dd X1E0-top+117440512
dd X1E8-top+117440512
dd X1F0-top+117440512
dd X1F8-top
dd X1F9-top
dd X1FA-top
dd X1FB-top
dd X1FC-top
dd r_illegal-top+33554432
dd X200-top+117440512
dd r_illegal-top+117440512
dd X210-top+117440512
dd X218-top+117440512
dd X220-top+117440512
dd X228-top+117440512
dd X230-top+117440512
dd X238-top
dd X239-top
dd X23A-top
dd X23B-top
dd X23C-top
dd r_illegal-top+33554432
dd X240-top+117440512
dd X248-top+117440512
dd X250-top+117440512
dd X258-top+117440512
dd X260-top+117440512
dd X268-top+117440512
dd X270-top+117440512
dd X278-top
dd X279-top
dd X27A-top
dd X27B-top
dd X27C-top
dd r_illegal-top+33554432
dd X280-top+117440512
dd X288-top+117440512
dd X290-top+117440512
dd X298-top+117440512
dd X2A0-top+117440512
dd X2A8-top+117440512
dd X2B0-top+117440512
dd X2B8-top
dd X2B9-top
dd X2BA-top
dd X2BB-top
dd X2BC-top
dd r_illegal-top+33554432
dd X2C0-top+117440512
dd X2C8-top+117440512
dd X2D0-top+117440512
dd X2D8-top+117440512
dd X2E0-top+117440512
dd X2E8-top+117440512
dd X2F0-top+117440512
dd X2F8-top
dd X2F9-top
dd X2FA-top
dd X2FB-top
dd X2FC-top
dd r_illegal-top+33554432
dd X300-top+117440512
dd X308-top+117440512
dd X310-top+117440512
dd X318-top+117440512
dd X320-top+117440512
dd X328-top+117440512
dd X330-top+117440512
dd X338-top
dd X339-top
dd r_illegal-top+83886080
dd X340-top+117440512
dd X348-top+117440512
dd X350-top+117440512
dd X358-top+117440512
dd X360-top+117440512
dd X368-top+117440512
dd X370-top+117440512
dd X378-top
dd X379-top
dd r_illegal-top+83886080
dd X380-top+117440512
dd X388-top+117440512
dd X390-top+117440512
dd X398-top+117440512
dd X3A0-top+117440512
dd X3A8-top+117440512
dd X3B0-top+117440512
dd X3B8-top
dd X3B9-top
dd r_illegal-top+83886080
dd X3C0-top+117440512
dd X3C8-top+117440512
dd X3D0-top+117440512
dd X3D8-top+117440512
dd X3E0-top+117440512
dd X3E8-top+117440512
dd X3F0-top+117440512
dd X3F8-top
dd X3F9-top
dd X3FA-top
dd X3FB-top
dd X3FC-top
dd r_illegal-top+33554432
dd X400-top+117440512
dd r_illegal-top+117440512
dd X410-top+117440512
dd X418-top+117440512
dd X420-top+117440512
dd X428-top+117440512
dd X430-top+117440512
dd X438-top
dd X439-top
dd X43A-top
dd X43B-top
dd X43C-top
dd r_illegal-top+33554432
dd X440-top+117440512
dd X448-top+117440512
dd X450-top+117440512
dd X458-top+117440512
dd X460-top+117440512
dd X468-top+117440512
dd X470-top+117440512
dd X478-top
dd X479-top
dd X47A-top
dd X47B-top
dd X47C-top
dd r_illegal-top+33554432
dd X480-top+117440512
dd X488-top+117440512
dd X490-top+117440512
dd X498-top+117440512
dd X4A0-top+117440512
dd X4A8-top+117440512
dd X4B0-top+117440512
dd X4B8-top
dd X4B9-top
dd X4BA-top
dd X4BB-top
dd X4BC-top
dd r_illegal-top+33554432
dd X4C0-top+117440512
dd X4C8-top+117440512
dd X4D0-top+117440512
dd X4D8-top+117440512
dd X4E0-top+117440512
dd X4E8-top+117440512
dd X4F0-top+117440512
dd X4F8-top
dd X4F9-top
dd X4FA-top
dd X4FB-top
dd X4FC-top
dd r_illegal-top+33554432
dd X500-top+117440512
dd X508-top+117440512
dd X510-top+117440512
dd X518-top+117440512
dd X520-top+117440512
dd X528-top+117440512
dd X530-top+117440512
dd X538-top
dd X539-top
dd r_illegal-top+83886080
dd X540-top+117440512
dd X548-top+117440512
dd X550-top+117440512
dd X558-top+117440512
dd X560-top+117440512
dd X568-top+117440512
dd X570-top+117440512
dd X578-top
dd X579-top
dd r_illegal-top+83886080
dd X580-top+117440512
dd X588-top+117440512
dd X590-top+117440512
dd X598-top+117440512
dd X5A0-top+117440512
dd X5A8-top+117440512
dd X5B0-top+117440512
dd X5B8-top
dd X5B9-top
dd r_illegal-top+83886080
dd X5C0-top+117440512
dd X5C8-top+117440512
dd X5D0-top+117440512
dd X5D8-top+117440512
dd X5E0-top+117440512
dd X5E8-top+117440512
dd X5F0-top+117440512
dd X5F8-top
dd X5F9-top
dd X5FA-top
dd X5FB-top
dd X5FC-top
dd r_illegal-top+33554432
dd X600-top+117440512
dd r_illegal-top+117440512
dd X610-top+117440512
dd X618-top+117440512
dd X620-top+117440512
dd X628-top+117440512
dd X630-top+117440512
dd X638-top
dd X639-top
dd X63A-top
dd X63B-top
dd X63C-top
dd r_illegal-top+33554432
dd X640-top+117440512
dd X648-top+117440512
dd X650-top+117440512
dd X658-top+117440512
dd X660-top+117440512
dd X668-top+117440512
dd X670-top+117440512
dd X678-top
dd X679-top
dd X67A-top
dd X67B-top
dd X67C-top
dd r_illegal-top+33554432
dd X680-top+117440512
dd X688-top+117440512
dd X690-top+117440512
dd X698-top+117440512
dd X6A0-top+117440512
dd X6A8-top+117440512
dd X6B0-top+117440512
dd X6B8-top
dd X6B9-top
dd X6BA-top
dd X6BB-top
dd X6BC-top
dd r_illegal-top+33554432
dd X6C0-top+117440512
dd X6C8-top+117440512
dd X6D0-top+117440512
dd X6D8-top+117440512
dd X6E0-top+117440512
dd X6E8-top+117440512
dd X6F0-top+117440512
dd X6F8-top
dd X6F9-top
dd X6FA-top
dd X6FB-top
dd X6FC-top
dd r_illegal-top+33554432
dd X700-top+117440512
dd X708-top+117440512
dd X710-top+117440512
dd X718-top+117440512
dd X720-top+117440512
dd X728-top+117440512
dd X730-top+117440512
dd X738-top
dd X739-top
dd r_illegal-top+83886080
dd X740-top+117440512
dd X748-top+117440512
dd X750-top+117440512
dd X758-top+117440512
dd X760-top+117440512
dd X768-top+117440512
dd X770-top+117440512
dd X778-top
dd X779-top
dd r_illegal-top+83886080
dd X780-top+117440512
dd X788-top+117440512
dd X790-top+117440512
dd X798-top+117440512
dd X7A0-top+117440512
dd X7A8-top+117440512
dd X7B0-top+117440512
dd X7B8-top
dd X7B9-top
dd r_illegal-top+83886080
dd X7C0-top+117440512
dd X7C8-top+117440512
dd X7D0-top+117440512
dd X7D8-top+117440512
dd X7E0-top+117440512
dd X7E8-top+117440512
dd X7F0-top+117440512
dd X7F8-top
dd X7F9-top
dd X7FA-top
dd X7FB-top
dd X7FC-top
dd r_illegal-top+33554432
dd X800-top+117440512
dd r_illegal-top+117440512
dd X810-top+117440512
dd X818-top+117440512
dd X820-top+117440512
dd X828-top+117440512
dd X830-top+117440512
dd X838-top
dd X839-top
dd X83A-top
dd X83B-top
dd X83C-top
dd r_illegal-top+33554432
dd X840-top+117440512
dd X848-top+117440512
dd X850-top+117440512
dd X858-top+117440512
dd X860-top+117440512
dd X868-top+117440512
dd X870-top+117440512
dd X878-top
dd X879-top
dd X87A-top
dd X87B-top
dd X87C-top
dd r_illegal-top+33554432
dd X880-top+117440512
dd X888-top+117440512
dd X890-top+117440512
dd X898-top+117440512
dd X8A0-top+117440512
dd X8A8-top+117440512
dd X8B0-top+117440512
dd X8B8-top
dd X8B9-top
dd X8BA-top
dd X8BB-top
dd X8BC-top
dd r_illegal-top+33554432
dd X8C0-top+117440512
dd X8C8-top+117440512
dd X8D0-top+117440512
dd X8D8-top+117440512
dd X8E0-top+117440512
dd X8E8-top+117440512
dd X8F0-top+117440512
dd X8F8-top
dd X8F9-top
dd X8FA-top
dd X8FB-top
dd X8FC-top
dd r_illegal-top+33554432
dd X900-top+117440512
dd X908-top+117440512
dd X910-top+117440512
dd X918-top+117440512
dd X920-top+117440512
dd X928-top+117440512
dd X930-top+117440512
dd X938-top
dd X939-top
dd r_illegal-top+83886080
dd X940-top+117440512
dd X948-top+117440512
dd X950-top+117440512
dd X958-top+117440512
dd X960-top+117440512
dd X968-top+117440512
dd X970-top+117440512
dd X978-top
dd X979-top
dd r_illegal-top+83886080
dd X980-top+117440512
dd X988-top+117440512
dd X990-top+117440512
dd X998-top+117440512
dd X9A0-top+117440512
dd X9A8-top+117440512
dd X9B0-top+117440512
dd X9B8-top
dd X9B9-top
dd r_illegal-top+83886080
dd X9C0-top+117440512
dd X9C8-top+117440512
dd X9D0-top+117440512
dd X9D8-top+117440512
dd X9E0-top+117440512
dd X9E8-top+117440512
dd X9F0-top+117440512
dd X9F8-top
dd X9F9-top
dd X9FA-top
dd X9FB-top
dd X9FC-top
dd r_illegal-top+33554432
dd XA00-top+117440512
dd r_illegal-top+117440512
dd XA10-top+117440512
dd XA18-top+117440512
dd XA20-top+117440512
dd XA28-top+117440512
dd XA30-top+117440512
dd XA38-top
dd XA39-top
dd XA3A-top
dd XA3B-top
dd XA3C-top
dd r_illegal-top+33554432
dd XA40-top+117440512
dd XA48-top+117440512
dd XA50-top+117440512
dd XA58-top+117440512
dd XA60-top+117440512
dd XA68-top+117440512
dd XA70-top+117440512
dd XA78-top
dd XA79-top
dd XA7A-top
dd XA7B-top
dd XA7C-top
dd r_illegal-top+33554432
dd XA80-top+117440512
dd XA88-top+117440512
dd XA90-top+117440512
dd XA98-top+117440512
dd XAA0-top+117440512
dd XAA8-top+117440512
dd XAB0-top+117440512
dd XAB8-top
dd XAB9-top
dd XABA-top
dd XABB-top
dd XABC-top
dd r_illegal-top+33554432
dd XAC0-top+117440512
dd XAC8-top+117440512
dd XAD0-top+117440512
dd XAD8-top+117440512
dd XAE0-top+117440512
dd XAE8-top+117440512
dd XAF0-top+117440512
dd XAF8-top
dd XAF9-top
dd XAFA-top
dd XAFB-top
dd XAFC-top
dd r_illegal-top+33554432
dd XB00-top+117440512
dd XB08-top+117440512
dd XB10-top+117440512
dd XB18-top+117440512
dd XB20-top+117440512
dd XB28-top+117440512
dd XB30-top+117440512
dd XB38-top
dd XB39-top
dd r_illegal-top+83886080
dd XB40-top+117440512
dd XB48-top+117440512
dd XB50-top+117440512
dd XB58-top+117440512
dd XB60-top+117440512
dd XB68-top+117440512
dd XB70-top+117440512
dd XB78-top
dd XB79-top
dd r_illegal-top+83886080
dd XB80-top+117440512
dd XB88-top+117440512
dd XB90-top+117440512
dd XB98-top+117440512
dd XBA0-top+117440512
dd XBA8-top+117440512
dd XBB0-top+117440512
dd XBB8-top
dd XBB9-top
dd r_illegal-top+83886080
dd XBC0-top+117440512
dd XBC8-top+117440512
dd XBD0-top+117440512
dd XBD8-top+117440512
dd XBE0-top+117440512
dd XBE8-top+117440512
dd XBF0-top+117440512
dd XBF8-top
dd XBF9-top
dd XBFA-top
dd XBFB-top
dd XBFC-top
dd r_illegal-top+33554432
dd XC00-top+117440512
dd r_illegal-top+117440512
dd XC10-top+117440512
dd XC18-top+117440512
dd XC20-top+117440512
dd XC28-top+117440512
dd XC30-top+117440512
dd XC38-top
dd XC39-top
dd XC3A-top
dd XC3B-top
dd XC3C-top
dd r_illegal-top+33554432
dd XC40-top+117440512
dd XC48-top+117440512
dd XC50-top+117440512
dd XC58-top+117440512
dd XC60-top+117440512
dd XC68-top+117440512
dd XC70-top+117440512
dd XC78-top
dd XC79-top
dd XC7A-top
dd XC7B-top
dd XC7C-top
dd r_illegal-top+33554432
dd XC80-top+117440512
dd XC88-top+117440512
dd XC90-top+117440512
dd XC98-top+117440512
dd XCA0-top+117440512
dd XCA8-top+117440512
dd XCB0-top+117440512
dd XCB8-top
dd XCB9-top
dd XCBA-top
dd XCBB-top
dd XCBC-top
dd r_illegal-top+33554432
dd XCC0-top+117440512
dd XCC8-top+117440512
dd XCD0-top+117440512
dd XCD8-top+117440512
dd XCE0-top+117440512
dd XCE8-top+117440512
dd XCF0-top+117440512
dd XCF8-top
dd XCF9-top
dd XCFA-top
dd XCFB-top
dd XCFC-top
dd r_illegal-top+33554432
dd XD00-top+117440512
dd XD08-top+117440512
dd XD10-top+117440512
dd XD18-top+117440512
dd XD20-top+117440512
dd XD28-top+117440512
dd XD30-top+117440512
dd XD38-top
dd XD39-top
dd r_illegal-top+83886080
dd XD40-top+117440512
dd XD48-top+117440512
dd XD50-top+117440512
dd XD58-top+117440512
dd XD60-top+117440512
dd XD68-top+117440512
dd XD70-top+117440512
dd XD78-top
dd XD79-top
dd r_illegal-top+83886080
dd XD80-top+117440512
dd XD88-top+117440512
dd XD90-top+117440512
dd XD98-top+117440512
dd XDA0-top+117440512
dd XDA8-top+117440512
dd XDB0-top+117440512
dd XDB8-top
dd XDB9-top
dd r_illegal-top+83886080
dd XDC0-top+117440512
dd XDC8-top+117440512
dd XDD0-top+117440512
dd XDD8-top+117440512
dd XDE0-top+117440512
dd XDE8-top+117440512
dd XDF0-top+117440512
dd XDF8-top
dd XDF9-top
dd XDFA-top
dd XDFB-top
dd XDFC-top
dd r_illegal-top+33554432
dd XE00-top+117440512
dd r_illegal-top+117440512
dd XE10-top+117440512
dd XE18-top+117440512
dd XE20-top+117440512
dd XE28-top+117440512
dd XE30-top+117440512
dd XE38-top
dd XE39-top
dd XE3A-top
dd XE3B-top
dd XE3C-top
dd r_illegal-top+33554432
dd XE40-top+117440512
dd XE48-top+117440512
dd XE50-top+117440512
dd XE58-top+117440512
dd XE60-top+117440512
dd XE68-top+117440512
dd XE70-top+117440512
dd XE78-top
dd XE79-top
dd XE7A-top
dd XE7B-top
dd XE7C-top
dd r_illegal-top+33554432
dd XE80-top+117440512
dd XE88-top+117440512
dd XE90-top+117440512
dd XE98-top+117440512
dd XEA0-top+117440512
dd XEA8-top+117440512
dd XEB0-top+117440512
dd XEB8-top
dd XEB9-top
dd XEBA-top
dd XEBB-top
dd XEBC-top
dd r_illegal-top+33554432
dd XEC0-top+117440512
dd XEC8-top+117440512
dd XED0-top+117440512
dd XED8-top+117440512
dd XEE0-top+117440512
dd XEE8-top+117440512
dd XEF0-top+117440512
dd XEF8-top
dd XEF9-top
dd XEFA-top
dd XEFB-top
dd XEFC-top
dd r_illegal-top+33554432
dd XF00-top+117440512
dd XF08-top+117440512
dd XF10-top+117440512
dd XF18-top+117440512
dd XF20-top+117440512
dd XF28-top+117440512
dd XF30-top+117440512
dd XF38-top
dd XF39-top
dd r_illegal-top+83886080
dd XF40-top+117440512
dd XF48-top+117440512
dd XF50-top+117440512
dd XF58-top+117440512
dd XF60-top+117440512
dd XF68-top+117440512
dd XF70-top+117440512
dd XF78-top
dd XF79-top
dd r_illegal-top+83886080
dd XF80-top+117440512
dd XF88-top+117440512
dd XF90-top+117440512
dd XF98-top+117440512
dd XFA0-top+117440512
dd XFA8-top+117440512
dd XFB0-top+117440512
dd XFB8-top
dd XFB9-top
dd r_illegal-top+83886080
dd XFC0-top+117440512
dd XFC8-top+117440512
dd XFD0-top+117440512
dd XFD8-top+117440512
dd XFE0-top+117440512
dd XFE8-top+117440512
dd XFF0-top+117440512
dd XFF8-top
dd XFF9-top
dd XFFA-top
dd XFFB-top
dd XFFC-top
dd r_illegal-top+33554432
dd Y000-top+117440512
dd Y008-top+117440512
dd Y010-top+117440512
dd Y018-top+117440512
dd Y020-top+117440512
dd Y028-top+117440512
dd Y030-top+117440512
dd Y038-top+117440512
dd Y040-top+117440512
dd Y048-top+117440512
dd Y050-top+117440512
dd Y058-top+117440512
dd Y060-top+117440512
dd Y068-top+117440512
dd Y070-top+117440512
dd Y078-top+117440512
dd Y080-top+117440512
dd Y088-top+117440512
dd Y090-top+117440512
dd Y098-top+117440512
dd Y0A0-top+117440512
dd Y0A8-top+117440512
dd Y0B0-top+117440512
dd Y0B8-top+117440512
dd r_illegal-top+251658240
dd Y0D0-top+117440512
dd Y0D8-top+117440512
dd Y0E0-top+117440512
dd Y0E8-top+117440512
dd Y0F0-top+117440512
dd Y0F8-top
dd Y0F9-top
dd r_illegal-top+83886080
dd Y100-top+117440512
dd Y108-top+117440512
dd Y110-top+117440512
dd Y118-top+117440512
dd Y120-top+117440512
dd Y128-top+117440512
dd Y130-top+117440512
dd Y138-top+117440512
dd Y140-top+117440512
dd Y148-top+117440512
dd Y150-top+117440512
dd Y158-top+117440512
dd Y160-top+117440512
dd Y168-top+117440512
dd Y170-top+117440512
dd Y178-top+117440512
dd Y180-top+117440512
dd Y188-top+117440512
dd Y190-top+117440512
dd Y198-top+117440512
dd Y1A0-top+117440512
dd Y1A8-top+117440512
dd Y1B0-top+117440512
dd Y1B8-top+117440512
dd r_illegal-top+251658240
dd Y1D0-top+117440512
dd Y1D8-top+117440512
dd Y1E0-top+117440512
dd Y1E8-top+117440512
dd Y1F0-top+117440512
dd Y1F8-top
dd Y1F9-top
dd r_illegal-top+83886080
dd Y200-top+117440512
dd Y208-top+117440512
dd Y210-top+117440512
dd Y218-top+117440512
dd Y220-top+117440512
dd Y228-top+117440512
dd Y230-top+117440512
dd Y238-top+117440512
dd Y240-top+117440512
dd Y248-top+117440512
dd Y250-top+117440512
dd Y258-top+117440512
dd Y260-top+117440512
dd Y268-top+117440512
dd Y270-top+117440512
dd Y278-top+117440512
dd Y280-top+117440512
dd Y288-top+117440512
dd Y290-top+117440512
dd Y298-top+117440512
dd Y2A0-top+117440512
dd Y2A8-top+117440512
dd Y2B0-top+117440512
dd Y2B8-top+117440512
dd r_illegal-top+251658240
dd Y2D0-top+117440512
dd Y2D8-top+117440512
dd Y2E0-top+117440512
dd Y2E8-top+117440512
dd Y2F0-top+117440512
dd Y2F8-top
dd Y2F9-top
dd r_illegal-top+83886080
dd Y300-top+117440512
dd Y308-top+117440512
dd Y310-top+117440512
dd Y318-top+117440512
dd Y320-top+117440512
dd Y328-top+117440512
dd Y330-top+117440512
dd Y338-top+117440512
dd Y340-top+117440512
dd Y348-top+117440512
dd Y350-top+117440512
dd Y358-top+117440512
dd Y360-top+117440512
dd Y368-top+117440512
dd Y370-top+117440512
dd Y378-top+117440512
dd Y380-top+117440512
dd Y388-top+117440512
dd Y390-top+117440512
dd Y398-top+117440512
dd Y3A0-top+117440512
dd Y3A8-top+117440512
dd Y3B0-top+117440512
dd Y3B8-top+117440512
dd r_illegal-top+251658240
dd Y3D0-top+117440512
dd Y3D8-top+117440512
dd Y3E0-top+117440512
dd Y3E8-top+117440512
dd Y3F0-top+117440512
dd Y3F8-top
dd Y3F9-top
dd r_illegal-top+83886080
dd Y400-top+117440512
dd Y408-top+117440512
dd Y410-top+117440512
dd Y418-top+117440512
dd Y420-top+117440512
dd Y428-top+117440512
dd Y430-top+117440512
dd Y438-top+117440512
dd Y440-top+117440512
dd Y448-top+117440512
dd Y450-top+117440512
dd Y458-top+117440512
dd Y460-top+117440512
dd Y468-top+117440512
dd Y470-top+117440512
dd Y478-top+117440512
dd Y480-top+117440512
dd Y488-top+117440512
dd Y490-top+117440512
dd Y498-top+117440512
dd Y4A0-top+117440512
dd Y4A8-top+117440512
dd Y4B0-top+117440512
dd Y4B8-top+117440512
dd r_illegal-top+251658240
dd Y4D0-top+117440512
dd Y4D8-top+117440512
dd Y4E0-top+117440512
dd Y4E8-top+117440512
dd Y4F0-top+117440512
dd Y4F8-top
dd Y4F9-top
dd r_illegal-top+83886080
dd Y500-top+117440512
dd Y508-top+117440512
dd Y510-top+117440512
dd Y518-top+117440512
dd Y520-top+117440512
dd Y528-top+117440512
dd Y530-top+117440512
dd Y538-top+117440512
dd Y540-top+117440512
dd Y548-top+117440512
dd Y550-top+117440512
dd Y558-top+117440512
dd Y560-top+117440512
dd Y568-top+117440512
dd Y570-top+117440512
dd Y578-top+117440512
dd Y580-top+117440512
dd Y588-top+117440512
dd Y590-top+117440512
dd Y598-top+117440512
dd Y5A0-top+117440512
dd Y5A8-top+117440512
dd Y5B0-top+117440512
dd Y5B8-top+117440512
dd r_illegal-top+251658240
dd Y5D0-top+117440512
dd Y5D8-top+117440512
dd Y5E0-top+117440512
dd Y5E8-top+117440512
dd Y5F0-top+117440512
dd Y5F8-top
dd Y5F9-top
dd r_illegal-top+83886080
dd Y600-top+117440512
dd Y608-top+117440512
dd Y610-top+117440512
dd Y618-top+117440512
dd Y620-top+117440512
dd Y628-top+117440512
dd Y630-top+117440512
dd Y638-top+117440512
dd Y640-top+117440512
dd Y648-top+117440512
dd Y650-top+117440512
dd Y658-top+117440512
dd Y660-top+117440512
dd Y668-top+117440512
dd Y670-top+117440512
dd Y678-top+117440512
dd Y680-top+117440512
dd Y688-top+117440512
dd Y690-top+117440512
dd Y698-top+117440512
dd Y6A0-top+117440512
dd Y6A8-top+117440512
dd Y6B0-top+117440512
dd Y6B8-top+117440512
dd r_illegal-top+251658240
dd Y6D0-top+117440512
dd Y6D8-top+117440512
dd Y6E0-top+117440512
dd Y6E8-top+117440512
dd Y6F0-top+117440512
dd Y6F8-top
dd Y6F9-top
dd r_illegal-top+83886080
dd Y700-top+117440512
dd Y708-top+117440512
dd Y710-top+117440512
dd Y718-top+117440512
dd Y720-top+117440512
dd Y728-top+117440512
dd Y730-top+117440512
dd Y738-top+117440512
dd Y740-top+117440512
dd Y748-top+117440512
dd Y750-top+117440512
dd Y758-top+117440512
dd Y760-top+117440512
dd Y768-top+117440512
dd Y770-top+117440512
dd Y778-top+117440512
dd Y780-top+117440512
dd Y788-top+117440512
dd Y790-top+117440512
dd Y798-top+117440512
dd Y7A0-top+117440512
dd Y7A8-top+117440512
dd Y7B0-top+117440512
dd Y7B8-top+117440512
dd r_illegal-top+251658240
dd Y7D0-top+117440512
dd Y7D8-top+117440512
dd Y7E0-top+117440512
dd Y7E8-top+117440512
dd Y7F0-top+117440512
dd Y7F8-top
dd Y7F9-top
dd r_illegal-top+83886080
dd Y800-top+117440512
dd Y808-top+117440512
dd Y810-top+117440512
dd Y818-top+117440512
dd Y820-top+117440512
dd Y828-top+117440512
dd Y830-top+117440512
dd Y838-top+117440512
dd Y840-top+117440512
dd Y848-top+117440512
dd Y850-top+117440512
dd Y858-top+117440512
dd Y860-top+117440512
dd Y868-top+117440512
dd Y870-top+117440512
dd Y878-top+117440512
dd Y880-top+117440512
dd Y888-top+117440512
dd Y890-top+117440512
dd Y898-top+117440512
dd Y8A0-top+117440512
dd Y8A8-top+117440512
dd Y8B0-top+117440512
dd Y8B8-top+117440512
dd r_illegal-top+1056964608
dd Y900-top+117440512
dd Y908-top+117440512
dd Y910-top+117440512
dd Y918-top+117440512
dd Y920-top+117440512
dd Y928-top+117440512
dd Y930-top+117440512
dd Y938-top+117440512
dd Y940-top+117440512
dd Y948-top+117440512
dd Y950-top+117440512
dd Y958-top+117440512
dd Y960-top+117440512
dd Y968-top+117440512
dd Y970-top+117440512
dd Y978-top+117440512
dd Y980-top+117440512
dd Y988-top+117440512
dd Y990-top+117440512
dd Y998-top+117440512
dd Y9A0-top+117440512
dd Y9A8-top+117440512
dd Y9B0-top+117440512
dd Y9B8-top+117440512
dd r_illegal-top+1056964608
dd YA00-top+117440512
dd YA08-top+117440512
dd YA10-top+117440512
dd YA18-top+117440512
dd YA20-top+117440512
dd YA28-top+117440512
dd YA30-top+117440512
dd YA38-top+117440512
dd YA40-top+117440512
dd YA48-top+117440512
dd YA50-top+117440512
dd YA58-top+117440512
dd YA60-top+117440512
dd YA68-top+117440512
dd YA70-top+117440512
dd YA78-top+117440512
dd YA80-top+117440512
dd YA88-top+117440512
dd YA90-top+117440512
dd YA98-top+117440512
dd YAA0-top+117440512
dd YAA8-top+117440512
dd YAB0-top+117440512
dd YAB8-top+117440512
dd r_illegal-top+1056964608
dd YB00-top+117440512
dd YB08-top+117440512
dd YB10-top+117440512
dd YB18-top+117440512
dd YB20-top+117440512
dd YB28-top+117440512
dd YB30-top+117440512
dd YB38-top+117440512
dd YB40-top+117440512
dd YB48-top+117440512
dd YB50-top+117440512
dd YB58-top+117440512
dd YB60-top+117440512
dd YB68-top+117440512
dd YB70-top+117440512
dd YB78-top+117440512
dd YB80-top+117440512
dd YB88-top+117440512
dd YB90-top+117440512
dd YB98-top+117440512
dd YBA0-top+117440512
dd YBA8-top+117440512
dd YBB0-top+117440512
dd YBB8-top+117440512
dd r_illegal-top+1056964608
dd YC00-top+117440512
dd YC08-top+117440512
dd YC10-top+117440512
dd YC18-top+117440512
dd YC20-top+117440512
dd YC28-top+117440512
dd YC30-top+117440512
dd YC38-top+117440512
dd YC40-top+117440512
dd YC48-top+117440512
dd YC50-top+117440512
dd YC58-top+117440512
dd YC60-top+117440512
dd YC68-top+117440512
dd YC70-top+117440512
dd YC78-top+117440512
dd YC80-top+117440512
dd YC88-top+117440512
dd YC90-top+117440512
dd YC98-top+117440512
dd YCA0-top+117440512
dd YCA8-top+117440512
dd YCB0-top+117440512
dd YCB8-top+117440512
dd r_illegal-top+1056964608
dd YD00-top+117440512
dd YD08-top+117440512
dd YD10-top+117440512
dd YD18-top+117440512
dd YD20-top+117440512
dd YD28-top+117440512
dd YD30-top+117440512
dd YD38-top+117440512
dd YD40-top+117440512
dd YD48-top+117440512
dd YD50-top+117440512
dd YD58-top+117440512
dd YD60-top+117440512
dd YD68-top+117440512
dd YD70-top+117440512
dd YD78-top+117440512
dd YD80-top+117440512
dd YD88-top+117440512
dd YD90-top+117440512
dd YD98-top+117440512
dd YDA0-top+117440512
dd YDA8-top+117440512
dd YDB0-top+117440512
dd YDB8-top+117440512
dd r_illegal-top+1056964608
dd YE00-top+117440512
dd YE08-top+117440512
dd YE10-top+117440512
dd YE18-top+117440512
dd YE20-top+117440512
dd YE28-top+117440512
dd YE30-top+117440512
dd YE38-top+117440512
dd YE40-top+117440512
dd YE48-top+117440512
dd YE50-top+117440512
dd YE58-top+117440512
dd YE60-top+117440512
dd YE68-top+117440512
dd YE70-top+117440512
dd YE78-top+117440512
dd YE80-top+117440512
dd YE88-top+117440512
dd YE90-top+117440512
dd YE98-top+117440512
dd YEA0-top+117440512
dd YEA8-top+117440512
dd YEB0-top+117440512
dd YEB8-top+117440512
dd r_illegal-top+1056964608
dd YF00-top+117440512
dd YF08-top+117440512
dd YF10-top+117440512
dd YF18-top+117440512
dd YF20-top+117440512
dd YF28-top+117440512
dd YF30-top+117440512
dd YF38-top+117440512
dd YF40-top+117440512
dd YF48-top+117440512
dd YF50-top+117440512
dd YF58-top+117440512
dd YF60-top+117440512
dd YF68-top+117440512
dd YF70-top+117440512
dd YF78-top+117440512
dd YF80-top+117440512
dd YF88-top+117440512
dd YF90-top+117440512
dd YF98-top+117440512
dd YFA0-top+117440512
dd YFA8-top+117440512
dd YFB0-top+117440512
dd YFB8-top+117440512
dd r_illegal-top+1056964608
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
dd Z000-top+4278190080
times ($$-$)&3 db 0
end
